(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    304480,       7293]
NotebookOptionsPosition[    296010,       7039]
NotebookOutlinePosition[    296470,       7057]
CellTagsIndexPosition[    296427,       7054]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{
   RowBox[{"InputNotebook", "[", "]"}], ",", 
   RowBox[{"AutoGeneratedPackage", "\[Rule]", "Automatic"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.634879243199771*^9, 3.63487924320041*^9}}],

Cell[CellGroupData[{

Cell["Useful Functions", "Section",
 InitializationGroup->True,
 CellChangeTimes->{{3.573367082134974*^9, 3.5733670897975693`*^9}, {
  3.592720225402108*^9, 3.592720231441588*^9}}],

Cell["Some of Georgs most used Mathematica function", "Text",
 InitializationGroup->True,
 CellChangeTimes->{{3.442900592427311*^9, 3.44290061442954*^9}, {
  3.644641172726172*^9, 3.644641174885894*^9}}],

Cell[CellGroupData[{

Cell["File loading", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.4359943952936687`*^9, 3.435994399372429*^9}}],

Cell["\<\
Returns all the filenames with a given pattern in the given directory.
Very useful to select the right log file, or e.g. process all logfile.\
\>", "Text",
 InitializationGroup->True,
 CellChangeTimes->{{3.442900970163503*^9, 3.442901019461918*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetFiles", "[", 
   RowBox[{"dir_String", ",", "pattern_"}], "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pwd", ",", "fs"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pwd", "=", " ", 
      RowBox[{"Directory", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"SetDirectory", "[", "dir", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"fs", "=", " ", 
      RowBox[{"FileNames", "[", "pattern", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"SetDirectory", "[", "pwd", "]"}], ";", "\[IndentingNewLine]", 
     " ", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dir", "<>", "#"}], " ", "&"}], " ", ",", " ", "fs"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.391141305139172*^9, 3.39114136021063*^9}, {
   3.391141401083933*^9, 3.391141410575386*^9}, {3.39114147076079*^9, 
   3.391141474361887*^9}, 3.391141506295325*^9, {3.39114154002906*^9, 
   3.391141564549258*^9}, {3.391141731455347*^9, 3.39114174282827*^9}, {
   3.396181477115037*^9, 3.396181626721871*^9}, {3.396181658921996*^9, 
   3.396181944162096*^9}, {3.396182076437807*^9, 3.39618208227964*^9}, 
   3.396343256727482*^9, {3.398059015601169*^9, 3.398059076123001*^9}, {
   3.398059146241607*^9, 3.398059148116814*^9}, {3.435994720303349*^9, 
   3.435994722613069*^9}, 3.58364149346637*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.435994505660961*^9, 3.435994506749198*^9}}],

Cell["\<\
Calculates size of image (to use with ImageSize ->) based on Pagefraction\
\>", "Text",
 InitializationGroup->True,
 CellChangeTimes->{{3.442901028368424*^9, 3.442901055626556*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CalcImgSize", "[", "pagefraction_", "]"}], ":=", 
   RowBox[{"460", "pagefraction"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.433156285711525*^9, 3.433156318205738*^9}, {
  3.433156414203603*^9, 3.433156414661931*^9}, {3.433156446550571*^9, 
  3.4331564473265038`*^9}, {3.433156538142037*^9, 3.433156556744029*^9}, {
  3.433156596147155*^9, 3.433156599781262*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "creates", " ", "m", " ", "colors", " ", "from", " ", "\"\<indexed\>\"", 
    " ", "schemes", " ", "n"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Colors", "[", 
    RowBox[{"n_Integer", ",", "m_Integer"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ColorData", "[", "n", "]"}], "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "m"}], "}"}]}], "]"}]}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.42952618746694*^9, 3.429526251483683*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ColorsFromScheme", "[", 
   RowBox[{"n_Integer", ",", "scheme_String"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ColorData", "[", "scheme", "]"}], "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1", ",", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}]}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.573376062104108*^9, 3.5733761157682743`*^9}, {
  3.573376157729244*^9, 3.573376161792255*^9}}],

Cell["\<\
Set the font style in Plot and ListPlot3D (add ListLinePlot and the like if \
required)\
\>", "Text",
 InitializationGroup->True,
 CellChangeTimes->{{3.442901120981939*^9, 3.442901155154795*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "Times"}], ",", 
       RowBox[{"FontSize", "\[Rule]", "10"}]}], "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "None"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ListPlot3D", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "Times"}], ",", 
       RowBox[{"FontSize", "\[Rule]", "10"}]}], "]"}]}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "None"}]}], "]"}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.434438914055556*^9, 3.434438965832294*^9}, {
  3.434447642576483*^9, 3.434447651687138*^9}, {3.6346345306227617`*^9, 
  3.634634534069324*^9}, {3.635049997371517*^9, 3.635050003219543*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SetOptions", "::", "optnf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(PlotTheme\\)\[NoBreak] is not a known \
option for \[NoBreak]\\!\\(Plot\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/SetOptions/optnf\\\", ButtonNote -> \
\\\"SetOptions::optnf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.644900511447288*^9, 3.64490051664717*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SetOptions", "::", "optnf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(PlotTheme\\)\[NoBreak] is not a known \
option for \[NoBreak]\\!\\(ListPlot3D\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/SetOptions/optnf\\\", ButtonNote -> \
\\\"SetOptions::optnf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.644900511447288*^9, 3.644900516712662*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ListLogLinearPlot", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "Times"}], ",", 
       RowBox[{"FontSize", "\[Rule]", "10"}]}], "]"}]}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "None"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.634634364497356*^9, 3.6346343679542303`*^9}, {
   3.634634442066832*^9, 3.634634454708914*^9}, 3.6350497569936047`*^9, {
   3.6350498494495897`*^9, 3.635049851860807*^9}, {3.635049972042139*^9, 
   3.635050008875017*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SetOptions", "::", "optnf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(PlotTheme\\)\[NoBreak] is not a known \
option for \[NoBreak]\\!\\(ListLogLinearPlot\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/SetOptions/optnf\\\", \
ButtonNote -> \\\"SetOptions::optnf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.644900511622748*^9, 3.644900516807172*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["LinePlotting that uses third dimension for coloring", "Subsection",
 CellChangeTimes->{{3.61389902245439*^9, 3.6138990416718397`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ListLinePlot2p5D", "]"}], "=", 
   RowBox[{"Options", "[", "ListLinePlot", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.613897829838477*^9, 3.613897851628264*^9}, {
  3.613898066349605*^9, 3.61389807163024*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ListLinePlot2p5D", "[", 
   RowBox[{"dat_", ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "ListLinePlot2p5D", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "range", ",", "colorscaling", ",", "colors", ",", "coloring", ",", 
      "opts4plot"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"range", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Min", "[", 
         RowBox[{"dat", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"Max", "[", 
         RowBox[{"dat", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"colorscaling", "=", 
      RowBox[{"RescalingTransform", "[", 
       RowBox[{"{", "range", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"colors", "=", 
      RowBox[{
       RowBox[{"OptionValue", "[", "ColorFunction", "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{"Automatic", "->", 
         RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}]}], "}"}]}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"coloring", "[", "x_", "]"}], "=", 
      RowBox[{"colors", "[", 
       RowBox[{"First", "[", 
        RowBox[{"colorscaling", "[", 
         RowBox[{"{", "x", "}"}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"opts4plot", " ", "=", " ", 
      RowBox[{"FilterRules", "[", 
       RowBox[{
        RowBox[{"{", "opts", "}"}], ",", 
        RowBox[{"Options", "[", "Graphics", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"OptionValue", "[", "PlotStyle", "]"}], "/.", 
           RowBox[{"Automatic", "\[Rule]", 
            RowBox[{"{", "}"}]}]}], ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Line", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
               RowBox[{"VertexColors", "\[Rule]", 
                RowBox[{"coloring", "/@", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "3"}], "]"}], "]"}]}]}]}], "]"}], 
             "&"}], ",", 
            RowBox[{"Partition", "[", 
             RowBox[{"dat", ",", "2", ",", "1"}], "]"}]}], "]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "GoldenRatio"}]}], ",", "opts4plot"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.613897730892502*^9, 3.613897814509563*^9}, {
  3.613897853781189*^9, 3.613898091922084*^9}, {3.613898154257222*^9, 
  3.6138982379842243`*^9}, {3.613898360707713*^9, 3.6138983647243347`*^9}, {
  3.6138983953711443`*^9, 3.613898421552554*^9}, {3.61389853484799*^9, 
  3.613898550081717*^9}, {3.613898669819035*^9, 3.613898706703204*^9}, {
  3.613898742771159*^9, 3.613898757796626*^9}, {3.629456415901991*^9, 
  3.629456418424337*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data Manipulation", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.43599451953835*^9, 3.4359945235555573`*^9}}],

Cell["\<\
Very useful functions to zip lists. 
   e.g. Zip [{1, 2}, {3, 4}] -> {{1, 3}, {2, 4}}\
\>", "Text",
 InitializationGroup->True,
 CellChangeTimes->{{3.442901167061206*^9, 3.442901223087478*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Zip", "[", 
   RowBox[{"l1_List", ",", "l2_List"}], "]"}], ":=", 
  RowBox[{"Thread", "[", 
   RowBox[{"List", "[", 
    RowBox[{"l1", ",", "l2"}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Zip3", "[", 
   RowBox[{"l1_List", ",", "l2_List", ",", "l3_List"}], "]"}], ":=", 
  RowBox[{"Thread", "[", 
   RowBox[{"List", "[", 
    RowBox[{"l1", ",", "l2", ",", "l3"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Zip4", "[", 
    RowBox[{"l1_List", ",", "l2_List", ",", "l3_List", ",", " ", "l4_List"}], 
    "]"}], ":=", 
   RowBox[{"Thread", "[", 
    RowBox[{"List", "[", 
     RowBox[{"l1", ",", "l2", ",", "l3", ",", "l4"}], "]"}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "ZipS", " ", "but", " ", "uses", " ", "shortest", " ", "common", " ", 
    "list"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ZipS", "[", 
   RowBox[{"l1_List", ",", "l2_List"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "mlen", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"mlen", "=", 
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{"Length", "[", "l1", "]"}], ",", 
        RowBox[{"Length", "[", "l2", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Thread", "[", 
      RowBox[{"List", "[", 
       RowBox[{
        RowBox[{"Take", "[", 
         RowBox[{"l1", ",", "mlen"}], "]"}], ",", 
        RowBox[{"Take", "[", 
         RowBox[{"l2", ",", "mlen"}], "]"}]}], "]"}], "]"}]}]}], 
   "]"}]}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.435994627375969*^9, 3.43599462752111*^9}}],

Cell["\<\
Gives you every xth element, but as an average over the skipped interval. Or \
better it gived the average of partitions of size x.\
\>", "Text",
 InitializationGroup->True,
 CellChangeTimes->{{3.442901383761515*^9, 3.442901461758613*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"EveryXAvg", "[", 
   RowBox[{"data_List", ",", " ", "x_Integer"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "parts", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"parts", " ", "=", " ", 
      RowBox[{"Partition", "[", 
       RowBox[{"data", ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"ReplacePart", "[", 
          RowBox[{"#", ",", 
           RowBox[{"0", "\[Rule]", "Plus"}]}], "]"}], "/", "x"}], "&"}], ",", 
       "parts"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.429344762618525*^9, 3.429344770728635*^9}, {
  3.429344958254266*^9, 3.429345089363587*^9}, {3.429345503746644*^9, 
  3.42934555710457*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"EveryXFun", "[", 
   RowBox[{"data_List", ",", " ", "x_Integer", ",", "fun_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "parts", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"parts", " ", "=", " ", 
      RowBox[{"Partition", "[", 
       RowBox[{"data", ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"fun", "[", "#", "]"}], "&"}], ",", "parts"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.429344762618525*^9, 3.429344770728635*^9}, {
  3.429344958254266*^9, 3.429345089363587*^9}, {3.429345503746644*^9, 
  3.42934555710457*^9}, {3.4359952055045567`*^9, 3.435995232564624*^9}, {
  3.43679461658912*^9, 3.436794622673419*^9}, {3.4368612269967403`*^9, 
  3.436861239617317*^9}, {3.436861276223209*^9, 3.436861276985722*^9}}],

Cell["\<\
This gives you the index of the center element of the partitioning in the \
above functions.\
\>", "Text",
 InitializationGroup->True,
 CellChangeTimes->{{3.442901496358037*^9, 3.442901526230826*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"EveryXIndex", "[", 
   RowBox[{"data_List", ",", " ", "x_Integer"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", 
     RowBox[{"x", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"x", "/", "2"}], ",", 
        RowBox[{"Length", "[", "data", "]"}], ",", "x"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.429344762618525*^9, 3.429344770728635*^9}, {
  3.429344958254266*^9, 3.429345089363587*^9}, {3.429345503746644*^9, 
  3.42934555710457*^9}, {3.4359952055045567`*^9, 3.435995232564624*^9}, {
  3.43679461658912*^9, 3.436794622673419*^9}, {3.4368612269967403`*^9, 
  3.436861239617317*^9}, {3.436861276223209*^9, 3.436861276985722*^9}, {
  3.436862152013109*^9, 3.43686221781741*^9}}],

Cell["\<\
Calculates an average over x subsequent values, the averaging window is \
shifted by n\
\>", "Text",
 InitializationGroup->True,
 CellChangeTimes->{{3.442901300669281*^9, 3.442901373837988*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"EveryXAvgSliding", "[", 
   RowBox[{"data_List", ",", " ", "x_Integer", ",", "n_Integer"}], "]"}], " ",
   ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "parts", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"parts", " ", "=", " ", 
      RowBox[{"Partition", "[", 
       RowBox[{"data", ",", "x", ",", "n"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"ReplacePart", "[", 
          RowBox[{"#", ",", 
           RowBox[{"0", "\[Rule]", "Plus"}]}], "]"}], "/", "x"}], "&"}], ",", 
       "parts"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.429344762618525*^9, 3.429344770728635*^9}, {
  3.429344958254266*^9, 3.429345089363587*^9}, {3.429345503746644*^9, 
  3.42934555710457*^9}, {3.442740969100684*^9, 3.442741000857863*^9}, {
  3.44274105041863*^9, 3.442741055262741*^9}, {3.44274114032696*^9, 
  3.44274114335021*^9}}],

Cell["applies function to nth element of list", "Text",
 InitializationGroup->True,
 CellChangeTimes->{{3.446449097198944*^9, 3.44644910713933*^9}, {
  3.446449186452218*^9, 3.446449190097871*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MapNth", "[", 
   RowBox[{"f_", ",", "x_", ",", "n_"}], "]"}], ":=", " ", 
  RowBox[{"ReplacePart", "[", 
   RowBox[{"x", ",", " ", 
    RowBox[{"n", " ", "\[Rule]", 
     RowBox[{"f", "[", " ", 
      RowBox[{"x", "[", 
       RowBox[{"[", "n", "]"}], "]"}], " ", "]"}]}]}], "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.446449111385253*^9, 3.446449179304625*^9}, {
  3.642098307684267*^9, 3.642098314404454*^9}}],

Cell["maps the second coordinate of a time series", "Text",
 CellChangeTimes->{{3.642098316539268*^9, 3.642098332362111*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MapTimeSeries", "[", 
    RowBox[{"fun_", ",", " ", "dat_"}], "]"}], ":=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"MapNth", "[", 
       RowBox[{"fun", ",", "#", ",", "2"}], "]"}], "&"}], ",", "dat"}], 
    "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.446449111385253*^9, 3.446449179304625*^9}, {
   3.642098307684267*^9, 3.642098314404454*^9}, 3.642142488916276*^9}],

Cell["replaces a potentially missing result by a default value", "Text",
 CellChangeTimes->{{3.64210345389739*^9, 3.642103482670856*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DefaultMissing", "[", 
    RowBox[{"maybeMissing_", ",", "default_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"maybeMissing", "[", 
       RowBox[{"[", "0", "]"}], "]"}], "===", "Missing"}], ",", "default", 
     ",", "maybeMissing"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.642102264701861*^9, 3.642102288488667*^9}, {
  3.642102729724215*^9, 3.6421027465085697`*^9}}],

Cell["sum and product of a list", "Text",
 InitializationGroup->True,
 CellChangeTimes->{{3.446475836427856*^9, 3.446475870534348*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SumList", "[", "m_", "]"}], ":=", 
   RowBox[{"ReplacePart", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", "m", "]"}], ",", 
     RowBox[{"0", "\[Rule]", "Plus"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProdList", "[", "m_", "]"}], ":=", 
   RowBox[{"ReplacePart", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", "m", "]"}], ",", 
     RowBox[{"0", "\[Rule]", "Times"}]}], "]"}]}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.4463847568139267`*^9, 3.446384835417733*^9}, {
  3.446475785682185*^9, 3.44647579001747*^9}}],

Cell["return {max, index} of the maximal element of the list", "Text",
 CellChangeTimes->{{3.643564369857532*^9, 3.64356439632446*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MaxWithPosition", "[", "list_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", "=", 
       RowBox[{"Max", "[", "list", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", 
       RowBox[{"First", "[", 
        RowBox[{"FirstPosition", "[", 
         RowBox[{"list", ",", "m"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6435643133815727`*^9, 3.643564314809846*^9}, {
  3.64356435569309*^9, 3.643564368041555*^9}, {3.643564400126616*^9, 
  3.643564454561421*^9}}],

Cell["\<\
From a data series {{x, y}, ...}, select those where x is within given range \
(also removes non-numbers)\
\>", "Text",
 CellChangeTimes->{{3.643451183443515*^9, 3.643451251708468*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SelectRange", "[", 
    RowBox[{"dat_", ",", "range_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "int", "}"}], ",", 
     RowBox[{
      RowBox[{"int", "=", 
       RowBox[{"Interval", "[", "range", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"Select", "[", 
       RowBox[{"dat", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"IntervalMemberQ", "[", 
           RowBox[{"int", ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&&", 
          RowBox[{"(", 
           RowBox[{"And", "@@", 
            RowBox[{"NumberQ", "/@", "#"}]}], ")"}]}], "&"}]}], "]"}]}]}], 
    "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.638093037958705*^9, 3.638093037959812*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Tisean Plotting Routines - Calculate Entropies and Excess Entropy from TISEAN \
d2 \
\>", "Section",
 InitializationGroup->True,
 CellChangeTimes->{{3.573367082134974*^9, 3.5733670897975693`*^9}, {
  3.641799363187673*^9, 3.641799366723811*^9}, {3.6446412592377157`*^9, 
  3.64464128779807*^9}}],

Cell["\<\
What is in the tisean files output by d2?
The h2 files contain the entropy rate\
\>", "Text",
 CellChangeTimes->{{3.573369283338434*^9, 3.573369289881942*^9}, {
   3.573369338901463*^9, 3.5733693735158863`*^9}, 3.606628895096569*^9, {
   3.644641298566493*^9, 3.644641301670001*^9}}],

Cell["h (m, \[Epsilon]) = H (m + 1, \[Epsilon]) - H (m, \[Epsilon])", "Text",
 CellChangeTimes->{{3.5733692926853113`*^9, 3.57336933890231*^9}, 
   3.5733693904305*^9, {3.573369478717018*^9, 3.573369481868733*^9}, {
   3.583055955457878*^9, 3.5830559569618063`*^9}}],

Cell["\<\
where H (m, \[Epsilon]) = - ln C (m, \[Epsilon])  is the Block Entropy of \
dimension m with resolution \[Epsilon]. However these are Renyi type entropies.
C is the correlation integral (c2).
d2 contains the log-log derivative of C\
\>", "Text",
 CellChangeTimes->{{3.573369379992948*^9, 3.573369501758398*^9}, {
  3.5733695685589457`*^9, 3.573369650284561*^9}, {3.573369931429716*^9, 
  3.573369933245657*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"StyleLabel", "[", 
    RowBox[{"x_", ",", 
     RowBox[{"size_:", "10"}]}], "]"}], ":=", 
   RowBox[{"Style", "[", 
    RowBox[{"x", " ", ",", "size", ",", "Bold", ",", 
     RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StyleAxisLabel", "[", 
    RowBox[{"x_", ",", 
     RowBox[{"size_:", "12"}]}], "]"}], ":=", 
   RowBox[{"Style", "[", 
    RowBox[{"x", " ", ",", "size", ",", 
     RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6350503004582357`*^9, 3.635050360521017*^9}, {
  3.6350532015704947`*^9, 3.635053207868294*^9}, {3.6350538323959093`*^9, 
  3.635053861121273*^9}, {3.643710234242414*^9, 3.643710244898357*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RoundNumbersInExp", "[", 
    RowBox[{"exp_", ",", 
     RowBox[{"val_:", " ", "0.01"}]}], "]"}], ":=", 
   RowBox[{"exp", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", ":", 
       RowBox[{"_", "?", "NumberQ"}]}], "\[RuleDelayed]", 
      RowBox[{"Round", "[", 
       RowBox[{"t", ",", "val"}], "]"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.638094528357141*^9, 3.638094531169036*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Eps", "=", 
   RowBox[{"StyleAxisLabel", "[", "\[Epsilon]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EEm", "=", 
   RowBox[{
   "StyleAxisLabel", "[", 
    "\"\<\!\(\*SubsuperscriptBox[\(E\), \(m\), \((2)\)]\)\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIm", "=", 
   RowBox[{
   "StyleAxisLabel", "[", "\"\<\!\(\*SubscriptBox[\(PI\), \(m\)]\)\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D2m", "=", 
   RowBox[{
   "StyleAxisLabel", "[", 
    "\"\<\!\(\*SubsuperscriptBox[\(D\), \(m\), \((2)\)]\)\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2m", "=", 
   RowBox[{
   "StyleAxisLabel", "[", 
    "\"\<\!\(\*SubsuperscriptBox[\(h\), \(m\), \((2)\)]\)\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H2m", "=", 
   RowBox[{
   "StyleAxisLabel", "[", 
    "\"\<\!\(\*SubsuperscriptBox[\(H\), \(m\), \((2)\)]\)\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CCm", "=", 
   RowBox[{
   "StyleAxisLabel", "[", 
    "\"\<\!\(\*SubsuperscriptBox[\(Cc\), \(m\), \((2)\)]\)\>\"", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.613888377921311*^9, 3.613888462986581*^9}, {
  3.613888658741728*^9, 3.6138886629902887`*^9}, {3.633842147415189*^9, 
  3.633842153396431*^9}, {3.6350538660589867`*^9, 3.6350539096587143`*^9}, {
  3.6350540787225237`*^9, 3.635054087188706*^9}, {3.637986587743051*^9, 
  3.637986598400053*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LoadTiseanFile", "[", 
   RowBox[{"file_String", ",", 
    RowBox[{"print_:", " ", "False"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dat", ",", "series", ",", "blocks"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dat", " ", "=", " ", 
      RowBox[{"Import", "[", 
       RowBox[{"file", ",", "\"\<Table\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"blocks", " ", "=", " ", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"Split", "[", 
         RowBox[{"dat", ",", 
          RowBox[{
           RowBox[{"And", "[", 
            RowBox[{
             RowBox[{"#1", "\[NotEqual]", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{"#2", "\[NotEqual]", 
              RowBox[{"{", "}"}]}]}], "]"}], "&"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", "}"}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"series", " ", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"DeleteCases", "[", 
          RowBox[{"#", ",", 
           RowBox[{"Except", "[", 
            RowBox[{"{", 
             RowBox[{"_Real", ",", "_Real"}], "}"}], "]"}]}], "]"}], "&"}], 
        ",", "blocks"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"print", "\[Equal]", "True"}], ",", 
       RowBox[{"Print", "[", " ", 
        RowBox[{"dat", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"print", "\[Equal]", "True"}], ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Read \>\"", " ", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Length", "[", "series", "]"}], "]"}], "<>", " ", 
         "\"\< blocks with \>\"", "\[IndentingNewLine]", "\t", "<>", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{"Length", "[", 
           RowBox[{"series", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "<>", 
         "\"\< datasets\>\""}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "series"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.573363719897794*^9, 3.5733637550165043`*^9}, {
  3.573363801032317*^9, 3.573363835640106*^9}, {3.573363891521122*^9, 
  3.573363903081777*^9}, {3.573363933785471*^9, 3.573363953871745*^9}, {
  3.573364895818095*^9, 3.573365073798246*^9}, {3.573365609291437*^9, 
  3.573365616719015*^9}, {3.573365777956634*^9, 3.573365783720046*^9}, {
  3.573366455422675*^9, 3.573366500081648*^9}, {3.573366787056325*^9, 
  3.573366807719428*^9}, {3.573976329271472*^9, 3.5739763418448257`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "function", " ", "does", " ", "not", " ", "make", " ", 
    "sense", " ", "because", " ", "the", " ", "data", " ", "in", " ", "each", 
    " ", "column", " ", "does", " ", "not", " ", "have", " ", "the", " ", 
    "same", " ", "length"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"MergeTisean", "[", "dat_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "firstcol", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"firstcol", "=", 
       RowBox[{"dat", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Assert", "[", 
       RowBox[{
        RowBox[{"And", " ", "@@", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"First", "[", "firstcol", "]"}], " ", "\[Equal]", " ", 
             "#"}], "&"}], ",", "firstcol"}], "]"}]}], ",", 
        "\"\<The first column must be identical\>\""}], " ", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dat", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "All", ",", "1"}], "]"}], "]"}], "}"}], " ", "~", 
       "Join", "~", 
       RowBox[{"dat", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "All", ",", "2"}], "]"}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.573366509876397*^9, 3.573366562739338*^9}, {
  3.57336685624494*^9, 3.573366868429038*^9}, {3.573366942205303*^9, 
  3.573366978976871*^9}, {3.5733670559417477`*^9, 3.573367062143854*^9}, {
  3.5733698245023127`*^9, 3.573369826509568*^9}, {3.5733812138477783`*^9, 
  3.573381239651511*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LoadTiseanLyapFile", "[", 
   RowBox[{"file_String", ",", 
    RowBox[{"print_:", " ", "False"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dat", ",", "series"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dat", " ", "=", " ", 
      RowBox[{"Import", "[", 
       RowBox[{"file", ",", "\"\<Table\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"series", " ", "=", "dat"}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"DeleteCases", "[", 
           RowBox[{"#", ",", 
            RowBox[{"Except", "[", 
             RowBox[{"{", 
              RowBox[{"_Integer", ",", "___"}], "}"}], "]"}]}], "]"}], "&"}], 
         ",", "dat"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"print", "\[Equal]", "True"}], ",", 
       RowBox[{"Print", "[", " ", 
        RowBox[{"dat", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"print", "\[Equal]", "True"}], ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Read \>\"", " ", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Length", "[", "series", "]"}], "]"}], "<>", " ", 
         "\"\< with \>\"", "\[IndentingNewLine]", "\t", "<>", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{"Length", "[", 
           RowBox[{"series", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "<>", 
         "\"\< columns\>\""}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "series"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.5739763602837753`*^9, 3.57397636669381*^9}, {
  3.573976597351959*^9, 3.573976672582342*^9}, {3.573976751359003*^9, 
  3.573976784359763*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ChangeExtension", "[", 
   RowBox[{"name_", ",", "ending_"}], "]"}], ":=", 
  RowBox[{"StringReplace", "[", 
   RowBox[{"name", ",", 
    RowBox[{
     RowBox[{"RegularExpression", "[", "\"\<\\\\.[^.]*$\>\"", "]"}], 
     "\[Rule]", "ending"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.586858105696472*^9, 3.586858105697907*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ZipWith", "[", 
    RowBox[{"f_Function", ",", "l1_List", ",", "l2_List"}], "]"}], ":=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f", " ", "@@", " ", "#"}], "&"}], ",", 
     RowBox[{"ZipS", "[", 
      RowBox[{"l1", ",", "l2"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.573381458500792*^9, 3.573381489948333*^9}, 
   3.573381522742524*^9, {3.573382445010211*^9, 3.5733825073311157`*^9}}],

Cell["Substract two series (e.g. lines in the h2 plot)", "Text",
 CellChangeTimes->{{3.5733813410370083`*^9, 3.573381379695489*^9}, {
  3.598766375233865*^9, 3.598766376321261*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DiffSeries", "[", "pair_", "]"}], ":=", 
  RowBox[{"ZipWith", "[", 
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"b", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"a", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "]"}], ",", 
    RowBox[{"pair", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"pair", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.573381401267765*^9, 3.5733814165232573`*^9}, {
  3.573381505044029*^9, 3.573381546020068*^9}, {3.5987656696094503`*^9, 
  3.598765676312922*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LogDerivativeSeries", "[", 
   RowBox[{"xylists_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "n", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"k", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"n", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"EvenQ", "[", "n", "]"}], ",", 
        RowBox[{"n", "+", "1"}], ",", "n"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "l"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"Mean", "[", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], "-", 
                    RowBox[{"Log", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], ")"}]}], 
                 "&"}], ",", 
                RowBox[{"Partition", "[", 
                 RowBox[{"l", ",", "2", ",", "1"}], "]"}]}], "]"}], "]"}]}], 
            "}"}]}], "]"}], "@@", "#"}], "&"}], ",", 
       RowBox[{"Zip", "[", 
        RowBox[{
         RowBox[{"xylists", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Partition", "[", 
          RowBox[{"xylists", ",", "n", ",", "1", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"n", "+", "1"}], ")"}], "/", "2"}], "]"}]}], ",", 
             RowBox[{"Round", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"n", "+", "1"}], ")"}], "/", "2"}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", "}"}]}], "]"}]}], "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.59885466263439*^9, 3.598854741477676*^9}, {
   3.598854799535365*^9, 3.598854912621605*^9}, {3.641719840714875*^9, 
   3.6417199066659727`*^9}, {3.6417199709386806`*^9, 3.641720032079938*^9}, 
   3.641720616563439*^9, {3.641720897487915*^9, 3.641720897969*^9}, {
   3.6417210962018843`*^9, 3.641721111740995*^9}, {3.64172117508254*^9, 
   3.641721354955886*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExcessEntropySum", "[", 
   RowBox[{"deltaHs_", ",", "n_Integer", ",", "i_Integer"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "ls", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"deltaHs", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"And", "@@", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "#", "]"}], "\[GreaterEqual]", "i"}], 
            "&"}], ",", 
           RowBox[{"deltaHs", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "n"}], "]"}], "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"k", " ", 
           RowBox[{"deltaHs", "[", 
            RowBox[{"[", 
             RowBox[{"k", ",", "i", ",", "2"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "Undefined"}], "\[IndentingNewLine]", "]"}]}], 
     "}"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.5733844112310534`*^9, 3.573384461965479*^9}, {
  3.573384492534924*^9, 3.573384726480596*^9}, {3.573384849825287*^9, 
  3.5733848561924963`*^9}, {3.573385049913855*^9, 3.57338505478609*^9}, {
  3.573385097210349*^9, 3.573385098537594*^9}, {3.573385262425005*^9, 
  3.5733852656784353`*^9}, {3.573385334753024*^9, 3.573385439504909*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExcessEntropies", "[", "deltaHs_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"ExcessEntropySum", "[", 
        RowBox[{"deltaHs", ",", "n", ",", "i"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"deltaHs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", "deltaHs", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.573384210601225*^9, 3.573384228692082*^9}, {
   3.573384285395913*^9, 3.573384374481132*^9}, {3.573384731561193*^9, 
   3.573384819251096*^9}, 3.573384869877462*^9, 3.5733850617977324`*^9, {
   3.573385171835849*^9, 3.57338517192278*^9}, {3.573385455748006*^9, 
   3.573385466459853*^9}, {3.5733855584595337`*^9, 3.573385589685817*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DiffDimSchreiber", "[", 
    RowBox[{"Ds_", ",", "d_"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Ds", "[", 
          RowBox[{"[", 
           RowBox[{"m", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Ds", "[", 
             RowBox[{"[", 
              RowBox[{"m", ",", "i", ",", "2"}], "]"}], "]"}], "-", 
            RowBox[{"Ds", "[", 
             RowBox[{"[", 
              RowBox[{"d", ",", "i", ",", "2"}], "]"}], "]"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"m", "-", "d"}], ")"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Ds", "[", 
             RowBox[{"[", "m", "]"}], "]"}], "]"}], ",", 
           RowBox[{"Length", "[", 
            RowBox[{"Ds", "[", 
             RowBox[{"[", "d", "]"}], "]"}], "]"}]}], "]"}]}], "}"}]}], "]"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", 
       RowBox[{"d", "+", "1"}], ",", 
       RowBox[{"Length", "[", "Ds", "]"}]}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.573384210601225*^9, 3.573384228692082*^9}, {
   3.573384285395913*^9, 3.573384374481132*^9}, {3.573384731561193*^9, 
   3.573384819251096*^9}, 3.573384869877462*^9, 3.5733850617977324`*^9, {
   3.573385171835849*^9, 3.57338517192278*^9}, {3.573385455748006*^9, 
   3.573385466459853*^9}, {3.5733855584595337`*^9, 3.573385589685817*^9}, {
   3.637984539342719*^9, 3.637984552829651*^9}, {3.637984785726359*^9, 
   3.637984813070019*^9}, {3.637985031836917*^9, 3.6379850364302197`*^9}, {
   3.637985211934979*^9, 3.637985236284886*^9}, {3.637985425727109*^9, 
   3.637985428878518*^9}, {3.637986530672173*^9, 3.637986534319674*^9}, {
   3.6380007556124487`*^9, 3.6380007592756433`*^9}, 3.638264859563815*^9, {
   3.638264974282548*^9, 3.6382650118178043`*^9}, {3.6382656429059973`*^9, 
   3.638265643049171*^9}, {3.638266028266252*^9, 3.638266028570174*^9}, {
   3.638266183194654*^9, 3.638266193961935*^9}, {3.639383360837119*^9, 
   3.639383360916206*^9}, {3.639383495186655*^9, 3.639383495314404*^9}, {
   3.6393838956220922`*^9, 3.639383896822919*^9}, {3.6393839276220503`*^9, 
   3.639383929892488*^9}, {3.639802849901165*^9, 3.6398028759326057`*^9}, {
   3.639802906045383*^9, 3.6398029896636887`*^9}, {3.6398030312931347`*^9, 
   3.6398031195035048`*^9}, {3.639803279913756*^9, 3.639803300010881*^9}, {
   3.6398040536381083`*^9, 3.639804064349346*^9}, {3.639804097615979*^9, 
   3.639804097860635*^9}, {3.6398119959285297`*^9, 3.639812012596344*^9}, {
   3.639814450556553*^9, 3.6398144557540417`*^9}, {3.639814552791113*^9, 
   3.639814552886887*^9}, {3.6398154122037773`*^9, 3.63981542874645*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DerivativeDiffPast2", "[", "l_List", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "-", 
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "&"}], "/@", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Prepend", "[", 
      RowBox[{"l", ",", 
       RowBox[{"l", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "2", ",", "1"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.587030765462308*^9, 3.587030765462863*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CutWhenWigly", "[", 
   RowBox[{"list_List", ",", "thresh_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "diff2", "}"}], ",", 
    RowBox[{
     RowBox[{"diff2", "=", 
      RowBox[{"DerivativeDiffPast2", "[", 
       RowBox[{"DerivativeDiffPast2", "[", 
        RowBox[{"list", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TakeWhile", "[", 
       RowBox[{
        RowBox[{"Zip", "[", 
         RowBox[{"diff2", ",", "list"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "<", "thresh"}], "&"}]}], 
       "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.587030770537137*^9, 3.587030770537685*^9}}],

Cell["\<\
Extracts data from tisean output, calculates Excess Entropy etc and generates \
plots.\
\>", "Text",
 CellChangeTimes->{{3.583056565068173*^9, 3.583056611786469*^9}, {
   3.644403438850154*^9, 3.6444035543528557`*^9}, 3.644641388022965*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "TiseanD2PlotsAndData", "]"}], "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ColorPalette", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
       RowBox[{"EpsRange", "\[Rule]", "All"}], ",", 
       RowBox[{"Thresh", "\[Rule]", "Infinity"}], ",", " ", 
       RowBox[{"ShowEntropy", "\[Rule]", "False"}], ",", 
       RowBox[{"ShowCSum", "\[Rule]", "False"}], ",", 
       RowBox[{"CleanDeltaH", "\[Rule]", "False"}]}], "}"}], "~", "Join", "~", 
     RowBox[{"Options", "[", "ListLogLinearPlot", "]"}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ColorPalette", "::", "usage"}], "=", 
   "\"\<Palette to be used (default:Rainbow)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Thresh", "::", "usage"}], "=", 
   "\"\<maximum of 2nd derivative, before it is but\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ShowEntropy", "::", "usage"}], "=", 
   "\"\<Show plot for block entropies\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ShowCSum", "::", "usage"}], "=", 
   "\"\<Show plot for correlation sum\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CleanDeltaH", "::", "usage"}], "=", 
   "\"\<Fit the wigling parts of deltaH\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"EpsRange", "::", "usage"}], "=", 
   "\"\<Restrict epsilon range\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.600151592988587*^9, 3.6001516127608433`*^9}, {
   3.600151647498975*^9, 3.600151694324051*^9}, 3.613730866790719*^9, {
   3.6145029207815313`*^9, 3.614502988941991*^9}, {3.633841420975367*^9, 
   3.633841442408362*^9}, {3.633841492975*^9, 3.633841558890577*^9}, {
   3.633841654857434*^9, 3.633841655616234*^9}, {3.633841712504606*^9, 
   3.633841714496032*^9}, {3.639802684641719*^9, 3.639802757323276*^9}, {
   3.6398033148739357`*^9, 3.639803320934623*^9}, {3.6398034351841183`*^9, 
   3.639803438765931*^9}, {3.639820611739746*^9, 3.6398206587651443`*^9}, {
   3.639820965493477*^9, 3.6398209666093807`*^9}, {3.6421343398288717`*^9, 
   3.6421343635263166`*^9}, {3.6421347391825657`*^9, 3.642134770452114*^9}, {
   3.6434513462503977`*^9, 3.643451372943837*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TiseanD2PlotsAndData", "::", "usage"}], "=", 
   "\"\<Extracts data from tisean output, calculates Excess Entropy etc and \
generates plots. Returns {plots,data}.\nProvide any of the tisean output \
files (e.g. the .d2) and the spatial embedding dimension (d in the \
paper)\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.600153199979473*^9, 3.600153308030875*^9}, {
  3.633841454753481*^9, 3.63384149848419*^9}, {3.633841574665791*^9, 
  3.633841575263064*^9}, {3.6421343708687887`*^9, 3.642134372228222*^9}, {
  3.642134683251463*^9, 3.642134736209848*^9}, {3.644403568962976*^9, 
  3.6444036206909847`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SelectRange", "[", 
    RowBox[{"dat_", ",", "range_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "int", "}"}], ",", 
     RowBox[{
      RowBox[{"int", "=", 
       RowBox[{"Interval", "[", "range", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"Select", "[", 
       RowBox[{"dat", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"IntervalMemberQ", "[", 
           RowBox[{"int", ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&&", 
          RowBox[{"(", 
           RowBox[{"And", "@@", 
            RowBox[{"NumberQ", "/@", "#"}]}], ")"}]}], "&"}]}], "]"}]}]}], 
    "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.638093037958705*^9, 3.638093037959812*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TiseanD2PlotsAndData", "[", 
   RowBox[{"filename_", ",", "dim_", ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "TiseanD2PlotsAndData", "]"}]}]}], "]"}], 
  ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "files", ",", "epsRange", ",", "d2", ",", "h2", ",", "c2", ",", 
      "indices", ",", "H", ",", "h", ",", "deltaH", ",", "deltaHorig", ",", 
      "en", ",", "den", ",", "len", ",", "core", ",", " ", "core2", ",", " ", 
      "opts4plot", ",", "thresh", ",", "colors", ",", "data"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"files", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ChangeExtension", "[", 
          RowBox[{"filename", ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<.d2\>\"", ",", "\"\<.h2\>\"", ",", "\"\<.c2\>\""}], 
         "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"epsRange", "=", 
      RowBox[{"OptionValue", "[", "EpsRange", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"d2", "=", 
      RowBox[{"LoadTiseanFile", "[", 
       RowBox[{
        RowBox[{"files", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "True"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"h2", "=", 
      RowBox[{"LoadTiseanFile", "[", 
       RowBox[{
        RowBox[{"files", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", "False"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"c2", "=", 
      RowBox[{"LoadTiseanFile", "[", 
       RowBox[{
        RowBox[{"files", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", "False"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"epsRange", "===", "All"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"d2", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"SelectRange", "[", 
            RowBox[{"#", ",", "epsRange"}], "]"}], "&"}], "/@", "d2"}]}], ";", 
        RowBox[{"h2", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"SelectRange", "[", 
            RowBox[{"#", ",", "epsRange"}], "]"}], "&"}], "/@", "h2"}]}], ";", 
        RowBox[{"c2", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"SelectRange", "[", 
            RowBox[{"#", ",", "epsRange"}], "]"}], "&"}], "/@", "c2"}]}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"len", "=", 
      RowBox[{"Length", "[", "d2", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"indices", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", "x", ")"}], "*", "dim"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "1", ",", 
          RowBox[{
           RowBox[{"Length", "[", "c2", "]"}], "/", "dim"}]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"H", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"-", 
               RowBox[{"Log", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], "}"}], "&"}], ",",
            "#"}], "]"}], "&"}], ",", 
        RowBox[{"c2", "[", 
         RowBox[{"[", "indices", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"h", "=", 
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{"DiffSeries", ",", 
          RowBox[{"Partition", "[", 
           RowBox[{"H", ",", "2", ",", "1"}], "]"}]}], "]"}], ",", 
        RowBox[{"H", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"deltaHorig", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"DiffSeries", ",", 
        RowBox[{"Reverse", " ", "/@", 
         RowBox[{"Partition", "[", 
          RowBox[{"h", ",", "2", ",", "1"}], "]"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"deltaH", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "CleanDeltaH", "]"}], ",", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"FitEndOfRange", "[", 
            RowBox[{"#", ",", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{"0", ",", "#"}], "]"}], "&"}]}], "]"}], "&"}], ",", 
          "deltaHorig"}], "]"}], ",", " ", "deltaHorig"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"en", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"n", " ", 
          RowBox[{"H", "[", 
           RowBox[{"[", 
            RowBox[{"n", "-", "1"}], "]"}], "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}], " ", 
          RowBox[{"H", "[", 
           RowBox[{"[", "n", "]"}], "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "2", ",", 
          RowBox[{"Length", "[", "H", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"en", "=", 
        RowBox[{"ExcessEntropies", "[", "deltaH", "]"}]}], ";"}], " ", "*)"}],
      " ", 
     RowBox[{"(*", " ", 
      RowBox[{"The", " ", "same", " ", "as", " ", "above"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"den", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"MapNth", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "#"}], "&"}], ",", "#", ",", "2"}], "]"}], "&"}], 
           ",", 
           RowBox[{"LogDerivativeSeries", "[", 
            RowBox[{"#", ",", "5"}], "]"}]}], "]"}], "&"}], ",", "en"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"thresh", " ", "=", " ", 
      RowBox[{"OptionValue", "[", "Thresh", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"opts4plot", " ", "=", " ", 
      RowBox[{"FilterRules", "[", 
       RowBox[{
        RowBox[{"{", "opts", "}"}], ",", 
        RowBox[{"Options", "[", "ListLogLinearPlot", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"colors", "=", 
      RowBox[{"ColorsFromScheme", "[", 
       RowBox[{"len", ",", 
        RowBox[{"OptionValue", "[", "ColorPalette", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<D\>\"", "->", "d2"}], ",", 
        RowBox[{"\"\<h\>\"", "\[Rule]", "h"}], ",", 
        RowBox[{"\"\<E\>\"", "\[Rule]", "en"}], ",", 
        RowBox[{"\"\<DE\>\"", "->", "den"}], ",", 
        RowBox[{"\"\<deltaH\>\"", "\[Rule]", "deltaH"}], ",", 
        RowBox[{"\"\<H\>\"", "\[Rule]", "H"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"CutWhenWigly", "[", 
              RowBox[{"#", ",", "thresh"}], "]"}], "&"}], "/@", "d2"}], ",", 
           " ", "opts4plot", ",", " ", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
           RowBox[{"GridLines", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"None", ",", "Automatic"}], "}"}]}], ",", 
           RowBox[{"GridLinesStyle", "->", 
            RowBox[{"Directive", "[", 
             RowBox[{"Gray", ",", "Dashed"}], "]"}]}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", 
            RowBox[{"files", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], " ", ",", 
           RowBox[{"PlotStyle", "\[Rule]", "colors"}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Eps", ",", "D2m"}], "}"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "h", "]"}], ">", "0"}], ",", 
           RowBox[{"ListLogLinearPlot", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"CutWhenWigly", "[", 
                RowBox[{"#", ",", "thresh"}], "]"}], "&"}], "/@", "h"}], ",", 
             " ", "opts4plot", ",", 
             RowBox[{"Joined", "\[Rule]", "True"}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", "\"\<entropy rate \>\""}], " ", 
             ",", 
             RowBox[{"AxesLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Eps", ",", "h2m"}], "}"}]}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"Prepend", "[", 
               RowBox[{"colors", ",", 
                RowBox[{"Darker", "[", "Gray", "]"}]}], "]"}]}]}], "]"}], ",",
            "Null"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "en", "]"}], ">", "0"}], ",", 
           RowBox[{"ListLogLinearPlot", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"CutWhenWigly", "[", 
                RowBox[{"#", ",", "thresh"}], "]"}], "&"}], "/@", "en"}], ",",
              " ", "opts4plot", ",", 
             RowBox[{"Joined", "\[Rule]", "True"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", "\"\<excess entropy\>\""}], ",", 
             
             RowBox[{"AxesLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Eps", ",", "EEm"}], "}"}]}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"Drop", "[", 
               RowBox[{"colors", ",", "1"}], "]"}]}]}], "]"}], ",", "Null"}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "den", "]"}], ">", "0"}], ",", 
           RowBox[{"ListLogLinearPlot", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"CutWhenWigly", "[", 
                RowBox[{"#", ",", "thresh"}], "]"}], "&"}], "/@", "den"}], 
             ",", " ", "opts4plot", ",", 
             RowBox[{"Joined", "\[Rule]", "True"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"All", ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"GridLines", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"None", ",", "Automatic"}], "}"}]}], ",", 
             RowBox[{"GridLinesStyle", "->", 
              RowBox[{"Directive", "[", 
               RowBox[{"Gray", ",", "Dashed"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
             "PlotLabel", "\[Rule]", "\"\<Dim of excess entropy\>\""}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", "colors"}]}], "]"}], ",", 
           "Null"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "deltaH", "]"}], ">", "0"}], ",", 
           RowBox[{"ListLogLinearPlot", "[", 
            RowBox[{"deltaH", ",", " ", "opts4plot", ",", 
             RowBox[{"Joined", "\[Rule]", "True"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
             RowBox[{
             "PlotLabel", "\[Rule]", 
              "\"\<\!\(\*SubsuperscriptBox[\(\[Delta]h\), \(m\), \((2)\)]\)\>\
\""}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", "colors"}], ",", 
             RowBox[{"AxesLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "Eps", ",", 
                "\"\<\!\(\*SubsuperscriptBox[\(\[Delta]h\), \(m\), \((2)\)]\)\
\>\""}], "}"}]}]}], "]"}], ",", "Null"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "[", "ShowCSum", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "c2", "]"}], ">", "0"}], ",", 
             RowBox[{"ListLogLinearPlot", "[", 
              RowBox[{"c2", ",", " ", "opts4plot", ",", 
               RowBox[{"Joined", "\[Rule]", "True"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
               RowBox[{
               "PlotLabel", "\[Rule]", 
                "\"\<\!\(\*SubsuperscriptBox[\(c\), \(m\), \((2)\)]\)\>\""}], 
               ",", 
               RowBox[{"PlotStyle", "\[Rule]", "colors"}]}], "]"}], ",", 
             "Null"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "deltaH", "]"}], ">", "0"}], " ", "&&", 
              " ", 
              RowBox[{"OptionValue", "[", "CleanDeltaH", "]"}]}], ",", 
             RowBox[{"ListLogLinearPlot", "[", 
              RowBox[{"deltaHorig", ",", " ", "opts4plot", ",", 
               RowBox[{"Joined", "\[Rule]", "True"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
               RowBox[{
               "PlotLabel", "\[Rule]", 
                "\"\<\!\(\*SubsuperscriptBox[\(\[Delta]h\), \(m\), \
\((2)\)]\)- original\>\""}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", "colors"}]}], "]"}], ",", 
             "Null"}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "H", "]"}], ">", "0"}], " ", "&&", " ", 
            RowBox[{"OptionValue", "[", "ShowEntropy", "]"}]}], ",", 
           RowBox[{"ListLogLinearPlot", "[", 
            RowBox[{"H", ",", " ", "opts4plot", ",", 
             RowBox[{"Joined", "\[Rule]", "True"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", "\"\<Entropies\>\""}], ",", 
             RowBox[{"AxesLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Eps", ",", "H2m"}], "}"}]}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", "colors"}]}], "]"}], ",", 
           "Null"}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
       "\[IndentingNewLine]", "data"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.573367772501717*^9, 3.5733678241799498`*^9}, {
   3.573367863628393*^9, 3.573367976474114*^9}, {3.5733680981135807`*^9, 
   3.573368105569064*^9}, {3.5733681834180727`*^9, 3.573368230840611*^9}, {
   3.5733683541017437`*^9, 3.573368446861899*^9}, {3.57336855219795*^9, 
   3.573368570802103*^9}, {3.57336862238387*^9, 3.5733686435727997`*^9}, {
   3.573368783321108*^9, 3.573368806450865*^9}, {3.573368865040427*^9, 
   3.573369018781404*^9}, {3.57337574368642*^9, 3.573375792164798*^9}, {
   3.57337587171012*^9, 3.573375878669261*^9}, {3.573376198649124*^9, 
   3.5733762821897984`*^9}, 3.573376432899198*^9, {3.573385597289266*^9, 
   3.573385766339291*^9}, {3.583055543062704*^9, 3.583055589620535*^9}, {
   3.5830565539726553`*^9, 3.583056559691145*^9}, {3.583056872261346*^9, 
   3.5830568788410273`*^9}, {3.5830575758989162`*^9, 3.583057645842978*^9}, {
   3.58305771308291*^9, 3.583057717739312*^9}, 3.5830579615837727`*^9, {
   3.583058196611817*^9, 3.583058213222809*^9}, {3.583125528588154*^9, 
   3.583125543510735*^9}, {3.58312588532803*^9, 3.5831259661473017`*^9}, {
   3.583126069584059*^9, 3.583126076072658*^9}, {3.5831261996863337`*^9, 
   3.583126400907476*^9}, {3.583126612815907*^9, 3.5831267629471827`*^9}, {
   3.583127594907761*^9, 3.583127598410297*^9}, {3.5831278947970963`*^9, 
   3.5831279374103107`*^9}, {3.5831294777507277`*^9, 3.583129492994073*^9}, {
   3.583129850718445*^9, 3.583129870529428*^9}, {3.5831299358815193`*^9, 
   3.583129949611253*^9}, {3.583130042781601*^9, 3.583130050226738*^9}, {
   3.583130154595879*^9, 3.5831301626619253`*^9}, {3.583130199477425*^9, 
   3.583130221982833*^9}, {3.583130267712207*^9, 3.5831302830288486`*^9}, {
   3.598765526660439*^9, 3.598765536680931*^9}, {3.5987658140362377`*^9, 
   3.598765819083062*^9}, {3.5987658563387423`*^9, 3.5987659354683*^9}, {
   3.598766120307859*^9, 3.598766149903398*^9}, 3.598766194963944*^9, {
   3.598766531849657*^9, 3.5987665337234364`*^9}, {3.5988523983421907`*^9, 
   3.598852477521779*^9}, {3.598852723283147*^9, 3.598852761864643*^9}, {
   3.5988528286832237`*^9, 3.5988528630996428`*^9}, {3.598852895848199*^9, 
   3.5988528997000103`*^9}, {3.5988530134483232`*^9, 3.598853023972754*^9}, {
   3.598853067082477*^9, 3.5988530680476303`*^9}, {3.5988534205801353`*^9, 
   3.598853421755018*^9}, {3.598853781824552*^9, 3.598853784464673*^9}, {
   3.5988538802649384`*^9, 3.598853903584175*^9}, {3.598854015212913*^9, 
   3.5988540217064342`*^9}, {3.5988541935729847`*^9, 
   3.5988542606496143`*^9}, {3.598854307727318*^9, 3.598854353908972*^9}, {
   3.5988543990800753`*^9, 3.598854409146659*^9}, {3.598854494797214*^9, 
   3.598854496221986*^9}, {3.5988549225471907`*^9, 3.598854952836166*^9}, {
   3.598855027170054*^9, 3.598855031027892*^9}, {3.598855111142888*^9, 
   3.5988551112533693`*^9}, {3.600150912143132*^9, 3.600150967321506*^9}, {
   3.600151014218417*^9, 3.6001510196467533`*^9}, {3.6001519507632093`*^9, 
   3.600151964240634*^9}, {3.600151998949279*^9, 3.60015201051871*^9}, {
   3.600152165650175*^9, 3.600152190203397*^9}, {3.600152260407803*^9, 
   3.600152261186925*^9}, {3.6001523534891453`*^9, 3.600152423549473*^9}, {
   3.600152459632204*^9, 3.600152478426152*^9}, 3.600152516684649*^9, {
   3.600152744421373*^9, 3.600152747444141*^9}, {3.613730654797015*^9, 
   3.613730661161229*^9}, {3.6137307389913054`*^9, 3.613730742925267*^9}, {
   3.6137309239443007`*^9, 3.613730926192675*^9}, {3.6138885429584837`*^9, 
   3.61388859177614*^9}, {3.613888637033787*^9, 3.613888637506938*^9}, {
   3.613888681281912*^9, 3.6138886844459476`*^9}, {3.614502572240734*^9, 
   3.614502621032876*^9}, {3.61450267015221*^9, 3.614502880175514*^9}, {
   3.614502998342945*^9, 3.614503013867468*^9}, {3.6145031262943563`*^9, 
   3.614503171628244*^9}, {3.633841733600363*^9, 3.633841832860318*^9}, {
   3.633841893784317*^9, 3.633841921929364*^9}, {3.633842271813842*^9, 
   3.633842275342723*^9}, {3.633842671209515*^9, 3.633842817248898*^9}, {
   3.63384286447462*^9, 3.633842873157929*^9}, {3.633843035189251*^9, 
   3.633843044214281*^9}, {3.633843109352191*^9, 3.633843112338867*^9}, {
   3.634636167837748*^9, 3.634636173540491*^9}, {3.634636216215086*^9, 
   3.634636217833497*^9}, {3.6350552601342297`*^9, 3.635055417579166*^9}, {
   3.635055450676888*^9, 3.635055464441553*^9}, {3.637983929197345*^9, 
   3.6379839946366367`*^9}, {3.637984064034071*^9, 3.637984096654161*^9}, {
   3.637984827917469*^9, 3.63798486430201*^9}, {3.637984908448804*^9, 
   3.6379849162418633`*^9}, {3.637985948896162*^9, 3.6379859510073853`*^9}, {
   3.6379860590046673`*^9, 3.637986084653371*^9}, {3.6379861228798847`*^9, 
   3.637986171296679*^9}, {3.637986504353944*^9, 3.637986505330845*^9}, {
   3.637986562366825*^9, 3.637986581855847*^9}, {3.6380080568532047`*^9, 
   3.638008214896256*^9}, {3.638264805394251*^9, 3.638264836556181*^9}, {
   3.638265033630806*^9, 3.638265047724226*^9}, {3.638265086663587*^9, 
   3.638265087939172*^9}, {3.6382655792953253`*^9, 3.638265579693406*^9}, {
   3.638265733294685*^9, 3.638265798846506*^9}, {3.638265967578623*^9, 
   3.638266000092677*^9}, {3.638266062873653*^9, 3.638266064941545*^9}, {
   3.638266207325356*^9, 3.638266208812253*^9}, {3.638523640357605*^9, 
   3.6385236430289516`*^9}, {3.638523678087471*^9, 3.638523698614154*^9}, 
   3.638533896069056*^9, {3.639117062856884*^9, 3.639117094148664*^9}, {
   3.639117181738576*^9, 3.639117186537108*^9}, {3.639117226649087*^9, 
   3.639117258147037*^9}, {3.6391204293322973`*^9, 3.6391204858189287`*^9}, {
   3.63912097715186*^9, 3.639120994098318*^9}, {3.6391214343140306`*^9, 
   3.63912147083025*^9}, {3.6392079532733507`*^9, 3.639207959233457*^9}, {
   3.639387443398003*^9, 3.63938752727808*^9}, {3.63938757189951*^9, 
   3.639387671261717*^9}, 3.639387740478693*^9, 3.6393902134844418`*^9, {
   3.63980278236692*^9, 3.639802821598572*^9}, {3.639803329343637*^9, 
   3.639803410985735*^9}, {3.639819788732094*^9, 3.639819805805278*^9}, {
   3.639819871123911*^9, 3.639819874328506*^9}, {3.6398206687543993`*^9, 
   3.639820799343719*^9}, {3.6398209361039963`*^9, 3.63982094086045*^9}, {
   3.640433169584839*^9, 3.640433186625188*^9}, {3.642134383948185*^9, 
   3.6421344230881987`*^9}, {3.643451439291336*^9, 3.643451787584499*^9}, {
   3.6434518701461773`*^9, 3.643451872062504*^9}, {3.643451949931871*^9, 
   3.643451985753449*^9}, {3.6434521033465147`*^9, 3.64345225244272*^9}, {
   3.644403641962245*^9, 3.6444036459464417`*^9}, {3.644641398140647*^9, 
   3.6446414205056143`*^9}}],

Cell["\<\
This function tries to fit logarithmic curve at the end of the data range \
(small scales) It automatically figures out the right range, but only uses 30 \
datapoints from the end of the data (ignoring the Indeterminate). The \
remainder (below the fitting range) of the series is replaces by the fit that \
is additionally passed though func (id by default).\
\>", "Text",
 CellChangeTimes->{{3.6393873296908197`*^9, 3.639387426132935*^9}, {
  3.639390100262701*^9, 3.639390203446879*^9}, {3.639819584424272*^9, 
  3.639819610840768*^9}, {3.6398197233041687`*^9, 3.639819743288487*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FitEndOfRange", "[", 
   RowBox[{"dat_", ",", 
    RowBox[{"func_:", "Identity"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"end", ",", "pos", ",", "fit", ",", "rangestart", ",", "model"}],
      "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pos", "=", 
      RowBox[{"First", "[", 
       RowBox[{"FirstPosition", "[", 
        RowBox[{"dat", ",", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Not", "[", 
              RowBox[{"NumberQ", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], ")"}], "&"}], 
           ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"Length", "[", "dat", "]"}], "}"}], ",", 
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"end", "=", 
      RowBox[{"First", "[", 
       RowBox[{"dat", "[", 
        RowBox[{"[", 
         RowBox[{"Max", "[", 
          RowBox[{"1", ",", 
           RowBox[{"pos", "-", "30"}]}], "]"}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fit", "=", 
      RowBox[{"NonLinearFitWithAutoCutOff", "[", 
       RowBox[{"dat", ",", 
        RowBox[{"c111", "-", 
         RowBox[{"d111", " ", 
          RowBox[{"Log", "[", "x", "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"c111", ",", "d111"}], "}"}], ",", "x", ",", "0.0001", ",", 
        RowBox[{"{", 
         RowBox[{"0.0", ",", "end"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rangestart", "=", 
      RowBox[{"fit", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"model", "=", 
      RowBox[{"fit", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "<=", "rangestart"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"func", "[", 
             RowBox[{"model", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
          "#"}], "]"}], "&"}], ",", "dat"}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.639385063498994*^9, 3.639385146886058*^9}, {
   3.639385192908195*^9, 3.6393851955261507`*^9}, {3.639385238790694*^9, 
   3.639385258821747*^9}, {3.63938599671185*^9, 3.6393860079275312`*^9}, {
   3.639386123019101*^9, 3.639386190185567*^9}, {3.6393862799145603`*^9, 
   3.639386291430663*^9}, {3.639386322062307*^9, 3.6393863936890783`*^9}, {
   3.63938652503524*^9, 3.6393866183960123`*^9}, {3.63938667601178*^9, 
   3.639386745191671*^9}, {3.639386831432585*^9, 3.639386841765662*^9}, {
   3.639386893677704*^9, 3.639386899163848*^9}, {3.639387056478578*^9, 
   3.639387153487108*^9}, {3.6393872525260477`*^9, 3.639387285772932*^9}, {
   3.639388455132419*^9, 3.6393884844451857`*^9}, {3.6393886382379*^9, 
   3.6393888226698647`*^9}, {3.639388868847879*^9, 3.639389038190467*^9}, {
   3.639389121536189*^9, 3.639389121789846*^9}, {3.639389575711266*^9, 
   3.6393897166394787`*^9}, {3.639389851601425*^9, 3.639389860046885*^9}, 
   3.639390034050478*^9, {3.6393902375704117`*^9, 3.639390248176092*^9}, {
   3.639819655093113*^9, 3.639819666638213*^9}, {3.6398197103061028`*^9, 
   3.63981971736097*^9}, {3.639819749092578*^9, 3.639819772768672*^9}, {
   3.639820323667553*^9, 3.639820323763249*^9}, {3.639820362243219*^9, 
   3.639820362369196*^9}, 3.639820412595523*^9, 3.639820445973556*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TiseanPlotDiffDim", "[", 
   RowBox[{"filename_", ",", "fromdim_", ",", "todim_", ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "TiseanPlotAllMultiDim", "]"}]}]}], "]"}],
   ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "files", ",", "d2", ",", "diffDs", ",", "len", ",", " ", "opts4plot", 
      ",", "thresh", ",", "colors"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"files", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ChangeExtension", "[", 
          RowBox[{"filename", ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<.d2\>\"", ",", "\"\<.h2\>\"", ",", "\"\<.c2\>\""}], 
         "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d2", "=", 
      RowBox[{"LoadTiseanFile", "[", 
       RowBox[{
        RowBox[{"files", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "True"}], "]"}]}], ";", 
     RowBox[{"len", "=", 
      RowBox[{"Length", "[", "d2", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"diffDs", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"d", ",", 
          RowBox[{"DiffDimSchreiber", "[", 
           RowBox[{"d2", ",", "d"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"d", ",", "fromdim", ",", "todim"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"test", "=", "diffDs"}], ";", "\[IndentingNewLine]", 
     RowBox[{"thresh", " ", "=", " ", 
      RowBox[{"OptionValue", "[", "Thresh", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"opts4plot", " ", "=", " ", 
      RowBox[{"FilterRules", "[", 
       RowBox[{
        RowBox[{"{", "opts", "}"}], ",", 
        RowBox[{"Options", "[", "ListLogLinearPlot", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"colors", "=", 
      RowBox[{"ColorsFromScheme", "[", 
       RowBox[{"len", ",", 
        RowBox[{"OptionValue", "[", "ColorPalette", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ListLogLinearPlot", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", " ", "opts4plot", ",", " ", 
            
            RowBox[{"Joined", "\[Rule]", "True"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
            RowBox[{"GridLines", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"None", ",", "Automatic"}], "}"}]}], ",", 
            RowBox[{"GridLinesStyle", "->", 
             RowBox[{"Directive", "[", 
              RowBox[{"Gray", ",", "Dashed"}], "]"}]}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", 
             RowBox[{"files", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], " ", ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"Drop", "[", 
              RowBox[{"colors", ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ",", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Eps", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["D", "m"], "-", 
                  SubscriptBox["D", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"m", "-", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], "}"}]}]}], 
           "]"}], "&"}], ",", "\[IndentingNewLine]", "diffDs"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ListLogLinearPlot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"CutWhenWigly", "[", 
            RowBox[{"#", ",", "thresh"}], "]"}], "&"}], "/@", "d2"}], ",", 
         " ", "opts4plot", ",", " ", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
         RowBox[{"GridLines", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"None", ",", "Automatic"}], "}"}]}], ",", 
         RowBox[{"GridLinesStyle", "->", 
          RowBox[{"Directive", "[", 
           RowBox[{"Gray", ",", "Dashed"}], "]"}]}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"files", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], " ", ",", 
         RowBox[{"PlotStyle", "\[Rule]", "colors"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Eps", ",", "D2m"}], "}"}]}]}], "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.573367772501717*^9, 3.5733678241799498`*^9}, {
   3.573367863628393*^9, 3.573367976474114*^9}, {3.5733680981135807`*^9, 
   3.573368105569064*^9}, {3.5733681834180727`*^9, 3.573368230840611*^9}, {
   3.5733683541017437`*^9, 3.573368446861899*^9}, {3.57336855219795*^9, 
   3.573368570802103*^9}, {3.57336862238387*^9, 3.5733686435727997`*^9}, {
   3.573368783321108*^9, 3.573368806450865*^9}, {3.573368865040427*^9, 
   3.573369018781404*^9}, {3.57337574368642*^9, 3.573375792164798*^9}, {
   3.57337587171012*^9, 3.573375878669261*^9}, {3.573376198649124*^9, 
   3.5733762821897984`*^9}, 3.573376432899198*^9, {3.573385597289266*^9, 
   3.573385766339291*^9}, {3.583055543062704*^9, 3.583055589620535*^9}, {
   3.5830565539726553`*^9, 3.583056559691145*^9}, {3.583056872261346*^9, 
   3.5830568788410273`*^9}, {3.5830575758989162`*^9, 3.583057645842978*^9}, {
   3.58305771308291*^9, 3.583057717739312*^9}, 3.5830579615837727`*^9, {
   3.583058196611817*^9, 3.583058213222809*^9}, {3.583125528588154*^9, 
   3.583125543510735*^9}, {3.58312588532803*^9, 3.5831259661473017`*^9}, {
   3.583126069584059*^9, 3.583126076072658*^9}, {3.5831261996863337`*^9, 
   3.583126400907476*^9}, {3.583126612815907*^9, 3.5831267629471827`*^9}, {
   3.583127594907761*^9, 3.583127598410297*^9}, {3.5831278947970963`*^9, 
   3.5831279374103107`*^9}, {3.5831294777507277`*^9, 3.583129492994073*^9}, {
   3.583129850718445*^9, 3.583129870529428*^9}, {3.5831299358815193`*^9, 
   3.583129949611253*^9}, {3.583130042781601*^9, 3.583130050226738*^9}, {
   3.583130154595879*^9, 3.5831301626619253`*^9}, {3.583130199477425*^9, 
   3.583130221982833*^9}, {3.583130267712207*^9, 3.5831302830288486`*^9}, {
   3.598765526660439*^9, 3.598765536680931*^9}, {3.5987658140362377`*^9, 
   3.598765819083062*^9}, {3.5987658563387423`*^9, 3.5987659354683*^9}, {
   3.598766120307859*^9, 3.598766149903398*^9}, 3.598766194963944*^9, {
   3.598766531849657*^9, 3.5987665337234364`*^9}, {3.5988523983421907`*^9, 
   3.598852477521779*^9}, {3.598852723283147*^9, 3.598852761864643*^9}, {
   3.5988528286832237`*^9, 3.5988528630996428`*^9}, {3.598852895848199*^9, 
   3.5988528997000103`*^9}, {3.5988530134483232`*^9, 3.598853023972754*^9}, {
   3.598853067082477*^9, 3.5988530680476303`*^9}, {3.5988534205801353`*^9, 
   3.598853421755018*^9}, {3.598853781824552*^9, 3.598853784464673*^9}, {
   3.5988538802649384`*^9, 3.598853903584175*^9}, {3.598854015212913*^9, 
   3.5988540217064342`*^9}, {3.5988541935729847`*^9, 
   3.5988542606496143`*^9}, {3.598854307727318*^9, 3.598854353908972*^9}, {
   3.5988543990800753`*^9, 3.598854409146659*^9}, {3.598854494797214*^9, 
   3.598854496221986*^9}, {3.5988549225471907`*^9, 3.598854952836166*^9}, {
   3.598855027170054*^9, 3.598855031027892*^9}, {3.598855111142888*^9, 
   3.5988551112533693`*^9}, {3.600150912143132*^9, 3.600150967321506*^9}, {
   3.600151014218417*^9, 3.6001510196467533`*^9}, {3.6001519507632093`*^9, 
   3.600151964240634*^9}, {3.600151998949279*^9, 3.60015201051871*^9}, {
   3.600152165650175*^9, 3.600152190203397*^9}, {3.600152260407803*^9, 
   3.600152261186925*^9}, {3.6001523534891453`*^9, 3.600152423549473*^9}, {
   3.600152459632204*^9, 3.600152478426152*^9}, 3.600152516684649*^9, {
   3.600152744421373*^9, 3.600152747444141*^9}, {3.613730654797015*^9, 
   3.613730661161229*^9}, {3.6137307389913054`*^9, 3.613730742925267*^9}, {
   3.6137309239443007`*^9, 3.613730926192675*^9}, {3.6138885429584837`*^9, 
   3.61388859177614*^9}, {3.613888637033787*^9, 3.613888637506938*^9}, {
   3.613888681281912*^9, 3.6138886844459476`*^9}, {3.614502572240734*^9, 
   3.614502621032876*^9}, {3.61450267015221*^9, 3.614502880175514*^9}, {
   3.614502998342945*^9, 3.614503013867468*^9}, {3.6145031262943563`*^9, 
   3.614503171628244*^9}, {3.633841733600363*^9, 3.633841832860318*^9}, {
   3.633841893784317*^9, 3.633841921929364*^9}, {3.633842271813842*^9, 
   3.633842275342723*^9}, {3.633842671209515*^9, 3.633842817248898*^9}, {
   3.63384286447462*^9, 3.633842873157929*^9}, {3.633843035189251*^9, 
   3.633843044214281*^9}, {3.633843109352191*^9, 3.633843112338867*^9}, {
   3.634636167837748*^9, 3.634636173540491*^9}, {3.634636216215086*^9, 
   3.634636217833497*^9}, {3.6350552601342297`*^9, 3.635055417579166*^9}, {
   3.635055450676888*^9, 3.635055464441553*^9}, {3.637983929197345*^9, 
   3.6379839946366367`*^9}, {3.637984064034071*^9, 3.637984096654161*^9}, {
   3.637984827917469*^9, 3.63798486430201*^9}, {3.637984908448804*^9, 
   3.6379849162418633`*^9}, {3.637985948896162*^9, 3.6379859510073853`*^9}, {
   3.6379860590046673`*^9, 3.637986084653371*^9}, {3.6379861228798847`*^9, 
   3.637986171296679*^9}, {3.637986504353944*^9, 3.637986505330845*^9}, {
   3.637986562366825*^9, 3.637986581855847*^9}, {3.6380080568532047`*^9, 
   3.638008214896256*^9}, {3.638264805394251*^9, 3.638264836556181*^9}, {
   3.638265033630806*^9, 3.638265047724226*^9}, {3.638265086663587*^9, 
   3.638265087939172*^9}, {3.6382655792953253`*^9, 3.638265579693406*^9}, {
   3.638265733294685*^9, 3.638265798846506*^9}, {3.638265967578623*^9, 
   3.638266000092677*^9}, {3.638266062873653*^9, 3.638266064941545*^9}, {
   3.638266207325356*^9, 3.638266208812253*^9}, {3.638523640357605*^9, 
   3.6385236430289516`*^9}, {3.638523678087471*^9, 3.638523698614154*^9}, 
   3.638533896069056*^9, {3.639117062856884*^9, 3.639117094148664*^9}, {
   3.639117181738576*^9, 3.639117186537108*^9}, {3.639117226649087*^9, 
   3.639117258147037*^9}, {3.6391204293322973`*^9, 3.6391204858189287`*^9}, {
   3.63912097715186*^9, 3.639120994098318*^9}, {3.6391214343140306`*^9, 
   3.63912147083025*^9}, {3.6392079532733507`*^9, 3.639207959233457*^9}, {
   3.639387443398003*^9, 3.63938752727808*^9}, {3.63938757189951*^9, 
   3.639387671261717*^9}, 3.639387740478693*^9, 3.6393902134844418`*^9, {
   3.63980278236692*^9, 3.639802821598572*^9}, {3.639803329343637*^9, 
   3.639803410985735*^9}, {3.6398034450715427`*^9, 3.639803766003893*^9}, {
   3.639803911816634*^9, 3.639803958662347*^9}, {3.639804199512114*^9, 
   3.639804200415497*^9}, 3.639804373560502*^9, {3.639804474147952*^9, 
   3.639804492869895*^9}, {3.639813895035954*^9, 3.639813912287002*^9}, {
   3.639814476659395*^9, 3.63981448187173*^9}, {3.639815470051362*^9, 
   3.6398154772967377`*^9}}],

Cell[CellGroupData[{

Cell["Legend", "Subsubsection",
 CellChangeTimes->{{3.634892025016287*^9, 3.634892029081429*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PlotLegends`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6446411134854937`*^9, 3.644641130762189*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TiseanLegend", "[", 
   RowBox[{"num_Integer", ",", 
    RowBox[{"with0_:", "True"}], ",", 
    RowBox[{"scheme_String:", "\"\<Rainbow\>\""}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "colors", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"colors", "=", 
      RowBox[{"ColorsFromScheme", "[", 
       RowBox[{"num", ",", "scheme"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"with0", ",", 
       RowBox[{"PrependTo", "[", 
        RowBox[{"colors", ",", 
         RowBox[{"Darker", "[", "Gray", "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"Legend", "[", 
        RowBox[{
         RowBox[{"MapIndexed", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Graphics", "[", 
               RowBox[{"{", 
                RowBox[{"#1", ",", "Thick", ",", " ", 
                 RowBox[{"Line", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], 
               "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{
                   RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}], 
                 "\[Equal]", "1"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{"with0", ",", 
                  RowBox[{
                   RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ",", 
                  RowBox[{"#2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "\"\<\>\""}],
                "]"}]}], "}"}], "&"}], ",", "colors"}], "]"}], ",", 
         RowBox[{"LegendLabel", "\[Rule]", "m"}], ",", 
         RowBox[{"LegendTextSpace", "\[Rule]", "1.5"}], ",", " ", 
         RowBox[{"LegendSpacing", "\[Rule]", "0"}], ",", 
         RowBox[{"LegendShadow", "\[Rule]", "None"}], ",", 
         RowBox[{"LegendBackground", "\[Rule]", 
          RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
         RowBox[{"LegendLabelSpace", "\[Rule]", "2"}], ",", 
         RowBox[{"LegendBorder", "\[Rule]", "None"}], ",", 
         RowBox[{"ShadowBackground", " ", "\[Rule]", 
          RowBox[{"Opacity", "[", "0", "]"}]}]}], "]"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "20"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6348916766617117`*^9, 3.634891796953691*^9}, {
  3.634891843512344*^9, 3.634891913583774*^9}, {3.634891948767254*^9, 
  3.634891988496009*^9}, {3.6348921054340887`*^9, 3.634892107152809*^9}, {
  3.634893238820324*^9, 3.634893243594686*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TiseanLegendNew", "[", 
   RowBox[{"num_Integer", ",", 
    RowBox[{"with0_:", "True"}], ",", 
    RowBox[{"scheme_String:", "\"\<Rainbow\>\""}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "colors", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"colors", "=", 
      RowBox[{"ColorsFromScheme", "[", 
       RowBox[{"num", ",", "scheme"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"with0", ",", 
       RowBox[{"PrependTo", "[", 
        RowBox[{"colors", ",", 
         RowBox[{"Darker", "[", "Gray", "]"}]}], "]"}]}], "]"}], ";", 
     RowBox[{"LineLegend", "[", 
      RowBox[{"colors", ",", 
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}], "\[Equal]",
              "1"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{"with0", ",", 
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ",", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "\"\<\>\""}], 
           "]"}], "&"}], ",", "colors"}], "]"}], ",", 
       RowBox[{"LegendLabel", "\[Rule]", "m"}], ",", 
       RowBox[{"LegendLayout", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Column\>\"", ",", "1"}], "}"}]}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.644640495953457*^9, 3.6446406796143913`*^9}, {
  3.644641080784236*^9, 3.6446410811979*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["test", "Subsubsection",
 CellChangeTimes->{{3.583057851837983*^9, 3.5830578544679832`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogDerivativeSeries", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Exp", "[", "x", "]"}], ",", 
       SuperscriptBox["x", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "6"}], "}"}]}], "]"}], ",", "3"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.59885360619731*^9, 3.598853683753559*^9}, {
  3.598853758009324*^9, 3.59885375831172*^9}, {3.598855037216329*^9, 
  3.59885510440029*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[ExponentialE]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "2"], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "3"], ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "4"], ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "5"], ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "6"], ",", "11"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.598853640193184*^9, 3.598853684242552*^9}, {
   3.598853717204122*^9, 3.5988537594647913`*^9}, {3.598855045939341*^9, 
   3.598855104733713*^9}, 3.599986020059683*^9, 3.602225768569528*^9, 
   3.603099006654873*^9, 3.606624211763747*^9, 3.607746267150323*^9, 
   3.608621848702366*^9, 3.609478900474628*^9, 3.609500293539816*^9, 
   3.609652541163516*^9, 3.6108583830778627`*^9, 3.612170115932082*^9, 
   3.613197419551897*^9, 3.613295086890427*^9, 3.613907590756225*^9, 
   3.629456431898819*^9, 3.633841561592946*^9, {3.634635694079515*^9, 
   3.6346356945204782`*^9}, 3.6348792483392897`*^9, 3.6380937268222723`*^9, 
   3.639383478469811*^9, 3.640433204008623*^9, 3.6412860840997477`*^9, 
   3.641808717180892*^9, 3.641834052225163*^9, 3.6418725004676332`*^9, 
   3.64197250747787*^9, 3.642100702393568*^9, 3.642133652443987*^9, 
   3.643517905439568*^9, 3.643559146109*^9, 3.6439493604802103`*^9, 
   3.644319514707255*^9, 3.6446406270825644`*^9, {3.644900512649018*^9, 
   3.644900517674769*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Fitting - Function to perform Fitting with automated range detection\
\>", "Section",
 InitializationGroup->True,
 CellChangeTimes->{{3.638090668854916*^9, 3.638090675289735*^9}, {
  3.6446414864874697`*^9, 3.644641510262238*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"LogLinFitFun", "=", 
   RowBox[{
    RowBox[{"NonlinearModelFit", "[", 
     RowBox[{"#", ",", 
      RowBox[{"c", "-", 
       RowBox[{"d", " ", 
        RowBox[{"Log", "[", "x", "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", "d"}], "}"}], ",", "x"}], "]"}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ConstFitFun", "=", 
   RowBox[{
    RowBox[{"LinearModelFit", "[", 
     RowBox[{"#", ",", "0", ",", "x"}], "]"}], "&"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.641662657453182*^9, 3.641662681081002*^9}, {
  3.641789832285756*^9, 3.641789870750173*^9}, {3.644641555145419*^9, 
  3.644641558634048*^9}}],

Cell[CellGroupData[{

Cell["Fully Automatic Fitting rountines for many segment fitting", \
"Subsection",
 CellChangeTimes->{{3.641704411616403*^9, 3.6417044348311863`*^9}}],

Cell["\<\
Combined fitting function : First determines threshold for quality of fits \
from all fits of minimal size. Use given quantile + 0.1\[Sigma]  of fits \
quality for threshold.
Then get the longest fits for all good positions and select the largest among \
them (30% overlap allowed)\
\>", "Text",
 CellChangeTimes->{{3.6417041159485073`*^9, 3.641704236030449*^9}, {
  3.641707537601643*^9, 3.641707576800695*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"FitQualityCriterion", "[", "model_", "]"}], ":=", 
     RowBox[{"Variance", "[", 
      RowBox[{"model", "[", "\"\<FitResiduals\>\"", "]"}], "]"}]}], ";"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"FitQualityCriterion", "[", "model_", "]"}], ":=", 
     RowBox[{"model", "[", "\"\<EstimatedVariance\>\"", "]"}]}], ";"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FitQualityCriterion", "[", "model_", "]"}], ":=", 
     RowBox[{"Total", "[", 
      SuperscriptBox[
       RowBox[{"model", "[", "\"\<FitResiduals\>\"", "]"}], "2"], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"FitQualityCriterion", "[", "model_", "]"}], ":=", 
      RowBox[{
       RowBox[{"Mean", "[", 
        RowBox[{"model", "[", "\"\<FitResiduals\>\"", "]"}], "]"}], "+", 
       RowBox[{"StandardDeviation", "[", 
        RowBox[{"model", "[", "\"\<FitResiduals\>\"", "]"}], "]"}]}]}], ";"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"FitQualityCriterion", "[", "model_", "]"}], ":=", 
      RowBox[{"Max", "[", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{
         RowBox[{"model", "[", "\"\<ParameterConfidenceIntervals\>\"", "]"}], 
         ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "0"}], "}"}]}], "}"}], "\[Rule]", 
          "Subtract"}]}], "]"}], "]"}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FindAllFits", "[", 
     RowBox[{"data_", ",", "fitfun_", ",", "minPoints_", ",", 
      RowBox[{"quantile_:", "0.25"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "cleaned", ",", "shortfits", ",", "fiterrors", ",", "thresh", ",", 
        "goodintervals"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"joined", " ", "=", " ", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Head", "[", 
                 RowBox[{"data", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "===", 
                "List"}], ",", 
               RowBox[{"Flatten", "[", 
                RowBox[{"data", ",", "1"}], "]"}], ",", "data"}], "]"}], ",", 
             
             RowBox[{
              RowBox[{"(", 
               RowBox[{"And", "@@", 
                RowBox[{"NumberQ", "/@", "#"}]}], ")"}], "&"}]}], "]"}], ",", 
           "First"}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"cleaned", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"data", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"And", "@@", 
             RowBox[{"NumberQ", "/@", "#"}]}], ")"}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"shortfits", "=", 
        RowBox[{"FitShortRegions", "[", 
         RowBox[{"cleaned", ",", "fitfun", ",", "minPoints"}], "]"}]}], ";", 
       "\n", "     ", 
       RowBox[{"fiterrors", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"FitQualityCriterion", ",", " ", 
          RowBox[{"shortfits", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"thresh", "=", 
        RowBox[{
         RowBox[{"Quantile", "[", 
          RowBox[{"fiterrors", ",", "quantile"}], "]"}], "+", 
         RowBox[{"0.1", 
          RowBox[{"StandardDeviation", "[", "fiterrors", "]"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"goodintervals", "=", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Zip", "[", 
            RowBox[{"shortfits", ",", "fiterrors"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "<", "thresh"}], "&"}]}], "]"}],
          "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1", ",", "2"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"SelectInvervals", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"FindMaxFitRegion", "[", 
              RowBox[{"cleaned", ",", "fitfun", ",", 
               RowBox[{"2", "*", "thresh"}], ",", "#", ",", "minPoints"}], 
              "]"}], "&"}], ",", 
            RowBox[{"goodintervals", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], ">", "0"}], "&"}]}], "]"}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.638093031260257*^9, 3.638093031261278*^9}, {
   3.638093180663507*^9, 3.638093180775228*^9}, {3.638093219479105*^9, 
   3.638093219555917*^9}, {3.63809350200581*^9, 3.638093532789185*^9}, {
   3.638093590678073*^9, 3.638093604976403*^9}, {3.638093661430141*^9, 
   3.638093662599297*^9}, {3.638093722456201*^9, 3.638093723493847*^9}, 
   3.6380938228209457`*^9, {3.638093871910623*^9, 3.638093893825533*^9}, {
   3.63852848139968*^9, 3.638528582348729*^9}, {3.638528623820088*^9, 
   3.638528640392704*^9}, {3.640679913670895*^9, 3.640680004997058*^9}, {
   3.641291696173369*^9, 3.641291786725605*^9}, {3.641661912358114*^9, 
   3.641661946929799*^9}, {3.64166199016544*^9, 3.641662052796559*^9}, {
   3.641662273564547*^9, 3.641662326806256*^9}, {3.641662422802608*^9, 
   3.641662429096489*^9}, {3.641662462508907*^9, 3.641662519151944*^9}, {
   3.641662565285267*^9, 3.64166260328025*^9}, {3.641662668556328*^9, 
   3.641662758060137*^9}, {3.641662815370452*^9, 3.641662935973714*^9}, {
   3.64166299551252*^9, 3.641663112793765*^9}, {3.641664231097617*^9, 
   3.641664294077633*^9}, {3.64166436072561*^9, 3.641664389620004*^9}, {
   3.641664581252876*^9, 3.641664606502681*^9}, {3.64166469425009*^9, 
   3.641664717973631*^9}, {3.641664928987842*^9, 3.641664935540722*^9}, {
   3.641665098509207*^9, 3.641665098699259*^9}, {3.641665238142035*^9, 
   3.641665251627252*^9}, {3.641665334489698*^9, 3.641665334651022*^9}, {
   3.641665379901065*^9, 3.6416654079361*^9}, {3.641704159267557*^9, 
   3.641704159540135*^9}, {3.641704576358426*^9, 3.641704577703137*^9}, {
   3.6417049668392973`*^9, 3.641704972487728*^9}, {3.641707397849304*^9, 
   3.641707468266067*^9}, 3.641707528283901*^9, {3.6417141586563787`*^9, 
   3.64171415927098*^9}, {3.641714416851071*^9, 3.6417144685469093`*^9}, {
   3.641714506610708*^9, 3.641714530017144*^9}, {3.641724117540753*^9, 
   3.6417241678659573`*^9}, {3.641790178487483*^9, 3.641790219302184*^9}, {
   3.641790541734168*^9, 3.641790547479562*^9}}],

Cell["Returns fits on all regions of given size", "Text",
 CellChangeTimes->{{3.6412916443624163`*^9, 3.641291661839696*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FitShortRegions", "[", 
   RowBox[{"data_", ",", "fitfun_", ",", 
    RowBox[{"size_:", "10"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "len", ",", "low", ",", "up", ",", "fits", ",", "range", ",", "fitter", 
      ",", "criterion"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"len", "=", 
      RowBox[{"Length", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"first", " ", "check", " ", "upwards"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"fitter", "=", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "range", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"fitfun", "[", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"range", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ";;", 
            RowBox[{"range", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "]"}]}], " ", 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"fits", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"fitter", "[", "#", "]"}], ",", "#"}], "}"}], "&"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "size"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"len", "-", "size"}], ",", "1"}], "}"}]}], "]"}]}], 
       "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"fits", "=", 
     RowBox[{"Map", "[", 
      RowBox[{"fitter", ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", "j"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"len", "-", "size"}], ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", 
             RowBox[{"i", "+", "size"}], ",", "len", ",", "1"}], "}"}]}], 
          "]"}], ",", "1"}], "]"}]}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.640679869013994*^9, 3.640679911902172*^9}, {
   3.640680015986279*^9, 3.6406800928702383`*^9}, {3.640680128935298*^9, 
   3.640680176746562*^9}, {3.6406802373814487`*^9, 3.6406802805195227`*^9}, {
   3.640680331814761*^9, 3.640680336196458*^9}, {3.640680521782269*^9, 
   3.640680560950893*^9}, {3.640680597060437*^9, 3.640680744533614*^9}, {
   3.640680788950109*^9, 3.640680790164633*^9}, {3.640680984951058*^9, 
   3.6406810184809027`*^9}, {3.640682231508183*^9, 3.640682235268214*^9}, {
   3.640682265525949*^9, 3.640682487973358*^9}, {3.640682623481359*^9, 
   3.640682687702671*^9}, {3.640682718776093*^9, 3.640682951830729*^9}, {
   3.640683306761423*^9, 3.640683325512719*^9}, {3.640683364510065*^9, 
   3.640683396827232*^9}, {3.640683456327279*^9, 3.640683608937029*^9}, 
   3.640685393756954*^9, {3.6406855441382647`*^9, 3.6406855518827477`*^9}, {
   3.6406857122868958`*^9, 3.6406857942222853`*^9}, {3.640685912281254*^9, 
   3.6406859205455523`*^9}, {3.640685961049138*^9, 3.64068597423568*^9}, {
   3.640686011547381*^9, 3.640686011983675*^9}, {3.6406863317550507`*^9, 
   3.640686334681389*^9}, {3.64068643759583*^9, 3.6406866127408333`*^9}, {
   3.64068668000493*^9, 3.6406866889012938`*^9}, {3.64068673622792*^9, 
   3.640686740527005*^9}, {3.640686849412548*^9, 3.6406868818717337`*^9}, {
   3.640687087851946*^9, 3.6406871065899563`*^9}, {3.640687182897087*^9, 
   3.6406871874471283`*^9}, 3.6406873223737097`*^9, {3.641273486701049*^9, 
   3.6412735462632313`*^9}, {3.6412813921198*^9, 3.6412813929276133`*^9}, {
   3.641281469812132*^9, 3.6412814796000643`*^9}, {3.6412896854978313`*^9, 
   3.6412897648082247`*^9}, {3.64128979901836*^9, 3.641289837740686*^9}, {
   3.6412899274697237`*^9, 3.641289927756423*^9}, {3.6412900547109957`*^9, 
   3.641290056101707*^9}, {3.641290363502265*^9, 3.641290400865402*^9}, {
   3.641290457562167*^9, 3.641290464598978*^9}, {3.641290523104381*^9, 
   3.6412905290550213`*^9}, {3.641290659436179*^9, 3.641290666854416*^9}, {
   3.64129074496412*^9, 3.6412907515033073`*^9}, {3.6412916657859163`*^9, 
   3.641291678456388*^9}, {3.641662014217727*^9, 3.641662015621488*^9}, {
   3.641662405076285*^9, 3.641662411895453*^9}, {3.641662783362256*^9, 
   3.641662802110937*^9}}],

Cell["\<\
starting from a certain point, try to increase Region where a good fit can be \
optained. Assumes that data is collated and does not contain Indeterminate etc\
\>", "Text",
 CellChangeTimes->{{3.64068034630881*^9, 3.64068038613914*^9}, {
  3.640680498075947*^9, 3.640680519803915*^9}, {3.641704607422765*^9, 
  3.641704610223349*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindMaxFitRegion", "[", 
   RowBox[{"data_", ",", "fitfun_", ",", "maxVariance_", ",", "index_", ",", 
    RowBox[{"minPoints_:", "6"}], ",", 
    RowBox[{"bothsides_:", "False"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "len", ",", "low", ",", "up", ",", "fits", ",", "range", ",", "fitter", 
      ",", "criterion"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"len", "=", 
      RowBox[{"Length", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"low", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"index", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"up", "=", 
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{"index", "+", "minPoints"}], " ", ",", "len"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"first", " ", "check", " ", "upwards"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"fitter", "=", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "range", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"fitfun", "[", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"range", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ";;", 
              RowBox[{"range", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "]"}], ",", 
          "range"}], "}"}]}], " ", "\[IndentingNewLine]", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"criterion", "=", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "fit", "}"}], ",", 
        RowBox[{
         RowBox[{"FitQualityCriterion", "[", 
          RowBox[{"First", "[", "fit", "]"}], "]"}], "<", " ", 
         "maxVariance"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"fits", "=", 
      RowBox[{"MapWhile", "[", 
       RowBox[{"fitter", ",", "criterion", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"low", ",", "i"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "up", ",", "len", ",", "1"}], "}"}]}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "fits", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"range", "=", 
         RowBox[{
          RowBox[{"Last", "[", "fits", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"bothsides", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"up", "=", 
            RowBox[{"range", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"fits", "=", 
            RowBox[{"MapWhile", "[", 
             RowBox[{"fitter", ",", "criterion", ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"i", ",", "up"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "low", ",", "1", ",", 
                  RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "fits", "]"}], "\[Equal]", "0"}], ",", 
             RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"range", "=", 
               RowBox[{
                RowBox[{"Last", "[", "fits", "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Last", "[", "fits", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"Sort", "[", 
                 RowBox[{"data", "[", 
                  RowBox[{"[", 
                   RowBox[{"range", ",", "1"}], "]"}], "]"}], "]"}], ",", 
                "range"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Last", "[", "fits", "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"Sort", "[", 
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{"range", ",", "1"}], "]"}], "]"}], "]"}], ",", 
            "range"}], "}"}]}], "\[IndentingNewLine]", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.640679869013994*^9, 3.640679911902172*^9}, {
   3.640680015986279*^9, 3.6406800928702383`*^9}, {3.640680128935298*^9, 
   3.640680176746562*^9}, {3.6406802373814487`*^9, 3.6406802805195227`*^9}, {
   3.640680331814761*^9, 3.640680336196458*^9}, {3.640680521782269*^9, 
   3.640680560950893*^9}, {3.640680597060437*^9, 3.640680744533614*^9}, {
   3.640680788950109*^9, 3.640680790164633*^9}, {3.640680984951058*^9, 
   3.6406810184809027`*^9}, {3.640682231508183*^9, 3.640682235268214*^9}, {
   3.640682265525949*^9, 3.640682487973358*^9}, {3.640682623481359*^9, 
   3.640682687702671*^9}, {3.640682718776093*^9, 3.640682951830729*^9}, {
   3.640683306761423*^9, 3.640683325512719*^9}, {3.640683364510065*^9, 
   3.640683396827232*^9}, {3.640683456327279*^9, 3.640683608937029*^9}, 
   3.640685393756954*^9, {3.6406855441382647`*^9, 3.6406855518827477`*^9}, {
   3.6406857122868958`*^9, 3.6406857942222853`*^9}, {3.640685912281254*^9, 
   3.6406859205455523`*^9}, {3.640685961049138*^9, 3.64068597423568*^9}, {
   3.640686011547381*^9, 3.640686011983675*^9}, {3.6406863317550507`*^9, 
   3.640686334681389*^9}, {3.64068643759583*^9, 3.6406866127408333`*^9}, {
   3.64068668000493*^9, 3.6406866889012938`*^9}, {3.64068673622792*^9, 
   3.640686740527005*^9}, {3.640686849412548*^9, 3.6406868818717337`*^9}, {
   3.640687087851946*^9, 3.6406871065899563`*^9}, {3.640687182897087*^9, 
   3.6406871874471283`*^9}, 3.6406873223737097`*^9, {3.641273486701049*^9, 
   3.6412735462632313`*^9}, {3.6412813921198*^9, 3.6412813929276133`*^9}, {
   3.641281469812132*^9, 3.6412814796000643`*^9}, {3.6412908083408537`*^9, 
   3.641290829282702*^9}, {3.641662230261645*^9, 3.641662255841932*^9}, {
   3.641663911132506*^9, 3.641663923356511*^9}, {3.641664165934873*^9, 
   3.641664206526631*^9}, {3.641664737770033*^9, 3.641664742467494*^9}, {
   3.641664777430023*^9, 3.641664915403246*^9}, {3.641665160930535*^9, 
   3.64166521627247*^9}, {3.641665422277835*^9, 3.641665475389421*^9}, {
   3.641665708605714*^9, 3.641665713235957*^9}, {3.641665867944599*^9, 
   3.641665876377833*^9}, {3.641665926008968*^9, 3.641665932171066*^9}, {
   3.6417045731315517`*^9, 3.64170459482659*^9}}],

Cell["\<\
Maps until a criterium is met (like in Haskell: takeWhile crit $ map fun list)\
\>", "Text",
 CellChangeTimes->{{3.640681467338873*^9, 3.640681560605027*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MapWhile", "[", 
   RowBox[{"fun_", ",", "crit_", ",", "list_List"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"result", ",", " ", "pred", ",", "n", ",", "len", ",", "next"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"len", "=", 
      RowBox[{"Length", "[", "list", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"pred", "=", "True"}], ";", "\[IndentingNewLine]", 
     RowBox[{"result", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"n", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"pred", " ", "&&", " ", 
        RowBox[{"n", "\[LessEqual]", "len"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"next", "=", 
         RowBox[{"fun", "[", 
          RowBox[{"list", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"pred", "=", 
         RowBox[{"crit", "[", "next", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"pred", ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"result", ",", "next"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"n", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "result"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.640681418835627*^9, 3.640681464094881*^9}, {
  3.640681507295608*^9, 3.640681516832164*^9}, {3.640681572256421*^9, 
  3.640681576545063*^9}, {3.640681731088346*^9, 3.640681733824959*^9}, {
  3.640681764833159*^9, 3.640681995924806*^9}, {3.640682029460054*^9, 
  3.640682149217723*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MapWhile", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "^", "2"}], "&"}], ",", 
   RowBox[{
    RowBox[{"#", "<", "36"}], "&"}], ",", 
   RowBox[{"{", "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MapWhile", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "^", "2"}], "&"}], ",", 
   RowBox[{
    RowBox[{"#", "<", "36"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MapWhile", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "^", "2"}], "&"}], ",", 
   RowBox[{
    RowBox[{"#", "<", "36"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.640682165326919*^9, 3.6406822149794607`*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.640682190772287*^9, 3.640682211739071*^9}, 
   3.641272486514513*^9, 3.64166186428972*^9, 3.64170204405507*^9, 
   3.64180871726223*^9, 3.641834052289302*^9, 3.6418725005791388`*^9, 
   3.641972507540015*^9, 3.642100703271566*^9, 3.642133652541973*^9, 
   3.643517905704823*^9, 3.643559146193668*^9, 3.6439493605605288`*^9, 
   3.644319514829257*^9, 3.644640627179144*^9, {3.644900513560996*^9, 
   3.644900531279299*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{{3.640682190772287*^9, 3.640682211739071*^9}, 
   3.641272486514513*^9, 3.64166186428972*^9, 3.64170204405507*^9, 
   3.64180871726223*^9, 3.641834052289302*^9, 3.6418725005791388`*^9, 
   3.641972507540015*^9, 3.642100703271566*^9, 3.642133652541973*^9, 
   3.643517905704823*^9, 3.643559146193668*^9, 3.6439493605605288`*^9, 
   3.644319514829257*^9, 3.644640627179144*^9, {3.644900513560996*^9, 
   3.644900531281004*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "9", ",", "16", ",", "25"}], "}"}]], "Output",
 CellChangeTimes->{{3.640682190772287*^9, 3.640682211739071*^9}, 
   3.641272486514513*^9, 3.64166186428972*^9, 3.64170204405507*^9, 
   3.64180871726223*^9, 3.641834052289302*^9, 3.6418725005791388`*^9, 
   3.641972507540015*^9, 3.642100703271566*^9, 3.642133652541973*^9, 
   3.643517905704823*^9, 3.643559146193668*^9, 3.6439493605605288`*^9, 
   3.644319514829257*^9, 3.644640627179144*^9, {3.644900513560996*^9, 
   3.644900531282687*^9}}]
}, Open  ]],

Cell["\<\
Selection routine for Intervals. For two intervals overlapping more than 30% \
(w.r.t. smaller), delete smaller one.\
\>", "Text",
 CellChangeTimes->{{3.641704467746855*^9, 3.641704534958638*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"IntervalLen", "[", 
    RowBox[{"Interval", "[", "]"}], "]"}], ":=", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IntervalLen", "[", "in_Interval", "]"}], ":=", 
   RowBox[{
    RowBox[{"Max", "[", "in", "]"}], "-", 
    RowBox[{"Min", "[", "in", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IntervalEmpty", "[", "in_Interval", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", "in", ")"}], "===", 
     RowBox[{"(", 
      RowBox[{"Interval", "[", "]"}], ")"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SelectInvervals", "[", "fits_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"withInt", ",", "n"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"withInt", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"MapNth", "[", 
          RowBox[{"Interval", ",", "#", ",", "3"}], "]"}], "&"}], ",", 
        "fits"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"n", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"n", "<", 
        RowBox[{"Length", "[", "withInt", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"IntervalLen", "[", 
             RowBox[{"IntervalIntersection", "[", 
              RowBox[{
               RowBox[{"withInt", "[", 
                RowBox[{"[", 
                 RowBox[{"n", ",", "3"}], "]"}], "]"}], ",", 
               RowBox[{"withInt", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"n", "+", "1"}], ",", "3"}], "]"}], "]"}]}], "]"}], 
             "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"IntervalLen", "[", 
                RowBox[{"withInt", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", ",", "3"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"IntervalLen", "[", 
                RowBox[{"withInt", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"n", "+", "1"}], ",", "3"}], "]"}], "]"}], "]"}]}],
               "]"}], ")"}]}], "<", "0.3"}], ",", "\[IndentingNewLine]", 
          RowBox[{"n", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"withInt", " ", "=", " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"IntervalLen", "[", 
                RowBox[{"withInt", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", ",", "3"}], "]"}], "]"}], "]"}], "<", 
               RowBox[{"IntervalLen", "[", 
                RowBox[{"withInt", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"n", "+", "1"}], ",", "3"}], "]"}], "]"}], "]"}]}],
               ",", 
              RowBox[{"Delete", "[", 
               RowBox[{"withInt", ",", "n"}], "]"}], ",", 
              RowBox[{"Delete", "[", 
               RowBox[{"withInt", ",", 
                RowBox[{"n", "+", "1"}]}], "]"}]}], "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", "withInt"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.640687271476722*^9, 3.640687310196553*^9}, {
  3.640687429438328*^9, 3.64068749814365*^9}, {3.640687699633988*^9, 
  3.640687774567088*^9}, {3.6406878548238173`*^9, 3.640687857062714*^9}, {
  3.6406879415753183`*^9, 3.640688152913134*^9}, {3.6406882751941223`*^9, 
  3.640688408185664*^9}, {3.641272821206949*^9, 3.641272888880335*^9}, {
  3.641272951896687*^9, 3.641273011099164*^9}, {3.6412731287544813`*^9, 
  3.641273130307435*^9}, {3.641284081605097*^9, 3.641284145496421*^9}, {
  3.641284238049715*^9, 3.641284292003336*^9}, {3.6412843848909063`*^9, 
  3.641284386448909*^9}, {3.641284434229425*^9, 3.64128454680735*^9}, {
  3.641286644423279*^9, 3.641286644764243*^9}, {3.6412915641371717`*^9, 
  3.641291565098538*^9}, {3.641665290328981*^9, 3.641665311709046*^9}, {
  3.64170401120684*^9, 3.6417040112858152`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Merge fits and Data", "Subsection",
 CellChangeTimes->{{3.641790587880554*^9, 3.641790606527156*^9}}],

Cell["\<\
Replaces fitted intervals in data and tags each point whether it came from an \
fitted interval.
{{{x,y},True/False},...}\
\>", "Text",
 CellChangeTimes->{{3.641788107041225*^9, 3.6417881205557117`*^9}, {
  3.641788161371933*^9, 3.6417882095297623`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"IntervalAndDataTagged", "[", 
   RowBox[{"dat_", ",", "fits_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"intervals", ",", "tagged"}], "}"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"intervals", "=", 
      RowBox[{"fits", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tagged", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", "idx", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"idx", ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"IntervalMemberQ", "[", 
                   RowBox[{"#", ",", "idx"}], "]"}], "&"}], ",", 
                 "intervals"}], "]"}], ",", "True"}], "]"}], "]"}]}], "}"}]}],
          "]"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", 
          RowBox[{"Length", "[", "dat", "]"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"idx", ",", "matches"}], "}"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "matches", "]"}], "<", "1"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"dat", "[", 
                RowBox[{"[", "idx", "]"}], "]"}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"dat", "[", 
                  RowBox[{"[", 
                   RowBox[{"idx", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"Mean", "[", 
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"dat", "[", 
                    RowBox[{"[", 
                    RowBox[{"idx", ",", "1"}], "]"}], "]"}], "]"}], "&"}], 
                    ",", 
                    RowBox[{"fits", "[", 
                    RowBox[{"[", "matches", "]"}], "]"}]}], "]"}], "]"}]}], 
                "}"}], ",", "1"}], "}"}]}], "]"}]}], "]"}], "@@", "#"}], 
        "&"}], ",", "tagged"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQ/evqrxxWpdeOd/Rv14Horidxn9iA9FfBZf9A9JQ1
QazsQHqZoIYoiF6QfdIURDO9fGwOonvO6jwH0Y+X+4BpD5/c1yD639rG9yDa
y++HCweQniXh5Aqi/8WreoFosyUL4kA074y3a0C0kLDLOhA9ZVL9HhB9mc3z
IIh+dGXrGbD6eTz3QLRMq95jEL1ZpfgViGbvEPkDotd0tXBxAuk+IVEpEP3M
MkYPRDNFGhuDaLGIeSYg+kO+lzWInis4FUwLFMd4gGiNRP1wEP18lncSiL7i
EZYLoh/Z/m0E0Sc0VZtAdM0yyy0gesPMGjAdODHugxiQ9vU7CqY3HWFrOQSk
+VbXLgbRKnGPj4HohCkZp0A0ACtznBE=
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Fitting Routine that enhances fit range automatically (old, see FindAllFits)\
\>", "Subsection",
 CellChangeTimes->{{3.641790078677397*^9, 3.6417900954040747`*^9}, {
  3.641790863643861*^9, 3.641790877964308*^9}, {3.6446416465039454`*^9, 
  3.64464164949605*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "MaximalBy", "]"}], "\[Equal]", "0"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"MaximalBy", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", "f_"}], "]"}], ":=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MaximalBy", "[", 
       RowBox[{"exp_", ",", "f_"}], "]"}], ":=", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"m", "=", 
          RowBox[{"Map", "[", 
           RowBox[{"f", ",", "exp"}], "]"}]}], "}"}], ",", 
        RowBox[{"exp", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"m", ",", 
             RowBox[{"Max", "[", "m", "]"}]}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "]"}]}]}]}], "]"}],
   ";"}]], "Input",
 CellChangeTimes->{{3.644901631967958*^9, 3.644901784824482*^9}, {
  3.644901824457968*^9, 3.644901839579219*^9}, {3.644901949005009*^9, 
  3.64490194919141*^9}, {3.644902021245332*^9, 3.644902034014731*^9}}],

Cell["\<\
They can be used to find a fit in a certain interval where both sides of the \
interval are potentially moved inwards to satisfy quality criterion\
\>", "Text",
 CellChangeTimes->{{3.644641650831647*^9, 3.644641702870982*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetLongestSubsequence", "[", 
    RowBox[{"list_", ",", "crit_"}], "]"}], ":=", 
   RowBox[{"MaximalBy", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "+", "1"}], ",", 
         RowBox[{"LengthWhile", "[", 
          RowBox[{
           RowBox[{"Drop", "[", 
            RowBox[{"list", ",", "x"}], "]"}], ",", "crit"}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", 
         RowBox[{
          RowBox[{"Length", "[", "list", "]"}], "-", "1"}]}], "}"}]}], "]"}], 
     ",", "Last"}], "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.6380906782967453`*^9, 3.638090678297616*^9}, {
  3.638090992946095*^9, 3.638090993743071*^9}, {3.638093043280476*^9, 
  3.638093044223742*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FitWithAutoCutOff", "[", 
   RowBox[{"data_", ",", "fitfun_", ",", "maxVariance_", ",", 
    RowBox[{"initRange_:", " ", "Null"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "joined", ",", "lm", ",", "range", ",", "resid", ",", "varparams", ",", 
      "var", ",", "ri", ",", "newdat", ",", "n"}], "}"}], ",", 
    RowBox[{
     RowBox[{"range", "=", "initRange"}], ";", "\[IndentingNewLine]", 
     RowBox[{"joined", " ", "=", " ", 
      RowBox[{"SortBy", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "===", "List"}], 
          ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"data", ",", "1"}], "]"}], ",", "data"}], "]"}], ",", 
        "First"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"range", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"initRange", "===", "Null"}], ",", 
        RowBox[{"range", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{"joined", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"Max", "[", 
            RowBox[{"joined", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]}], ",", 
        "initRange"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newdat", "=", 
      RowBox[{"SelectRange", "[", 
       RowBox[{"joined", ",", "range"}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"lm", "=", 
      RowBox[{"fitfun", " ", "[", "newdat", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"varparams", "=", 
      RowBox[{"lm", "[", "\"\<EstimatedVariance\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"n", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"varparams", ">", "maxVariance"}], "&&", 
        RowBox[{"n", "<", "20"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"{", 
           RowBox[{"range", ",", 
            RowBox[{"lm", "[", "\"\<EstimatedVariance\>\"", "]"}]}], "}"}], 
          "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"resid", "=", 
         RowBox[{"lm", "[", "\"\<StudentizedResiduals\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"var", "=", 
         RowBox[{"1.5", 
          RowBox[{"StandardDeviation", "[", "resid", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ri", "=", 
         RowBox[{"First", "[", 
          RowBox[{"GetLongestSubsequence", "[", 
           RowBox[{"resid", ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", "#", "]"}], "\[LessEqual]", "var"}], "&"}],
              ")"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"range", "=", 
         RowBox[{"Sort", "[", 
          RowBox[{"newdat", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ri", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"ri", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "+", 
                RowBox[{"ri", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "-", "1"}]}], "}"}], ",", 
             "1"}], "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"newdat", "=", 
         RowBox[{"SelectRange", "[", 
          RowBox[{"newdat", ",", "range"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"lm", "=", 
         RowBox[{"fitfun", " ", "[", "newdat", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"varparams", "=", 
         RowBox[{"lm", "[", "\"\<EstimatedVariance\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"n", "++"}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"lm", ",", "range", ",", "n"}], "}"}]}]}], "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.638093031260257*^9, 3.638093031261278*^9}, {
   3.638093180663507*^9, 3.638093180775228*^9}, {3.638093219479105*^9, 
   3.638093219555917*^9}, {3.63809350200581*^9, 3.638093532789185*^9}, {
   3.638093590678073*^9, 3.638093604976403*^9}, {3.638093661430141*^9, 
   3.638093662599297*^9}, {3.638093722456201*^9, 3.638093723493847*^9}, 
   3.6380938228209457`*^9, {3.638093871910623*^9, 3.638093893825533*^9}, {
   3.63852848139968*^9, 3.638528582348729*^9}, {3.638528623820088*^9, 
   3.638528640392704*^9}, {3.641789891796413*^9, 3.641789948662932*^9}}],

Cell["Compatibility", "Text",
 CellChangeTimes->{{3.641790325042275*^9, 3.641790338731874*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NonLinearFitWithAutoCutOff", "[", 
   RowBox[{
   "data_", ",", "form_", ",", "params_", ",", "vars_", ",", "maxVariance_", 
    ",", 
    RowBox[{"initRange_:", "Null"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "fitfun", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fitfun", "=", 
      RowBox[{
       RowBox[{"NonlinearModelFit", "[", 
        RowBox[{"#", ",", "form", ",", "params", ",", "vars"}], "]"}], 
       "&"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"FitWithAutoCutOff", "[", 
      RowBox[{"data", ",", "fitfun", ",", "maxVariance", ",", "initRange"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LinearFitWithAutoCutOff", "[", 
   RowBox[{"data_", ",", "form_", ",", "vars_", ",", "maxVariance_", ",", 
    RowBox[{"initRange_:", "Null"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "fitfun", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fitfun", "=", 
      RowBox[{
       RowBox[{"LinearModelFit", "[", 
        RowBox[{"#", ",", "form", ",", "vars"}], "]"}], "&"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"FitWithAutoCutOff", "[", 
      RowBox[{"data", ",", "fitfun", ",", "maxVariance", ",", "initRange"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.641790344221994*^9, 3.6417904518092127`*^9}, {
   3.641809164785984*^9, 3.641809188384926*^9}, {3.642133615572114*^9, 
   3.6421336484196167`*^9}, 3.643615218708022*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Utility to plot fits and label them", "Subsection",
 CellChangeTimes->{{3.641790119353093*^9, 3.641790128075967*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fittedLineStyle", "=", 
   RowBox[{"Directive", "[", 
    RowBox[{"Black", ",", 
     RowBox[{"Opacity", "[", ".3", "]"}], ",", "Dotted", ",", 
     RowBox[{"AbsoluteThickness", "[", ".5", "]"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.598852098006096*^9, 3.598852110350108*^9}, {
  3.629627347376088*^9, 3.629627352783578*^9}, {3.629627388130541*^9, 
  3.629627467962091*^9}, {3.643702157841186*^9, 3.643702183201745*^9}, {
  3.643702245110875*^9, 3.643702246503029*^9}, {3.6437022935353403`*^9, 
  3.643702296654114*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotFitInLog", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ShowLabel", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelSize", "\[Rule]", "10"}], ",", 
     RowBox[{"LabelAngle", "\[Rule]", "0"}], ",", " ", 
     RowBox[{"BasePlotRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"LimiterSize", "\[Rule]", "Tiny"}], ",", 
     RowBox[{"ExtendFit", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"LabelPosition", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"-", "0.4"}]}], "}"}]}], ",", 
     RowBox[{"FitLineStyle", "->", "fittedLineStyle"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ShowLabel", "::", "usage"}], "=", 
   "\"\<Show label at fit (default: True)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LabelAngle", "::", "usage"}], "=", 
   "\"\<Angle at which label is put, Use Automatic and BasePlotRatio to get \
automatically rotated labels\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LabelSize", "::", "usage"}], "=", "\"\<font size of label\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LimiterSize", "::", "usage"}], "=", 
   "\"\<Size of limiters, (e.g. Small)\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtendFit", "::", "usage"}], "=", 
   "\"\<extend the fit by this many orders of magnitude above and below range\
\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LabelPosition", "::", "usage"}], "=", 
   "\"\<position of label along the fit {horizontally, vertically}, default: \
{middle,-0.4}\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BasePlotRatio", "::", "usage"}], "=", 
   "\"\<coordinate system ratio of base plot(the stuff is embedded \
into)\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FitLineStyle", "::", "usage"}], "=", 
   "\"\<line style of fit\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.638097556623993*^9, 3.6380975566253967`*^9}, {
   3.638097850360237*^9, 3.638097870455596*^9}, {3.638097994473783*^9, 
   3.6380979947281*^9}, {3.638526092467918*^9, 3.638526132237494*^9}, {
   3.638526169290592*^9, 3.638526468647607*^9}, {3.638527060698924*^9, 
   3.6385270639698763`*^9}, {3.641703488723338*^9, 3.641703540962358*^9}, {
   3.641703599940639*^9, 3.641703640401505*^9}, {3.641703906642606*^9, 
   3.641703963092759*^9}, {3.6417076866023817`*^9, 3.6417077106795692`*^9}, {
   3.6417134597719717`*^9, 3.641713465261921*^9}, {3.641714086035281*^9, 
   3.641714113116724*^9}, {3.643442472137586*^9, 3.643442510909623*^9}, 
   3.643517914011012*^9, {3.643701870426236*^9, 3.6437018707999773`*^9}, {
   3.643702098209296*^9, 3.643702125189993*^9}, {3.643710298062862*^9, 
   3.643710318156124*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetPlotCoordinateRatio", "[", "plot_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"aopt", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"AbsoluteOptions", "[", "plot", "]"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"AspectRatio", "/.", "aopt"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"Divide", "@@", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Subtract", "@@", "#"}]}], "&"}], ",", 
          RowBox[{"PlotRange", "/.", "aopt"}]}], "]"}]}], ")"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.641703321040124*^9, 3.641703396898391*^9}, {
  3.642241579620083*^9, 3.642241642990291*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotFitInLog", "[", 
   RowBox[{"fit_", ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "PlotFitInLog", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "lm", ",", "range", ",", "rangeMean", ",", "mi", ",", "ma", ",", 
      "logMeanRange", ",", "extend", ",", "lpos", ",", "arrowHead", ",", 
      "baseplot", ",", "angle"}], "}"}], ",", 
    RowBox[{
     RowBox[{"lm", "=", 
      RowBox[{"fit", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"range", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Clip", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["10", 
             RowBox[{"-", "8"}]], ",", 
            SuperscriptBox["10", "8"]}], "}"}]}], "]"}], "&"}], " ", "/@", 
       RowBox[{"fit", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"mi", "=", 
      RowBox[{"range", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ma", "=", 
      RowBox[{"range", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"extend", " ", "=", " ", 
      RowBox[{"OptionValue", "[", "ExtendFit", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"arrowHead", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Opacity", "[", ".4", "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", 
              RowBox[{"1", "/", "2"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", 
              RowBox[{
               RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", 
              RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Assert", "[", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"OptionValue", "[", "LabelPosition", "]"}], "]"}], 
       "\[GreaterEqual]", "2"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"lpos", " ", "=", " ", 
      RowBox[{"First", "[", 
       RowBox[{"OptionValue", "[", "LabelPosition", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"lpos", "===", "Automatic"}], ",", 
       RowBox[{"lpos", "=", 
        RowBox[{"Exp", "[", 
         RowBox[{"Mean", "[", 
          RowBox[{"Log", "[", "range", "]"}], "]"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"angle", "[", 
       RowBox[{"lm_", ",", "p_"}], "]"}], ":=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "LabelAngle", "]"}], "===", 
         "Automatic"}], " ", ",", 
        RowBox[{"ArcTan", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"lm", "[", "p", "]"}], "-", 
             RowBox[{"lm", "[", 
              RowBox[{"p", "+", "0.0001"}], "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Log", "[", "p", "]"}], "-", 
             RowBox[{"Log", "[", 
              RowBox[{"p", "+", "0.0001"}], "]"}]}], ")"}]}], "*", 
          RowBox[{"OptionValue", "[", "BasePlotRatio", "]"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"OptionValue", "[", "LabelAngle", "]"}], " ", "Degree"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"LogLinearPlot", "[", 
        RowBox[{
         RowBox[{"lm", "[", "x", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"Log", "[", "mi", "]"}], "-", "extend"}], "]"}], ",", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"Log", "[", "ma", "]"}], "+", "extend"}], "]"}]}], "}"}],
          ",", 
         RowBox[{"PlotStyle", "\[Rule]", "fittedLineStyle"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Log", "[", "mi", "]"}], ",", 
               RowBox[{
                RowBox[{"lm", "[", "mi", "]"}], "-", "limiterlen"}]}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Log", "[", "mi", "]"}], ",", 
               RowBox[{
                RowBox[{"lm", "[", "mi", "]"}], "+", "limiterlen"}]}], 
              "}"}]}], "}"}], "]"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Log", "[", "ma", "]"}], ",", 
               RowBox[{
                RowBox[{"lm", "[", "ma", "]"}], "-", "limiterlen"}]}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Log", "[", "ma", "]"}], ",", 
               RowBox[{
                RowBox[{"lm", "[", "ma", "]"}], "+", "limiterlen"}]}], 
              "}"}]}], "}"}], "]"}], ","}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Transparent", ",", 
           RowBox[{"Arrowheads", "[", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"OptionValue", "[", "LimiterSize", "]"}], ",", "1", 
               ",", 
               RowBox[{"{", 
                RowBox[{"arrowHead", ",", "1"}], "}"}]}], "}"}], "}"}], "]"}],
            ",", 
           RowBox[{"Arrow", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Log", "[", 
                 RowBox[{"mi", "*", "0.9"}], "]"}], ",", 
                RowBox[{"lm", "[", 
                 RowBox[{"mi", "*", "0.9"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Log", "[", "mi", "]"}], ",", 
                RowBox[{"lm", "[", "mi", "]"}]}], "}"}]}], "}"}], "]"}], ",", 
           
           RowBox[{"Arrow", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Log", "[", 
                 RowBox[{"ma", "*", "1.1"}], "]"}], ",", 
                RowBox[{"lm", "[", 
                 RowBox[{"ma", "*", "1.1"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Log", "[", "ma", "]"}], ",", 
                RowBox[{"lm", "[", "ma", "]"}]}], "}"}]}], "}"}], "]"}]}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "[", "ShowLabel", "]"}], ",", 
           RowBox[{"Inset", "[", 
            RowBox[{
             RowBox[{"Rotate", "[", 
              RowBox[{
               RowBox[{"StyleLabel", "[", 
                RowBox[{
                 RowBox[{"RoundNumbersInExp", "[", 
                  RowBox[{
                   RowBox[{"lm", "[", "\[Epsilon]", "]"}], ",", "0.01"}], 
                  "]"}], ",", 
                 RowBox[{"OptionValue", "[", "LabelSize", "]"}]}], "]"}], ",", 
               RowBox[{"angle", "[", 
                RowBox[{"lm", ",", "lpos"}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Log", "[", "lpos", "]"}], ",", 
               RowBox[{"lm", "[", "lpos", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{
                RowBox[{"OptionValue", "[", "LabelPosition", "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], "}"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.638097556623993*^9, 3.6380975566253967`*^9}, {
   3.638097850360237*^9, 3.638097870455596*^9}, {3.638097994473783*^9, 
   3.6380979947281*^9}, {3.638526092467918*^9, 3.638526132237494*^9}, {
   3.638526169290592*^9, 3.638526214224642*^9}, {3.6385264823389597`*^9, 
   3.6385267502594757`*^9}, {3.638526813853657*^9, 3.638526818999481*^9}, {
   3.638526940774303*^9, 3.6385269414040203`*^9}, {3.639123107365768*^9, 
   3.639123124684552*^9}, {3.639123197030868*^9, 3.6391232163351316`*^9}, {
   3.639129138490178*^9, 3.6391292407370777`*^9}, {3.639129360230282*^9, 
   3.63912939146268*^9}, {3.6391294230045633`*^9, 3.6391294720812693`*^9}, {
   3.639129762884623*^9, 3.6391298238976383`*^9}, {3.639129913044981*^9, 
   3.6391299652885036`*^9}, {3.6391300239523497`*^9, 3.639130042700203*^9}, {
   3.639130090864634*^9, 3.639130091436028*^9}, 3.6412850352203627`*^9, {
   3.6412859515914516`*^9, 3.641286077078661*^9}, {3.641286132755844*^9, 
   3.64128622481632*^9}, {3.641701984710848*^9, 3.641701984828238*^9}, {
   3.64170223378487*^9, 3.641702262891478*^9}, {3.6417024897533617`*^9, 
   3.641702505978114*^9}, {3.6417026270211163`*^9, 3.641702844811523*^9}, {
   3.641702967126533*^9, 3.641703044697496*^9}, {3.641703076747383*^9, 
   3.641703149419199*^9}, {3.641703437756168*^9, 3.6417034597396317`*^9}, {
   3.64170354799682*^9, 3.641703583369762*^9}, {3.6417036503331013`*^9, 
   3.641703664972677*^9}, {3.641703846441474*^9, 3.641703860717041*^9}, {
   3.6417039723382883`*^9, 3.6417039801358147`*^9}, {3.6417077240471487`*^9, 
   3.641707737246592*^9}, {3.64170777169912*^9, 3.641707774495104*^9}, {
   3.641713321433055*^9, 3.641713405171002*^9}, {3.641788300997414*^9, 
   3.641788308951454*^9}, {3.641800464844913*^9, 3.641800468210351*^9}, {
   3.643442540116365*^9, 3.643442574292264*^9}, {3.643442689192952*^9, 
   3.64344269593899*^9}, {3.64345298558974*^9, 3.643452987112294*^9}, {
   3.643703195713297*^9, 3.6437032475445547`*^9}, {3.643710270045013*^9, 
   3.643710291812561*^9}, 3.643710371438712*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Usecases", "Section",
 CellChangeTimes->{{3.641704638610721*^9, 3.6417046479992723`*^9}, {
  3.641707913520183*^9, 3.641707914703483*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testdat1", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"3", "-", 
         RowBox[{".05", 
          RowBox[{"Log", "[", "x", "]"}]}], "+", 
         RowBox[{"RandomReal", "[", "0.0001", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0.001", ",", "0.01", ",", "0.0001"}], "}"}]}], 
     "]"}], "~", "Join", "~", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"1", "-", 
         RowBox[{".5", 
          RowBox[{"Log", "[", "x", "]"}]}], "+", 
         RowBox[{"RandomReal", "[", "0.0001", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fits", "=", 
   RowBox[{"FindAllFits", "[", 
    RowBox[{"testdat1", ",", "LogLinFitFun", ",", "10", ",", "0.25"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"plt", "=", 
   RowBox[{"ListLogLinearPlot", "[", 
    RowBox[{"testdat1", ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"All", ",", "All"}], "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ratio", "=", 
    RowBox[{"GetPlotCoordinateRatio", "[", "plt", "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"important", " ", "to", " ", "do", " ", "it", " ", "once", " ", 
    RowBox[{"(", 
     RowBox[{"takes", " ", "time"}], ")"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"plt", ",", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"PlotFitInLog", "[", "#", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "fits"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"CalcImgSize", "[", "1.", "]"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "None"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"PlotFitInLog", "[", 
         RowBox[{"#", ",", 
          RowBox[{"LabelAngle", "\[Rule]", "Automatic"}], ",", 
          RowBox[{"BasePlotRatio", "\[Rule]", "ratio"}], ",", " ", 
          RowBox[{"LimiterSize", "\[Rule]", "Medium"}]}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", "fits"}], "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.641704638610721*^9, 3.641704655573647*^9}, {
  3.641707596423662*^9, 3.641707655065248*^9}, {3.641707812184166*^9, 
  3.641707816087071*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {Hue[0.67, 0.6, 0.6], Thickness[Large], LineBox[CompressedData["
1:eJxFVHs0lFsfHoTzvqdSczOImsiJkwoRkr0lJVFRUqdQdEFx8MmlFErRRaSU
lKKQIpeiHNHeqJRL7nLp4prKYGaYGTTG5+tY69tr7bXX89d+Lr/fw3b92/6g
NIVCQdP3f2/yVMzNCykqWMfR++qBchKenZt5iwdUcL2r2XDKPyTktFOUWr8q
46B+zM/PJaFMb/3+rmvK2M7hVf6lDBI6VkuOSKyUMcVbc+lUMglV5F79tUta
GaspOqgP3SShfvSgyBwr4R21x+OcrpLQ29Prus5pJZx0wOvgnGgSunetak/b
qISdNvE4ZpEkjN/m7m81Twn7myYdeRlOQtfCXOOyDhauz1LaejWEhI0NejrV
D1m4Wkq70S2QhBsrqtZoHWdhy6xNKbl+0//VhQel2rBwSbdJ6h/eJMy5yv5H
gc3Cq/sSJaUeJLzS858T60SKWCxnfTvnIAlf3+ZLKdUqYhKAA+n7SdjT737r
PxmKuMYwLyzNiYRKZxfONjyjiAP/nFzB203CBZln5m90UcRlW8/NdtxJws8v
eydiTBWxxsVeMGZPwlP0xdvFyorYX56Ii9xKQoHl3ITgCSbWHV0rZW5DwvKa
KbGwnYkvtrY1G28i4Ur1y4YHi5n4tMHPHMMNJLTK7bZ9doeJ3++YtcDQgoTa
iQ7HP4UzceOKQGdTSEKbDbaU2oNM7JKaoBq1dtp/4jw9zJqJf9sQw24yISG8
r1n+dQUTXxLG+84yIqGGb33bOIOJF2xROxpnQMJZO+435YoZ+JJ2gcOgHgmv
XdxeI9PLwH/OGbGLXUnCxav2HR2oYuDUxA8CjeUkJMI4HfvyGTj7sHRz2Z8k
3P2aVeyUxMAZvMsu+7Sm9UXdY308x8C5Tk4ezD9IWKd7z6XFh4HlHm+O6tYg
oa/Nut0b9zCwtUSghhaTcCrEbpH2BgYeSHlo92gRCbffvqZyXJeBXyxd0PJE
jYSZWmUiPVUG7osztU9aQMJIB9q9bQQD70s/lhKtTMKWi7stagV0nFubuvk6
i4RpyefXZHbTMe2PJXmPmSQ0ysxR7aql45ym9+qtdBJ2rIVZXiV03Ox5haTQ
SNigUNJsm0nHAxwlF+P50/m5peaduknHkSVuPsEKJHwSdv/kZCQdbzS9+y5r
DgmTA2VvVQTQcYiLUiZ1NgnVzHZdaj84jT86FK0jp/2uWTei70DHVjtLTz79
jYTz4iIv16+n4xNZBfv4ciQslCw3yltFx+kx+UF/yZLwWVhLT50GHU80bbF6
LjO9b+cWJS1n0PHrvBYltjQJJQnrzr2VpWPbjs4jmEJCfkd2y20hDcuarnRm
ThHQJ6al7WE/Deuz386PnyQg6SEzNNhKw3Pt0vsWigno2mh55nAlDetpufu8
miAgxz5AmVFMw75wae/6cQJaHrdaL3hMw3iZ/tw2EQHnTnklyyXTcPyy6rte
QgLW3nv7cWMcDc8P9LHWFBBQqexh/vMIGj59PJxZMkLA4UA17o5AGh6XfYDO
8QkovXejm5onDYu4K01UeAQsHCsapDrR8NefaUEdwwTs1+IH626j4ZzP5MC5
IQIuelAiDrKgYSYrbc62QQK+mf3K/5shDWssphyR5RDw4Wv5H6e0p/mH7Ux4
/4OAjuv9vdao0TArwJjq/52AbHk/liqVhq3ntRTs/0bAPk7YbHU5GnYwXaBK
7yfgbs9WP5sJKi7OCnFp6SNgldGckIQhKlZ++cq3tpeABguLXeR6qDj90SyX
3B4Cqpwy3hv/gYqX1A2LgroJ6GVr+Wx9NRWzTFN0D3cR8Ll5eSGtlIpDUriB
pp0EfNEYkC/1jIqz5WM2z/9CwLgfZVNzMqm4igd41M8EtBo8KlydTMUyX8eS
eR8JqC/rNn4qnoqZEZeu13VMY+ez3t0XqNhxW6xhfTsBSw388P4wKn6Al7c1
tRGQEr3DWXyMipOcwsPSWgnIcCh4kXeEinVDGIm3Pvwfc0bKBM1HpvtNJet5
w2YFLJuh+UgxXR6mL6WbeM+ZjRO9tUWf5ORm+pfA7PA/zNU7Z830nzzOHs31
LP8pM9MvcrjhrEUUw1xmZj9lMaQb7Gfdl56Z31nYrmF82EVZGrJ/5SeD94jP
FFamSM3wkcbWZvMPiQyk4Be/ARSaIYUf+HsVHGqiwOzfbxTZCCm4u8OzefkJ
CmxXNbZxsafgN+Z1Ny20KFD+05JSvWNT6J/cmiWcoinAemUSkviXBIU+q3BN
0ZkCQZ2dXGg/iTxuO98wfygBrg6dnsO7xajkRct3uo4EbNKVBNf9/RNdvc9x
ky+cBJODVd1/xU0g3c1mBj6bJsG/+sdRH1c44dEpBqNCwWuPsTG0r7X4u22I
GFS83U35bDyG0vODC/gLxCCAoztSeUaEDnzT9uCW/gQHJ3IFgc1ChNlUQafn
TzBsPCFZt1yIPqovrbdV/AmK1QSspGgB+lCZrT63YgIYbn5/Sn5kFPXM1X/Z
EjwBFHCG+XznUdTscGHPlhUTQGmXsaPD+xE0ZXK1ZGf/OPjXzxF0PWrUUJIy
Du5NPnHSLuEjlcYh6cfO4yCs3M134Ro++nbL63uF6jjI79aSZZTwkP/nWeym
z2PA08htoGYdDxUt7ui7mDIGqo4WWFGruYgXndjmfmgM2NPDJ7J3cdGOuuio
gGVj4Pl5pPGjbhiZDJk0R4yKwO/3kt74CYcQc551TH+JCGz3vbAmgz2EzB+H
6kVGiUDgL/8HkU5TZ0fsDhE4Jvq7YiySg4zzDG4aLRaB8ae8S7FlA0i6JsHk
I1cI3Md2nq2RGkCegCF5i4XgruM/UsGWP5CfmW9l0BUhUDmtIrMv+jtyr10F
rrsJgfiOR7992zcUmcm0CDIUgoa+QwuXaH1Dmo3lydakELQXHeZkhfSjeXal
DpZfBGAr6NIob/yK/JQFj+QLBDN5fEURp1YveHVRAHJTD3USl/rQA9thb003
ATgvw9UTcXpRmZqC7/k1AiD1jL2Ws60X2WWuIg7TBeDk3nuSquc9KJSMnG0z
NAqYeQ0KJ9g96FaDldSht6NgxQbHiC/R3ciSFahWcX8U9DavresUd6HIqNp3
IHQUWAQE5Rz27kLpos7Bvj2joH+vr4Jzdyd6U6d0/a3R6Iz/nSjgLitGlzkK
LsQuJ6PvfUEnM+MuXhwdAY9OfwhST/iMjjje+azaOALSa9V1Jq98QjqnXCKD
nowAdmJihSjmI9K03jJHJm4ESBdRT/OvdCCfa8zDUX4jgMd8ynx/ox256fzY
LrYfAeFmTRlHU9rQ0oSWs5dWjYBqr4ScvOxWJIoQ3pZijoCsNFp3OPqAHP2n
nLaP8YHtLz9bEEU/zfBmOx9U9soH7x1oRmOFbwcelPCBxycFjoFcMzqTHftk
WQofCOz1zhtpNCHbwaZuTgQfxN69sHmLZSMazWzKGHLng7iOVfNdPRpQ1VSh
aoQtHxjVbYhxia1HHVWPU1fr8UGSTtwG/aI69Nh5985URT64/Anyr9XUImZn
/LwuMQ9s9c+HmsveozMHREZEDw8s+qW/Gv308QrWf8cDe8xJ9rexSlS09oBP
fw4PMIUt7A+H3qFN30O/F1zngePULZVpbRVolVPD1MuTPKD17dNqQ7s3SOJ6
t9b1IA8Em1+/caTmFTJmymd12fBAz7ifkvaWcnTozlEZ0oAHfDJce3c2lqLH
Ez/8TFR54GWAmGzdixEt/vKJFXI8UB/5REqruQQND3yN7x/igr2/+BSh4orE
9YMfuOAdQ3L/pUYhqgzVl7Ms5QKPpScsQncVoNj758J7H3HBsYcuKyVXn6Bb
S5WXvLjGBSteVsotzs5BzeF3elRDuUBHqXqPqsUjtDJmZcUaDy54Ore15c7X
VLQ9N8jk1nYuuKBK1D1ZeRfdblnkXmTGBaLMzuJZuddQqzh8S7oWFxQ3/W1m
GR+B+jX3aLXTuYAyc56GtbnIUrjgv5Hn8JM=
       "]]}}, {}}, {{}, {}, 
    {GrayLevel[0], AbsoluteThickness[0.5], Opacity[0.3], Dashing[{0, Small}], 
     LineBox[CompressedData["
1:eJwVzXs01HkYBnC38P3O/JgxLmMMszIht2XUNjm1Xjm1W7qXcjtpo1OppYgS
NW3KramUqLBEObqpEBWtXkmEpJRK7MqllJDIrVX72z/e85zPOc95XvMNISs3
qqmoqCxh7/88uftycmK2BBt/mX2zfjoHznPW5jmeleCgq6H5JdbFmWplzZkS
1JMPJcaxbr7v3TE1Q4KrrfPXzWMt5Gs7laVK8JW2ueYtaw5kXAxs6D0swc6H
2p7nrNi9FlOyJEKCIx4vP0dOY/fmJO3T9ZCgePkuBytzDkRx7JyW9pmhu/nA
zmojDojPewVVppihdtVEhaYuB2J3PHL95GqGzzss1UM1OZCycLy1ucMUox8q
BRaTFBS9xSrDh02x4kCsTdgwBeb09I+19qbYrlHKI70UNkZ2h3k/EaOWqk5v
7RsKp6WyA2ZRYqx//KXO9hWFkJaZXn+ainHbJqPop48pTPWpvbHygQleelIv
E1ZTyNTJy7+73QQHinPaEsoplD9yCX4rMEGdgMK1bsUUStf4F7v/JcL6Ds+X
p65Q8Pngct/HX4SBts7WM85RqCxcFzJdXYQa/Y7b/j1DQXu+INsh3xjdYu6V
BBynMPhmX1rfMmP0fnOkkRdPoeTXKFHnmBB5en2f/BQUJKUOG06kCfEsJ7a9
P5zCivU2C8bnClGucL1/ZRsF/8aS66nvjDCkSnmVBFLge0x09CUYoeKZYPMV
HwpZxxrSo2RG6FDiYN2/gsKIdu8nbDXELn5Qq+9C9r+ynEGFIYb/9I+/LlCo
aZla8MXaEM/b97z/bRYFd+efxd21BpjfZ+M+YU8hDrMtlMEGWG51NKlcSiHP
KLVgi9AAf59xqMtcTGFrpJuWapk+jpASrTo9CpzcvZ0NAfpoVrjHSUAp7Jyi
5rdaRx8XP/NfFqdK4Y/tczOSCwS45u6+OW5jBIJySQDxFeBktJNj2gCB0S7l
oHxSDxXqZkPytwT8+89qZuXqYZZf5p2INgLH7SZv3lmmhw9+dN3T/ozApnCe
08nPfKypM9ZKqiMgjL/hmJPOx80u8Wl/3yMQnKs7tmUuHzt2OE6G3iZwZLTQ
9307DwMtxlc5XycQJ3g3PyuRhwfzPAtO5BGwdHk6qmPPQ8Vwb9usTALzPDPW
B13WRSN9Q350CoHaLCm1VNHFm/nr5R+VBNK/i9w9F+igjNftkBNDwGJIljB4
msFF8ydtR/cQkI+IVvSmMBh67cKuRtaLx9WMu08weMZ4deVF1uHfn154qWSw
p++Sjx/rak5Yzd39DMameiVURBLYKi3SOrqZwYp3RW8P7yZQ5OkcayNnUJ4Y
lP1DBIEaL5Ol0pkM+g8b9I2HE2j1VTc0kzEYt65C3sR6yoamXL4dg80yYeMh
1muDw6rGJAyGva769mEnga+xRRrVWgxetTP3Kw4jwEtMr0cNtp9an3eUtfRI
zMlSVQYnVXYPbWK9JHmV9OpXLi5+3pAoYp2VNeSeMsDFD3ujbytCCdzIec05
9pGL/B6rKd6sa3Irm+Lfc3H2yqblMtaDl5MDoju5GG9p09O1g4DmtSjbiHYu
Xkt67lzOWlQYMBTSxsXmif2KU6wdij3KtrRw8VugXd121u63nGMCXnBx2uMX
hotY/wddqyQ9
      "]]}}, {{}, {}, 
    {GrayLevel[0], AbsoluteThickness[0.5], Opacity[0.3], Dashing[{0, Small}], 
     LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAF3+psrFrFsAgYc2oy2sOQPDtPqae
aRbAXExQnLhpDkDIXNSZi2cWwJY304+lZw5Aejr/gGVjFsAODtl2f2MOQN71
VE8ZWxbA/rrkRDNbDkCmbADsgEoWwN4U/OCaSg5ANFpXJVApFsCcyCoZaikO
QFE1BZju5hXAGDCIiQjnDUAx8qutAFcVwMxaKpoaVw1AC6a4epzQFMDQnIdi
ttAMQG2rdyfbTBTAoLeuCvVMDEB1t4EE770TwCguveIIvgtAd7rxmIw4E8AE
vIZypjgLQB/ErF3/pxLAmKU3MhmoCkBPHxoCFRoSwPhnstEuGgpAeXHtXbSV
EcCoQegozpUJQEnKC+ooBhHAFHcFsEIGCUATGpAtJ4AQwNDD3e5AgAhAzHaN
oZD5D8BY6X8N4vwHQL7GkEh93A7AmmoJXFhuB0CjBGBefdINwC4DTmJY6QZA
1E/F1CeyDMB893mYLVkGQBY+jwoYlwvAk8RvrqXLBUBMGiWvG48KwP2oIHyn
RwVAzgNRtMlwCcAh6bh5frgEQEPbSCiLZQjAlkAML98yBEAEwNb89kMHwMbz
RhQVogNA1kfJkKgnBsDAf0vZ7RMDQJu9h5NtHgXADCMLVlCPAkCtQNz23P4D
wBIisgKI/wFAsrH8yF/yAsBqOBRnSXkBQMjFgVoo6wHAjCdAq631AEAq55xM
m80AwGhyUx/nZgBA/+wHW0OG/78sqUOWVMP/P0ImAt6kRP2//CSvTYWi/j+n
pcXfkQ37v2BSrsT7hv0/8gAhv6X8+L9oriOrhX78P9Z2qF8Ov/a/5MFn8blf
+z+hyMfdnaf0vwQEIqcBVPo/jGCw2ria8r+4928cj035PxETxZgoYfC/4KKM
8cYw+D/4QuNofpvsv6x8HzYSJ/c//5SUIlUb6L/sDYHaBwf2P9OedZd55+O/
0M1Y7hD69D/VadITapHfv0g/xMFf8vM/ZwBq/TOh1r81aP70WNTyPyUNwroy
k8y/xb+ul2XJ8T+E3CEIR/20v8nOLZocqPA/S/5X8T4GrT/EHoG4MhjvPzUO
/g+M0Mc/Pf2SG1MG7T8IpCItceLUP59KQj7Ix+o/XdHm2wBE3T9H9d0/ZK/o
PxbzwkexveI/GAOhwIuh5j9LSDqfuDLnP9J/AQEIZ+Q/tOWBO3Jb6z/SWU4g
q1LiP15jcnEEbus/TDsDBWJJ4j8H4WKnloDrP8ccuOkYQOI/WtxDE7ul6z+9
3yGzhi3iP//SBesD8Os/qGX1RWII4j9KwImalYTsP35xnGsZvuE/4JqR+bit
7T8qieq2hynhP4oYgi9LwO0/pGqfmz4g4T8zlnJl3dLtPx9MVID1FuE/hpFT
0QH47T8UD75JYwThPyuIFalKQu4/AJWR3D7f4D92dZlY3NbuP9agOAL2lOA/
IPOJjm7p7j9Pgu3mrIvgP8lwesQA/O4/y2Oiy2OC4D8cbFswJSHvP8AmDJXR
b+A/wmIdCG5r7z+qrN8nrUrgP2zgDT4Afu8/JI6UDGRB4D8VXv5zkpDvP6Bv
SfEaOOA/aFnf37a17z+WMrO6iCXgPxHXzxVJyO8/EBRonz8c4D+6VMBL29rv
P4r1HIT2EuA/ZNKwgW3t7z8F19ForQngPw1Qobf//+8/gLiGTWQA4D/0Wles

      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{-6.907755278982137, 1.0000051254392417`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& )},
  Epilog->{{{
      GrayLevel[0, 0], 
      Arrowheads[{{Medium, 1, {
          GraphicsBox[{
            Opacity[0.4], 
            LineBox[
             NCache[{{-1, 
                Rational[1, 2]}, {0, 0}, {-1, 
                Rational[-1, 2]}, {-1, 
                Rational[1, 2]}}, {{-1, 0.5}, {0, 
               0}, {-1, -0.5}, {-1, 0.5}}]]}], 1}}}], 
      ArrowBox[{{-7.013115794639964, 
       3.3506855830364666`}, {-6.907755278982137, 3.3454184472750432`}}], 
      ArrowBox[{{-4.509860006183766, 3.225543939593992}, {-4.605170185988091, 
       3.230308643461856}}]}, 
     InsetBox[
      BoxData[
       FormBox[
        RotationBox[
         StyleBox[
          RowBox[{
            RowBox[{"3.`", "\[VeryThinSpace]"}], "-", 
            RowBox[{"0.05`", " ", 
              RowBox[{"log", "(", "\[Epsilon]", ")"}]}]}], 10, Bold, 
          FontFamily -> "Times New Roman", StripOnInput -> False], 
         BoxRotation -> -0.09074741695896721], 
        TraditionalForm]], {-5.756462732485113, 3.2878635453684497`}, {
      0, -0.4}]}, {{
      GrayLevel[0, 0], 
      Arrowheads[{{Medium, 1, {
          GraphicsBox[{
            Opacity[0.4], 
            LineBox[
             NCache[{{-1, 
                Rational[1, 2]}, {0, 0}, {-1, 
                Rational[-1, 2]}, {-1, 
                Rational[1, 2]}}, {{-1, 0.5}, {0, 
               0}, {-1, -0.5}, {-1, 0.5}}]]}], 1}}}], 
      ArrowBox[{{-4.710530701645918, 3.355314630464364}, {-4.605170185988091, 
       3.3026343446110245`}}], 
      ArrowBox[{{0.09531017980432493, 0.9523929114526828}, {0., 
       1.000048026706022}}]}, 
     InsetBox[
      BoxData[
       FormBox[
        RotationBox[
         StyleBox[
          RowBox[{
            RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
            RowBox[{"0.5`", " ", 
              RowBox[{"log", "(", "\[Epsilon]", ")"}]}]}], 10, Bold, 
          FontFamily -> "Times New Roman", StripOnInput -> False], 
         BoxRotation -> -0.7383824196895157], 
        TraditionalForm]], {-2.3025850929940455`, 2.1513411856585236`}, {
      0, -0.4}]}},
  FrameTicks->{{Automatic, Automatic}, {{{-6.907755278982137, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.001\"", 0.001, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-5.298317366548036, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.005\"", 0.005, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-4.605170185988092, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.010\"", 0.01, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.050\"", 0.05, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-2.302585092994046, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.500\"", 0.5, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {0., 
       FormBox[
        TagBox[
         InterpretationBox["\"1.000\"", 1., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {1.6094379124341003`, 
       FormBox[
        TagBox[
         InterpretationBox["\"5.000\"", 5., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-6.214608098422191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.809142990314028, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.521460917862246, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.115995809754082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.961845129926823, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8283137373023015`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.710530701645918, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.6592600369327783`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.4079456086518722`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659907, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.35667494393873245`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782628`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-6.907755278982137, 
       FormBox["\"\"", TraditionalForm]}, {-5.298317366548036, 
       FormBox["\"\"", TraditionalForm]}, {-4.605170185988092, 
       FormBox["\"\"", TraditionalForm]}, {-2.995732273553991, 
       FormBox["\"\"", TraditionalForm]}, {-2.302585092994046, 
       FormBox["\"\"", TraditionalForm]}, {-0.6931471805599453, 
       FormBox["\"\"", TraditionalForm]}, {0., 
       FormBox["\"\"", TraditionalForm]}, {1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm]}, {-6.214608098422191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.809142990314028, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.521460917862246, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.115995809754082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.961845129926823, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8283137373023015`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.710530701645918, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.6592600369327783`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.4079456086518722`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659907, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.35667494393873245`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782628`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}},
  GridLines->{None, None},
  ImageSize->460.,
  Method->{},
  PlotLabel->None,
  PlotRange->{{-6.907755278982137, 0.}, {1.0000051254392417`, 
   3.345406677059961}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{{{-6.907755278982137, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.001\"", 0.001, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-5.298317366548036, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.005\"", 0.005, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-4.605170185988092, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.010\"", 0.01, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-2.995732273553991, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.050\"", 0.05, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-2.302585092994046, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-0.6931471805599453, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.500\"", 0.5, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {0., 
      FormBox[
       TagBox[
        InterpretationBox["\"1.000\"", 1., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {1.6094379124341003`, 
      FormBox[
       TagBox[
        InterpretationBox["\"5.000\"", 5., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-6.214608098422191, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.809142990314028, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.521460917862246, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.115995809754082, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.961845129926823, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.8283137373023015`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.710530701645918, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.912023005428146, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.506557897319982, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.2188758248682006`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.8134107167600364`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.6592600369327783`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.5257286443082556`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.4079456086518722`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.6094379124341003`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.203972804325936, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.916290731874155, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.5108256237659907, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.35667494393873245`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.2231435513142097, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.10536051565782628`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.6931471805599453, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.0986122886681098`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.3862943611198906`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}, Automatic}]], "Output",
 CellChangeTimes->{{3.6417076284616213`*^9, 3.641707661201249*^9}, 
   3.6417078224874496`*^9, 3.641790151769302*^9, 3.641790249034132*^9, 
   3.6435179132078867`*^9, 3.644901263969757*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Excess Entropy Decomposition Based on \[Delta]h", "Section",
 InitializationGroup->True,
 CellChangeTimes->{{3.641807481380538*^9, 3.6418075087154837`*^9}}],

Cell["\<\
The main Function is DecomposeAndPlotExcessEntropy, see below\
\>", "Text",
 CellChangeTimes->{{3.644641750232873*^9, 3.644641769847005*^9}}],

Cell["\<\
Theoretically for a D-dim attractor with D=Floor[D] + \[Delta]D
we should have
\[Delta]h = - (1 - \[Delta]D) log \[Epsilon] if m = Floor[D]
\[Delta]h = - \[Delta]D log \[Epsilon] if m = Floor[D]+1
See DecomposeAndPlotExcessEntropy2m\
\>", "Text",
 CellChangeTimes->{{3.641793877856873*^9, 3.64179397726263*^9}, {
   3.641794054490633*^9, 3.64179406129519*^9}, 3.641795137539469*^9, {
   3.641795313824278*^9, 3.641795325087796*^9}, {3.6417954926084557`*^9, 
   3.6417954932162657`*^9}, {3.641795538368258*^9, 3.64179558321632*^9}, {
   3.643620431828418*^9, 3.6436204487403393`*^9}, {3.64373466579817*^9, 
   3.6437346684537697`*^9}}],

Cell["\<\
In the real data we find often more than 2 \[Delta]h with a significant \
nonzero incline, so that we use a set of \[Delta]h that are eps - dependent\
\>", "Text",
 CellChangeTimes->{{3.643734648658368*^9, 3.643734713288368*^9}, {
  3.6437389326727247`*^9, 3.6437389555261803`*^9}}],

Cell["\<\
Slice is a vertical slice though the data (see \
DataWithFitsAndDerivativesTagged) , so we have
{{{x, y\[CloseCurlyQuote], dy\[CloseCurlyQuote]/dx,y}, True | \
False(fitted),True | False(extrapolated), prevStraight}, { ...}}
for the same x, Length[slice]=max_m
assignedMRange is one element of the output of AssignMRangeToStochasticRanges \
(which \[Delta]H-range is  eps-dependent etc)
Output: {x,state,middle,memory,excess_raw, RulesforQualityValues}
state+middle+memory is the excess entropy (from fits). The excess entropy \
from raw data is in excess_raw)
MiddleFitted tells whether the components of the middle sum are fitted or not\
\
\>", "Text",
 CellChangeTimes->{{3.6417925804872828`*^9, 3.6417926354225197`*^9}, {
  3.641792904221951*^9, 3.641792919021717*^9}, {3.641800761813232*^9, 
  3.641800799525756*^9}, {3.641805012889127*^9, 3.641805104792755*^9}, {
  3.6435177041686563`*^9, 3.6435177090965242`*^9}, {3.643519632858083*^9, 
  3.6435196758980913`*^9}, {3.643519710394329*^9, 3.643519810378948*^9}, {
  3.6436085587301283`*^9, 3.643608567913805*^9}, {3.64360873212224*^9, 
  3.643608822506011*^9}, {3.643608895034259*^9, 3.643608896825616*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "CalcEEDecompostion", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ConstThresh", "\[Rule]", "0.01"}], ",", " ", 
      RowBox[{"RemoveNegative", "\[Rule]", "False"}], ",", 
      RowBox[{"UseLargerRangePlateaus", "\[Rule]", "True"}]}], "}"}]}], ";"}],
   " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ConstThresh", "::", "usage"}], "=", 
   "\"\<Threshold under which a line is considered constant (straight) (for \
detection of plateaus on larger scales)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RemoveNegative", "::", "usage"}], "=", 
   "\"\<Remove negative values of \[Delta]h\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UseLargerRangePlateaus", "::", "usage"}], "=", 
  "\"\<Use values of deltaH's from larger range to add to memory complexity \
(and substract from middle)\>\""}]}], "Input",
 CellChangeTimes->{{3.600151592988587*^9, 3.6001516127608433`*^9}, {
   3.600151647498975*^9, 3.600151694324051*^9}, 3.613730866790719*^9, {
   3.6145029207815313`*^9, 3.614502988941991*^9}, {3.633841420975367*^9, 
   3.633841442408362*^9}, {3.633841492975*^9, 3.633841558890577*^9}, {
   3.633841654857434*^9, 3.633841655616234*^9}, {3.633841712504606*^9, 
   3.633841714496032*^9}, {3.639802684641719*^9, 3.639802757323276*^9}, {
   3.6398033148739357`*^9, 3.639803320934623*^9}, {3.6398034351841183`*^9, 
   3.639803438765931*^9}, {3.639820611739746*^9, 3.6398206587651443`*^9}, {
   3.639820965493477*^9, 3.6398209666093807`*^9}, {3.6418095212803392`*^9, 
   3.641809576672695*^9}, {3.6418342993660803`*^9, 3.641834344457008*^9}, {
   3.641834423241928*^9, 3.641834447453888*^9}, 3.641834511865428*^9, {
   3.641834594178516*^9, 3.6418346555588818`*^9}, {3.6421003788987303`*^9, 
   3.64210037992558*^9}, 3.643517792140511*^9, {3.643738512278509*^9, 
   3.6437385394902687`*^9}, {3.643738577085664*^9, 3.643738616192408*^9}, {
   3.643738704709858*^9, 3.6437387626194963`*^9}}],

Cell[BoxData["\<\"Use values of deltaH's from larger range to add to memory \
complexity (and substract from middle)\"\>"], "Output",
 CellChangeTimes->{3.643949360688505*^9, 3.6443195154096813`*^9, 
  3.644640627302997*^9, 3.644900514094983*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"CalcEEDecompostion", "[", 
   RowBox[{"slice_List", ",", "assignedMRange_", ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "CalcEEDecompostion", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "numNoFits", ",", "containsIndeterminates", ",", "numExtrapolation", ",",
       "numNegative", ",", "maxM", ",", "numMDropped", ",", "sliceClean", ",",
       "\[IndentingNewLine]", "lowerM", ",", "upperM", ",", "determinism", 
      ",", "isDeterministic", ",", "fromLargerRange"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"containsIndeterminates", "=", 
      RowBox[{
       RowBox[{"Count", "[", 
        RowBox[{"slice", ",", "Indeterminate", ",", 
         RowBox[{"{", "3", "}"}]}], "]"}], ">", "0"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"numNoFits", "=", 
      RowBox[{"Count", "[", 
       RowBox[{
        RowBox[{"slice", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "False"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"maxM", "=", 
      RowBox[{"Length", "[", "slice", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"numMDropped", "=", 
      RowBox[{"Count", "[", 
       RowBox[{"slice", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"_", ",", "Indeterminate", ",", "__"}], "}"}], ",", "__"}],
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"numNegative", "=", 
      RowBox[{"Count", "[", 
       RowBox[{"slice", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x_", ",", "y_", ",", "__"}], "}"}], ",", "__"}], "}"}], "/;", 
         RowBox[{"y", "<", 
          RowBox[{"-", "0.001"}]}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"numExtrapolation", "=", 
      RowBox[{"Count", "[", 
       RowBox[{
        RowBox[{"slice", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "3"}], "]"}], "]"}], ",", "True"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"sliceClean", "=", 
      RowBox[{"slice", "/.", 
       RowBox[{"{", 
        RowBox[{"Indeterminate", "\[Rule]", "0"}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sliceClean", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "RemoveNegative", "]"}], ",", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{
            RowBox[{"{", "x", "}"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "<", "0"}], ",", 
              RowBox[{"ReplacePart", "[", 
               RowBox[{"x", ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", "0"}]}], "]"}], 
              ",", "x"}], "]"}]}], "]"}], ",", "sliceClean"}], "]"}], ",", 
        "sliceClean"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "lowerM", ",", "upperM", ",", "determinism", ",", "isDeterministic"}], 
       "}"}], "=", "assignedMRange"}], ";", "\[IndentingNewLine]", 
     RowBox[{"fromLargerRange", " ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "UseLargerRangePlateaus", "]"}], ",", 
        RowBox[{"Total", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"m", " ", 
            RowBox[{"sliceClean", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"Max", "[", 
                RowBox[{"m", ",", "1"}], "]"}], ",", "4"}], "]"}], "]"}]}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", "lowerM", ",", "upperM"}], "}"}]}], "]"}], 
         "]"}], ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"sliceClean", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ExcessEntropySumPart", "[", 
         RowBox[{"sliceClean", ",", "1", ",", 
          RowBox[{"Max", "[", 
           RowBox[{"0", ",", 
            RowBox[{"lowerM", "-", "1"}]}], "]"}]}], "]"}], "+", " ", 
        "fromLargerRange"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ExcessEntropySumPart", "[", 
         RowBox[{"sliceClean", ",", "lowerM", ",", "upperM"}], "]"}], " ", 
        "-", " ", "fromLargerRange"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ExcessEntropySumPart", "[", 
        RowBox[{"sliceClean", ",", 
         RowBox[{"upperM", "+", "1"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ExcessEntropySumPart", "[", 
        RowBox[{
         RowBox[{"slice", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", "1", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}], ",", "1", ",", 
         RowBox[{"-", "1"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<lowerM\>\"", "\[Rule]", "lowerM"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<upperM\>\"", "\[Rule]", "upperM"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<stochasticity\>\"", "\[Rule]", 
          RowBox[{"1", "-", "determinism"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<isDeterministic\>\"", "->", "isDeterministic"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<numMDropped\>\"", "->", "numMDropped"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<numNoFits\>\"", "->", "numNoFits"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<indet\>\"", "->", "containsIndeterminates"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<extrapol\>\"", "\[Rule]", "numExtrapolation"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<negative\>\"", "\[Rule]", "numNegative"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<fromLargerRange\>\"", "->", "fromLargerRange"}]}], 
        "}"}]}], "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6417932452528343`*^9, 3.641793286624515*^9}, {
   3.641793327343989*^9, 3.641793356192934*^9}, {3.6417934971855516`*^9, 
   3.641793548817233*^9}, {3.64179358652984*^9, 3.6417936103851757`*^9}, {
   3.641795063618264*^9, 3.6417950666431513`*^9}, 3.641795635588352*^9, {
   3.6417989426969843`*^9, 3.641799348313437*^9}, {3.641799714810945*^9, 
   3.641799722473769*^9}, {3.6417997628905773`*^9, 3.6417998485234613`*^9}, {
   3.641799883341166*^9, 3.641799886221026*^9}, {3.64179991841084*^9, 
   3.641799953307632*^9}, {3.641800050301922*^9, 3.641800137662909*^9}, {
   3.641800255983213*^9, 3.641800262585011*^9}, {3.641800298091833*^9, 
   3.641800346990559*^9}, {3.6418006022024937`*^9, 3.641800620874131*^9}, {
   3.6418010863202553`*^9, 3.641801236367354*^9}, {3.641801316049076*^9, 
   3.641801328624548*^9}, {3.6418049224492073`*^9, 3.64180493821126*^9}, {
   3.641804970161097*^9, 3.6418049993450603`*^9}, {3.6418082228233967`*^9, 
   3.641808223060731*^9}, {3.6418086629052343`*^9, 3.641808690502903*^9}, {
   3.6418087230964537`*^9, 3.641808729844377*^9}, {3.64183372828128*^9, 
   3.641833768145718*^9}, {3.641833828980316*^9, 3.6418338445325947`*^9}, {
   3.6418339038730307`*^9, 3.641833921056115*^9}, {3.6418345209692793`*^9, 
   3.6418345382760983`*^9}, {3.641834571000596*^9, 3.641834579767748*^9}, {
   3.641834619736189*^9, 3.641834619885977*^9}, {3.6418346647571373`*^9, 
   3.641834682601749*^9}, {3.6418347669188547`*^9, 3.641834840670887*^9}, {
   3.641835276526618*^9, 3.6418352860696907`*^9}, {3.6418354669921083`*^9, 
   3.6418354747609673`*^9}, {3.641872570242916*^9, 3.641872675938665*^9}, {
   3.641872727632715*^9, 3.6418727965978813`*^9}, {3.641873511384571*^9, 
   3.641873514516905*^9}, {3.641874517268004*^9, 3.641874524904203*^9}, {
   3.641874898552433*^9, 3.641874910501627*^9}, {3.6418749566016293`*^9, 
   3.6418749573991003`*^9}, 3.6419719695068398`*^9, {3.641972029890225*^9, 
   3.64197208013969*^9}, {3.6419721801995087`*^9, 3.6419723093891582`*^9}, {
   3.6419723512092123`*^9, 3.641972351545107*^9}, {3.641972502555798*^9, 
   3.6419725047253933`*^9}, {3.6421388286719*^9, 3.642138829139694*^9}, {
   3.642138980769779*^9, 3.642138982184496*^9}, {3.642139071558523*^9, 
   3.642139214818205*^9}, {3.642139622516046*^9, 3.642139646829015*^9}, {
   3.642139753647786*^9, 3.642140119063282*^9}, {3.64214026344068*^9, 
   3.6421402849164*^9}, 3.642140369065794*^9, {3.642140425936076*^9, 
   3.6421404823028183`*^9}, {3.642140628947729*^9, 3.642140650465938*^9}, {
   3.642140680466999*^9, 3.6421406917482347`*^9}, {3.6421433542037487`*^9, 
   3.642143363475574*^9}, {3.642150084288961*^9, 3.642150106515263*^9}, {
   3.642235459989615*^9, 3.642235462112485*^9}, {3.642235529308587*^9, 
   3.642235552606271*^9}, {3.6422386069192657`*^9, 3.642238626222337*^9}, {
   3.642238659595488*^9, 3.642238683658515*^9}, {3.642239987404367*^9, 
   3.6422399882989893`*^9}, {3.643519826556644*^9, 3.6435198420405617`*^9}, {
   3.64352006242859*^9, 3.643520083511776*^9}, {3.643520235003069*^9, 
   3.643520251914194*^9}, {3.6435203473989487`*^9, 3.6435203650305843`*^9}, {
   3.643520451523069*^9, 3.643520453257103*^9}, {3.6435204990531387`*^9, 
   3.643520504371038*^9}, {3.643520579864089*^9, 3.64352058811518*^9}, {
   3.643520692160831*^9, 3.6435206976944323`*^9}, {3.643520733659966*^9, 
   3.643520734146099*^9}, {3.64352275576165*^9, 3.6435227974052753`*^9}, {
   3.643522845606996*^9, 3.6435228605434637`*^9}, 3.643560741451013*^9, {
   3.643560933413484*^9, 3.643560959213253*^9}, {3.6436084861005917`*^9, 
   3.643608486402089*^9}, {3.643608668087376*^9, 3.643608671431512*^9}, {
   3.643608713284514*^9, 3.643608725798841*^9}, {3.64360884686836*^9, 
   3.643608855788068*^9}, {3.643612591255047*^9, 3.643612613032405*^9}, {
   3.643614360013256*^9, 3.6436143967680187`*^9}, {3.64361443991422*^9, 
   3.6436144412913723`*^9}, {3.643614473114604*^9, 3.6436146315150223`*^9}, {
   3.6436146625086737`*^9, 3.643614704744835*^9}, {3.6436159824402514`*^9, 
   3.643615983640016*^9}, {3.6436163953897467`*^9, 3.643616424014647*^9}, {
   3.6436185946859713`*^9, 3.643618599228517*^9}, {3.6436187307993517`*^9, 
   3.643618740159477*^9}, {3.643618971903738*^9, 3.643618973583456*^9}, {
   3.6436190118885403`*^9, 3.643619012956979*^9}, {3.64361907734615*^9, 
   3.643619088589073*^9}, {3.643619267391522*^9, 3.643619272449798*^9}, 
   3.643620603679695*^9, {3.6437387705215263`*^9, 3.643738784769156*^9}}],

Cell["\<\
Replaces fitted intervals in data and adds the derivatives (either from fit \
of from data). Each point is tagged whether it came from an fitted interval \
and whether it was extrapolated. y\[CloseCurlyQuote] is the new y from \
fitting. The original y is also included.
{{{x,y\[CloseCurlyQuote],dy\[CloseCurlyQuote]/dx,y},fromInterval(True/False),\
extrapolated(True/False)},...}\
\>", "Text",
 CellChangeTimes->{{3.641788107041225*^9, 3.6417881205557117`*^9}, {
  3.641788161371933*^9, 3.641788262681872*^9}, {3.64213875098065*^9, 
  3.642138785429109*^9}, {3.643519272938396*^9, 3.643519312922247*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "DataWithFitsAndDerivativesTagged", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NumPointForDerivative", "\[Rule]", "5"}], ",", 
     RowBox[{"ReplaceEndByFits", "\[Rule]", "False"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReplaceEndByFits", "::", "usage"}], "=", 
   "\"\<use to extapolate data at the end by the fits, (everything after the \
last fit is replaced by it)\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NumPointForDerivative", "::", "usage"}], "=", 
   "\"\<number of points used to calculate numerical derivative at each point \
(default 5)\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DataWithFitsAndDerivativesTagged", "[", 
   RowBox[{"dat_", ",", "fits_", ",", 
    RowBox[{"opts", ":", 
     RowBox[{
     "OptionsPattern", "[", "DataWithFitsAndDerivativesTagged", "]"}]}]}], 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "intervals", ",", "tagged", ",", "derivatives", ",", "getIncline", ",", 
      "posLastFit", ",", "lastFitIdx"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"derivatives", "=", 
      RowBox[{"LogDerivativeSeries", "[", 
       RowBox[{"dat", ",", 
        RowBox[{"OptionValue", "[", "NumPointForDerivative", "]"}]}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"intervals", "=", 
      RowBox[{"fits", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"getIncline", "[", 
       RowBox[{"fit_", ",", "p_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"fit", "[", "p", "]"}], "-", 
         RowBox[{"fit", "[", 
          RowBox[{"p", "+", "0.0001"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Log", "[", "p", "]"}], "-", 
         RowBox[{"Log", "[", 
          RowBox[{"p", "+", "0.0001"}], "]"}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tagged", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", "idx", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"idx", ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"IntervalMemberQ", "[", 
                   RowBox[{"#", ",", "idx"}], "]"}], "&"}], ",", 
                 "intervals"}], "]"}], ",", "True"}], "]"}], "]"}]}], "}"}]}],
          "]"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", 
          RowBox[{"Length", "[", "dat", "]"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"posLastFit", "=", 
      RowBox[{"Length", "[", "tagged", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "ReplaceEndByFits", "]"}], ",", 
       RowBox[{"(*", " ", 
        RowBox[{
        "replace", " ", "everything", " ", "after", " ", "last", " ", "fit", 
         " ", "by", " ", "the", " ", "fit"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"posLastFit", "=", 
         RowBox[{
          RowBox[{"Length", "[", "tagged", "]"}], "-", 
          RowBox[{"First", "[", 
           RowBox[{"DefaultMissing", "[", 
            RowBox[{
             RowBox[{"FirstPosition", "[", 
              RowBox[{
               RowBox[{"Reverse", "[", "tagged", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"_", ",", 
                 RowBox[{"{", "_Integer", "}"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", "1", "}"}]}], "]"}], "]"}], "+", "1"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"lastFitIdx", "=", 
         RowBox[{"tagged", "[", 
          RowBox[{"[", 
           RowBox[{"posLastFit", ",", "2"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tagged", "=", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"tagged", ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"i", ",", "2"}], "}"}], "\[Rule]", "lastFitIdx"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"posLastFit", "+", "1"}], ",", 
               RowBox[{"Length", "[", "tagged", "]"}]}], "}"}]}], "]"}]}], 
          "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"idx", ",", "matches"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "matches", "]"}], "<", "1"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"dat", "[", 
                  RowBox[{"[", 
                   RowBox[{"idx", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"dat", "[", 
                  RowBox[{"[", 
                   RowBox[{"idx", ",", "2"}], "]"}], "]"}], ",", 
                 RowBox[{"derivatives", "[", 
                  RowBox[{"[", 
                   RowBox[{"idx", ",", "2"}], "]"}], "]"}], ",", 
                 RowBox[{"dat", "[", 
                  RowBox[{"[", 
                   RowBox[{"idx", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
               "False", ",", "False"}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"dat", "[", 
                  RowBox[{"[", 
                   RowBox[{"idx", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"Mean", "[", 
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"dat", "[", 
                    RowBox[{"[", 
                    RowBox[{"idx", ",", "1"}], "]"}], "]"}], "]"}], "&"}], 
                    ",", 
                    RowBox[{"fits", "[", 
                    RowBox[{"[", 
                    RowBox[{"matches", ",", "1"}], "]"}], "]"}]}], "]"}], 
                  "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Mean", "[", 
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"getIncline", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"dat", "[", 
                    RowBox[{"[", 
                    RowBox[{"idx", ",", "1"}], "]"}], "]"}]}], "]"}], "&"}], 
                    ",", 
                    RowBox[{"fits", "[", 
                    RowBox[{"[", 
                    RowBox[{"matches", ",", "1"}], "]"}], "]"}]}], "]"}], 
                  "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"dat", "[", 
                  RowBox[{"[", 
                   RowBox[{"idx", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"idx", "\[LessEqual]", "posLastFit"}], ",", 
               RowBox[{"idx", ">", "posLastFit"}]}], "}"}]}], "]"}]}], "]"}], 
         "@@", "#"}], "&"}], ",", "tagged"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.64171555983862*^9, 3.641715702849592*^9}, {
   3.641718674965398*^9, 3.641718773189692*^9}, {3.6417188265835667`*^9, 
   3.6417189532521544`*^9}, {3.641719214294388*^9, 3.6417192311221933`*^9}, {
   3.641720633400091*^9, 3.641720634395494*^9}, {3.6417206674155617`*^9, 
   3.6417207000524893`*^9}, {3.641721383759557*^9, 3.641721386065503*^9}, {
   3.641721425167968*^9, 3.6417215890200453`*^9}, {3.641722215424811*^9, 
   3.641722226127328*^9}, {3.641722339986643*^9, 3.641722378282083*^9}, {
   3.6417224696822367`*^9, 3.641722608394313*^9}, {3.6417226494537487`*^9, 
   3.64172270759823*^9}, {3.641722848641605*^9, 3.6417229641419277`*^9}, {
   3.641723088658515*^9, 3.6417232508820677`*^9}, {3.641723289604615*^9, 
   3.6417233009482527`*^9}, {3.6417233543261642`*^9, 3.6417233566584*^9}, {
   3.6417234588890457`*^9, 3.64172357748061*^9}, 3.641723666362659*^9, {
   3.641723906073925*^9, 3.641723917736641*^9}, {3.641724375740808*^9, 
   3.641724530604889*^9}, {3.641724655550747*^9, 3.6417246739478493`*^9}, {
   3.641724739646018*^9, 3.641724746447727*^9}, {3.641724780521731*^9, 
   3.641724795499926*^9}, {3.641724895946355*^9, 3.64172489713826*^9}, {
   3.641724948449329*^9, 3.641724961694523*^9}, {3.641750772327332*^9, 
   3.641750776692397*^9}, {3.641751129678632*^9, 3.641751130029421*^9}, {
   3.641751186335586*^9, 3.64175127917862*^9}, {3.641751386107753*^9, 
   3.641751443590999*^9}, {3.641760114971977*^9, 3.641760121081214*^9}, {
   3.641788268865445*^9, 3.641788278385397*^9}, {3.641788321634996*^9, 
   3.64178834725067*^9}, {3.641800488061097*^9, 3.641800490563608*^9}, {
   3.642103345606696*^9, 3.642103431356488*^9}, {3.642103503550233*^9, 
   3.642103673155629*^9}, {3.642104039381221*^9, 3.642104214828404*^9}, {
   3.642104248054521*^9, 3.642104270183187*^9}, {3.6421043592310266`*^9, 
   3.642104548863122*^9}, {3.6421386627575073`*^9, 3.642138730655757*^9}, {
   3.6435188311414213`*^9, 3.643518913285862*^9}, {3.6435189517400007`*^9, 
   3.643518962107288*^9}, {3.643519077247939*^9, 3.643519113399932*^9}, {
   3.64351917192622*^9, 3.643519265529292*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "DecomposeAndPlotExcessEntropy", "]"}], "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"DeltaHFlatThreshold", "\[Rule]", "0.05"}], ",", 
       RowBox[{"DeterminismThreshold", "\[Rule]", "0.5"}], ",", 
       RowBox[{"YPlotRangeMax", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"XTicks", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"FactorForQualityScales", "\[Rule]", "Automatic"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"DimLabelsEvery", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"MaxDimScale", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"ShowRawExcessEntropy", "\[Rule]", "True"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ShowMDropped", "\[Rule]", "True"}], ",", 
       RowBox[{"ShowSceptical", "\[Rule]", "False"}], ",", 
       RowBox[{"ShowQualStochastic", "\[Rule]", "True"}], ",", 
       RowBox[{"ShowNumNoFits", "\[Rule]", "True"}], ",", 
       RowBox[{"ShowNegative", "\[Rule]", "False"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ShowLegend", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
      "}"}], "~", "Join", "~", 
     RowBox[{"Options", "[", "CalcEEDecompostion", "]"}], "~", "Join", "~", 
     RowBox[{"Options", "[", "ListLogLinearPlot", "]"}], "~", "Join", "~", 
     RowBox[{"Options", "[", "DataWithFitsAndDerivativesTagged", "]"}]}]}], 
   ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DeltaHFlatThreshold", "::", "usage"}], "=", 
   "\"\<derivative under which deltaH is considered flat. (0.05)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DeterminismThreshold", "::", "usage"}], "=", 
   "\"\<if the sum of eps-dependend \[Delta]H is larger than this threshold \
it is considered to be deterministic (0.5)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ShowRawExcessEntropy", "::", "usage"}], "=", 
   "\"\<Show also the raw excess entropy without the fits\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"YPlotRangeMax", "::", "usage"}], "=", 
   "\"\<maximal Y-PlotRange used also for rescaling right axis\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"XTicks", "::", "usage"}], "=", 
   "\"\<Explicit ticks specs for x axis\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FactorForQualityScales", "::", "usage"}], "=", 
   "\"\<size of quality scales w.r.t. the dim scale (Automatic)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxDimScale", "::", "usage"}], "=", 
   "\"\<scale of dimension axis (for m's)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DimLabelsEvery", "::", "usage"}], "=", 
   "\"\<labeled ticks every so often in dimension scale\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ShowMDropped", "::", "usage"}], "=", 
   "\"\<Show number m dropped\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ShowSceptical", "::", "usage"}], "=", 
   "\"\<whether sum contains mssing data (also in MDropped)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ShowQualStochastic", "::", "usage"}], "=", 
   "\"\<Show quality of determinstic/ amount of stochasticity\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ShowNegative", "::", "usage"}], "=", 
   "\"\<Show indicate whether there are negatives\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ShowNumNoFits", "::", "usage"}], "=", 
   "\"\<Show number of m's where we have no fit\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ShowLegend", "::", "usage"}], "=", 
    "\"\<show a legend or not\>\""}], ";"}], " "}]}], "Input",
 CellChangeTimes->{{3.600151592988587*^9, 3.6001516127608433`*^9}, {
   3.600151647498975*^9, 3.600151694324051*^9}, 3.613730866790719*^9, {
   3.6145029207815313`*^9, 3.614502988941991*^9}, {3.633841420975367*^9, 
   3.633841442408362*^9}, {3.633841492975*^9, 3.633841558890577*^9}, {
   3.633841654857434*^9, 3.633841655616234*^9}, {3.633841712504606*^9, 
   3.633841714496032*^9}, {3.639802684641719*^9, 3.639802757323276*^9}, {
   3.6398033148739357`*^9, 3.639803320934623*^9}, {3.6398034351841183`*^9, 
   3.639803438765931*^9}, {3.639820611739746*^9, 3.6398206587651443`*^9}, {
   3.639820965493477*^9, 3.6398209666093807`*^9}, {3.6418095212803392`*^9, 
   3.641809576672695*^9}, {3.6418353153396797`*^9, 3.641835326027123*^9}, {
   3.64209894863566*^9, 3.642099005786462*^9}, {3.6421048206726637`*^9, 
   3.642104833269513*^9}, {3.6422363191542587`*^9, 3.6422364845709343`*^9}, {
   3.642237488655292*^9, 3.642237520888194*^9}, {3.642237735856544*^9, 
   3.642237837455618*^9}, {3.64223831366742*^9, 3.642238314033843*^9}, 
   3.642238512778636*^9, {3.642238944180004*^9, 3.642239000052058*^9}, 
   3.642239032049802*^9, {3.642239467940528*^9, 3.6422394995921593`*^9}, {
   3.6422397479040823`*^9, 3.642239800771962*^9}, {3.643520943310151*^9, 
   3.643520989279985*^9}, {3.643522192678685*^9, 3.643522195503759*^9}, {
   3.6436074389425917`*^9, 3.643607493519533*^9}, {3.643607529616824*^9, 
   3.64360754064058*^9}, {3.64360771169597*^9, 3.643607716784438*^9}, {
   3.643607758096018*^9, 3.6436079118713503`*^9}, {3.643615254167609*^9, 
   3.64361525525576*^9}, {3.643619754910346*^9, 3.643619759083973*^9}, {
   3.643619860193104*^9, 3.6436198994047327`*^9}, {3.6436199395632467`*^9, 
   3.643619990873192*^9}, {3.643620073229097*^9, 3.643620089720828*^9}, {
   3.6436201779982967`*^9, 3.643620201803976*^9}, 3.643620528326044*^9, {
   3.643734813734796*^9, 3.6437348239809647`*^9}, {3.643734885613908*^9, 
   3.6437348883415318`*^9}, {3.6437349324704037`*^9, 
   3.6437349395741796`*^9}, {3.643736517864073*^9, 3.643736540555544*^9}, {
   3.6437365782338123`*^9, 3.6437365785240498`*^9}, {3.6439611007098017`*^9, 
   3.643961127048992*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DecomposeAndPlotExcessEntropy", "[", 
   RowBox[{"dat_", ",", "fits_", ",", 
    RowBox[{"opts", ":", 
     RowBox[{
     "OptionsPattern", "[", "DecomposeAndPlotExcessEntropy", "]"}]}]}], "]"}],
   ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "datandfits", ",", "merged", ",", "straights", ",", "maxM", ",", 
      "allderivs", ",", "mRangeDet", ",", "mergedFitsDerivStraights", ",", 
      "decomp", ",", "\[IndentingNewLine]", "cState", ",", "cMiddle", ",", 
      "cMem", ",", "cSM", ",", "cAll", ",", "ee", ",", "opts4plot", ",", " ", 
      "plt", ",", "\[IndentingNewLine]", "optsForDatReplacement", ",", "aux", 
      ",", "lowerM", ",", "upperM", ",", "stochasticity", ",", "maxDimScale", 
      ",", "factorQual", ",", "numNoFits", ",", "sceptical", ",", 
      "numMDropped", ",", "detOrStoc", ",", "negative", ",", "extrapol", ",", 
      "maxQual", ",", "datarange", ",", "plotrange", ",", "rescale", ",", 
      "rescaleQual", ",", "mLabelsEvery", ",", "axeslabel", ",", "rightaxis", 
      ",", "rightoffset", ",", "rescaleQualDat", ",", "QualityQuants", ",", 
      "colors", ",", "plotstyle", ",", "legend"}], "\[IndentingNewLine]", 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"datandfits", "=", 
      RowBox[{"Zip", "[", 
       RowBox[{"dat", ",", "fits"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"optsForDatReplacement", "=", 
      RowBox[{"FilterRules", "[", 
       RowBox[{
        RowBox[{"{", "opts", "}"}], ",", 
        RowBox[{"Options", "[", "DataWithFitsAndDerivativesTagged", "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"merged", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"DataWithFitsAndDerivativesTagged", " ", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", "optsForDatReplacement"}], 
          "]"}], "&"}], ",", "datandfits"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"straights", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"GetPlateauOnLargerScaleWithoutDip", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"OptionValue", "[", "DeltaHFlatThreshold", "]"}]}], "]"}], 
         "&"}], ",", "datandfits"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"allderivs", " ", "=", " ", 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Transpose", "[", "merged", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "All", ",", "1", ",", "3"}], "]"}], "]"}]}]}], 
     ";", " ", 
     RowBox[{"(*", 
      RowBox[{"all", " ", "derivative", " ", 
       RowBox[{"(", 
        RowBox[{"negated", ",", " ", 
         RowBox[{
          RowBox[{
          "because", " ", "we", " ", "are", " ", "intersted", " ", "in", " ", 
           "D", " ", "of", " ", "const"}], " ", "-", " ", 
          RowBox[{"D", " ", "log", 
           RowBox[{"(", "eps", ")"}]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"range", " ", "of", " ", 
         RowBox[{"m", "'"}], "s", " ", "for", " ", "eps"}], "-", 
        RowBox[{
        "dependent", " ", "part", " ", "and", " ", "stochasticity"}]}], ",", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FormBox[
            SubsuperscriptBox["m", "lower", "*"],
            TraditionalForm], ",", 
           FormBox[
            SubsuperscriptBox["m", "upper", "*"],
            TraditionalForm], ",", "stochasticity", ",", 
           RowBox[{"isDeterministic", " ", 
            RowBox[{"(", 
             RowBox[{"True", "/", "False"}], ")"}]}]}], "}"}], ",", "..."}], 
        "}"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"mRangeDet", "=", 
      RowBox[{"AssignMRangeToStochasticRanges", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"GetEpsDepMAndDeterminism", "[", 
            RowBox[{"#", ",", 
             RowBox[{"OptionValue", "[", "DeltaHFlatThreshold", "]"}]}], 
            "]"}], "&"}], ",", "allderivs"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"OptionValue", "[", "DeterminismThreshold", "]"}], ",", 
        "10"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "curves", "}"}], " ", "with", " ", "curve"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "y", ",", 
             RowBox[{"dy", "/", "dx"}]}], "}"}], ",", 
           RowBox[{"True", "|", "False"}], ",", "prevStraight"}], "}"}], ",", 
         
         RowBox[{"{", "...", "}"}]}], "}"}]}], "*)"}], "\[IndentingNewLine]", 
     
     RowBox[{"mergedFitsDerivStraights", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"m", ",", "s"}], "}"}], ",", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Append", "[", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], ",", 
              RowBox[{"Zip", "[", 
               RowBox[{"m", ",", "s"}], "]"}]}], "]"}]}], "]"}], "@@", "#"}], 
         "&"}], ",", 
        RowBox[{"Zip", "[", 
         RowBox[{"merged", ",", "straights"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"decomp", "=", 
      RowBox[{"SortBy", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"CalcEEDecompostion", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"FilterRules", "[", 
              RowBox[{
               RowBox[{"{", "opts", "}"}], ",", 
               RowBox[{"Options", "[", "CalcEEDecompostion", "]"}]}], "]"}]}],
             "]"}], "&"}], ",", 
          RowBox[{"Zip", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", "mergedFitsDerivStraights", "]"}], ",", 
            "mRangeDet"}], "]"}]}], "]"}], ",", "First"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cState", "=", 
      RowBox[{"decomp", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cMiddle", " ", "=", " ", 
      RowBox[{"decomp", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cMem", "=", 
      RowBox[{"decomp", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cSM", " ", "=", 
      RowBox[{"CombineTimeSeries", "[", 
       RowBox[{"Plus", ",", "cMem", ",", "cState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"mem", " ", "+", " ", "state"}], "*)"}], "\[IndentingNewLine]", 
     
     RowBox[{"cAll", "=", 
      RowBox[{"CombineTimeSeries", "[", 
       RowBox[{"Plus", ",", "cSM", ",", "cMiddle"}], "]"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"plus", " ", "middle", " ", "term"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"ee", "=", 
      RowBox[{"decomp", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "5"}], "}"}]}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"raw", " ", "excess", " ", "entropy"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"maxM", "=", 
      RowBox[{"Length", "[", "dat", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"aux", "=", 
      RowBox[{"decomp", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"upperM", "=", 
      RowBox[{"MapTimeSeries", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\"\<upperM\>\"", "/.", "#"}], "&"}], ",", "aux"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"lowerM", "=", 
      RowBox[{"MapTimeSeries", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\"\<lowerM\>\"", "/.", "#"}], "&"}], ",", "aux"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"numNoFits", "=", 
      RowBox[{"MapTimeSeries", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\"\<numNoFits\>\"", "/.", "#"}], ")"}], "/", "maxM"}], 
         "&"}], ",", "aux"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sceptical", "=", 
      RowBox[{"MapTimeSeries", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"\"\<indet\>\"", "/.", "#"}], ",", "1", ",", "0"}], "]"}], 
         "&"}], ",", "aux"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"numMDropped", "=", 
      RowBox[{"MapTimeSeries", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\"\<numMDropped\>\"", "/.", "#"}], ")"}], "/", "maxM"}], 
         "&"}], ",", "aux"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"extrapol", "=", 
      RowBox[{"MapTimeSeries", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\"\<extrapol\>\"", "/.", "#"}], ")"}], "/", "maxM"}], 
         "&"}], ",", "aux"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"stochasticity", "=", 
      RowBox[{"MapTimeSeries", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\"\<stochasticity\>\"", "/.", "#"}], "&"}], ",", "aux"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"detOrStoc", "=", 
      RowBox[{"MapTimeSeries", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"\"\<isDeterministic\>\"", "/.", "#"}], ",", 
           RowBox[{"Missing", "[", "]"}], ",", "1"}], "]"}], "&"}], ",", 
        "aux"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"negative", "=", 
        RowBox[{"MapTimeSeries", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\"\<negative\>\"", "/.", "#"}], ")"}], ">", "0"}], 
             ",", "1", ",", "0"}], "]"}], "&"}], ",", "aux"}], "]"}]}], ";"}],
       "*)"}], "\[IndentingNewLine]", 
     RowBox[{"negative", "=", 
      RowBox[{"MapTimeSeries", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\"\<negative\>\"", "/.", "#"}], ")"}], "/", "maxM"}], 
         "&"}], ",", "aux"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"QualityQuants", "=", 
      RowBox[{"Cases", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "ReplaceEndByFits", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"extrapol", ",", "\"\<% extrap.\>\"", ",", 
              RowBox[{"Directive", "[", "Gray", "]"}], ",", "ShowMDropped"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"numMDropped", ",", "\"\<% dropped\>\"", ",", 
              RowBox[{"Directive", "[", "Gray", "]"}], ",", "ShowMDropped"}], 
             "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"sceptical", ",", "\"\<sceptical\>\"", ",", 
            RowBox[{"Directive", "[", "Gray", "]"}], ",", "ShowSceptical"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"numNoFits", ",", "\"\<% no fits\>\"", ",", 
            RowBox[{"Directive", "[", "Cyan", "]"}], ",", "ShowNumNoFits"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"negative", ",", "\"\<% negative\>\"", ",", 
            RowBox[{"Directive", "[", 
             RowBox[{"Lighter", "[", "Red", "]"}], "]"}], ",", 
            "ShowNegative"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"stochasticity", ",", "\"\<stochastic\>\"", ",", 
            RowBox[{"Directive", "[", "Green", "]"}], ",", 
            "ShowQualStochastic"}], "}"}]}], "\[IndentingNewLine]", "}"}], 
        ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"_", ",", "_", ",", "_", ",", "v_"}], "}"}], "/;", " ", 
         RowBox[{"OptionValue", "[", "v", "]"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"maxQual", "=", 
      RowBox[{"Length", "[", "QualityQuants", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"maxDimScale", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "MaxDimScale", "]"}], "===", 
         "Automatic"}], ",", 
        RowBox[{"Max", "[", 
         RowBox[{"upperM", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"OptionValue", "[", "MaxDimScale", "]"}]}], "]"}]}], " ", ";",
      "\[IndentingNewLine]", 
     RowBox[{"mLabelsEvery", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "DimLabelsEvery", "]"}], "===", 
         "Automatic"}], ",", 
        RowBox[{"Ceiling", "[", 
         RowBox[{"maxDimScale", "/", "2"}], "]"}], ",", 
        RowBox[{"OptionValue", "[", "DimLabelsEvery", "]"}]}], "]"}]}], " ", 
     ";", "\[IndentingNewLine]", 
     RowBox[{"factorQual", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "FactorForQualityScales", "]"}], "===", 
         "Automatic"}], ",", 
        RowBox[{"Ceiling", "[", 
         RowBox[{"maxDimScale", "/", "5"}], "]"}], ",", 
        RowBox[{"OptionValue", "[", "FactorForQualityScales", "]"}]}], 
       "]"}]}], " ", ";", "\[IndentingNewLine]", 
     RowBox[{"datarange", "=", 
      RowBox[{"maxDimScale", " ", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"factorQual", "*", "2"}], ")"}], " ", "maxQual"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"plotrange", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "YPlotRangeMax", "]"}], "===", 
         "Automatic"}], ",", 
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{"cAll", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "*", "1.2"}], ",", 
        RowBox[{"OptionValue", "[", "YPlotRangeMax", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rightoffset", "=", 
      RowBox[{"plotrange", "/", "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rescale", "[", "x_", "]"}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", "x", ")"}], " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"plotrange", "-", "rightoffset"}], ")"}], "/", 
         "datarange"}]}], "+", "rightoffset"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"rescaleQual", "[", 
       RowBox[{"x_", ",", "i_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"factorQual", " ", "x"}], "+", "maxDimScale", "+", 
          RowBox[{"factorQual", ".5"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"factorQual", "*", "2"}], ")"}], "i"}], "-", "1"}], ")"}],
         " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"plotrange", "-", "rightoffset"}], ")"}], "/", 
         "datarange"}]}], "+", "rightoffset"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"rescaleQualDat", "[", 
       RowBox[{"data_", ",", "i_"}], "]"}], ":=", 
      RowBox[{"MapTimeSeries", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"rescaleQual", "[", 
          RowBox[{"#", ",", "i"}], "]"}], "&"}], ",", "data"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rightaxis", "=", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"rescale", "[", "v", "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{"v", ",", "mLabelsEvery"}], "]"}], "\[Equal]", "0"}], 
             ",", 
             RowBox[{"ToString", "[", "v", "]"}], ",", "\"\<\>\""}], "]"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"v", ",", "0", ",", "maxDimScale", ",", "1"}], "}"}]}], 
        "]"}], "~", "Join", "~", "\[IndentingNewLine]", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"MapIndexed", "[", 
          RowBox[{
           RowBox[{"Function", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", "i"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"rescaleQual", "[", 
                  RowBox[{"0", ",", 
                   RowBox[{"First", "[", "i", "]"}]}], "]"}], ",", 
                 "\"\<\>\""}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"rescaleQual", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{"First", "[", "i", "]"}]}], "]"}], ",", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}]}], "]"}], 
           ",", "QualityQuants"}], "]"}], ",", "1"}], "]"}]}]}], ";", 
     RowBox[{"opts4plot", " ", "=", " ", 
      RowBox[{"FilterRules", "[", 
       RowBox[{
        RowBox[{"{", "opts", "}"}], ",", 
        RowBox[{"Options", "[", "ListLogLinearPlot", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"colors", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ColorData", "[", 
           RowBox[{"1", ",", "2"}], "]"}], ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"1", ",", "1"}], "]"}], ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"1", ",", "3"}], "]"}], ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"1", ",", "4"}], "]"}]}], "}"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"colors", "=", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Darker", "[", "Red", "]"}], ",", "Orange", ",", 
        RowBox[{"ColorData", "[", 
         RowBox[{"1", ",", "4"}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"plotstyle", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"colors", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"Directive", "[", 
             RowBox[{"Dashed", ",", 
              RowBox[{"colors", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"colors", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "ShowRawExcessEntropy", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"Directive", "[", 
              RowBox[{"Darker", "[", 
               RowBox[{"ColorData", "[", 
                RowBox[{"1", ",", "3"}], "]"}], "]"}], "]"}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"colors", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", "Dotted"}], "]"}], ",", 
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"colors", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", "DotDashed"}], "]"}]}], 
           "}"}], ",", 
          RowBox[{"QualityQuants", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "3"}], "]"}], "]"}], ",", 
          RowBox[{"{", "None", "}"}]}], "}"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"plt", "=", 
      RowBox[{"ListLogLinearPlot", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"cMem", ",", "cSM", ",", "cAll"}], "}"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"OptionValue", "[", "ShowRawExcessEntropy", "]"}], ",", 
              
              RowBox[{"{", "ee", "}"}], ",", 
              RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"MapTimeSeries", "[", 
               RowBox[{"rescale", ",", "lowerM"}], "]"}], ",", 
              RowBox[{"MapTimeSeries", "[", 
               RowBox[{"rescale", ",", "upperM"}], "]"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"MapIndexed", "[", 
             RowBox[{
              RowBox[{"Function", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x", ",", "i"}], "}"}], ",", 
                RowBox[{"MapTimeSeries", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"rescaleQual", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"First", "[", "i", "]"}]}], "]"}], "&"}], ",", 
                  RowBox[{"First", "[", "x", "]"}]}], "]"}]}], "]"}], ",", 
              "QualityQuants"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"MapTimeSeries", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"rescaleQual", "[", 
                 RowBox[{"#", ",", "maxQual"}], "]"}], "&"}], ",", 
               "detOrStoc"}], "]"}], "}"}]}], "\[IndentingNewLine]", "}"}], 
          ",", "\[IndentingNewLine]", "1"}], "]"}], ",", 
        "\[IndentingNewLine]", "opts4plot", ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", 
             RowBox[{"rescaleQual", "[", 
              RowBox[{"1", ",", "maxQual"}], "]"}]}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"None", ",", "EEm"}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"Prolog", "->", 
         RowBox[{"Inset", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\[Epsilon]", ",", "12", ",", 
             RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], 
            "]"}], ",", 
           RowBox[{"ImageScaled", "[", 
            RowBox[{"{", 
             RowBox[{".85", ",", ".05"}], "}"}], "]"}]}], "]"}]}], ",", 
        RowBox[{"PlotRangeClipping", "\[Rule]", "False"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotStyle", "\[Rule]", "plotstyle"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Filling", "\[Rule]", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"1", "\[Rule]", "0"}], ",", 
               RowBox[{"2", "\[Rule]", 
                RowBox[{"{", "1", "}"}]}], ",", 
               RowBox[{"3", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", "2", "}"}], ",", 
                  RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", ".3", "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.9", ",", "0"}], "]"}]}], "]"}]}], 
                 "}"}]}], ",", 
               RowBox[{"6", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", "5", "}"}], ",", 
                  RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", ".1", "]"}], ",", 
                    RowBox[{"colors", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "}"}]}]}], 
              "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"OptionValue", "[", "ShowRawExcessEntropy", "]"}], 
                   ",", "6", ",", "5"}], "]"}], "+", "i"}], "\[Rule]", 
                RowBox[{"rescaleQual", "[", 
                 RowBox[{"0", ",", "i"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "maxQual"}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"OptionValue", "[", "ShowRawExcessEntropy", "]"}], 
                  ",", "6", ",", "5"}], "]"}], "+", "maxQual", "+", "1"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"Directive", "[", 
                  RowBox[{
                   RowBox[{"Opacity", "[", ".05", "]"}], ",", "Black"}], 
                  "]"}]}], "}"}]}], "}"}]}], "}"}], ",", 
           "\[IndentingNewLine]", "1"}], "]"}]}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "True"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Automatic", ",", "rightaxis"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"OptionValue", "[", "XTicks", "]"}], ",", "None"}], 
            "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Automatic", ",", 
             RowBox[{"Directive", "[", "6", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Axes", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"False", ",", "False"}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"GridLines", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"None", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"rescale", "[", "0", "]"}], "}"}], "~", "Join", "~", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"rescaleQual", "[", 
               RowBox[{"1", ",", "x"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "1", ",", "maxQual"}], "}"}]}], "]"}]}]}], 
          "}"}]}], ",", 
        RowBox[{"GridLinesStyle", "->", 
         RowBox[{"Directive", "[", 
          RowBox[{"LightGray", ",", "Dashed"}], "]"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "[", "ShowLegend", "]"}], ",", 
           RowBox[{"LineLegend", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "\"\<memory\>\"", ",", "\"\<core\\n(state+mem)\>\"", ",", 
                  "\"\<excess Ent.\\ndecomp\>\""}], "}"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"OptionValue", "[", "ShowRawExcessEntropy", "]"}], 
                  ",", 
                  RowBox[{"{", "\"\<excess Ent.\\n raw\>\"", "}"}], ",", 
                  RowBox[{"{", "}"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(m\), \(l\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(m\), \(u\)]\)\>\""}], "}"}]}], 
               "}"}], ",", "1"}], "]"}], "]"}], ",", "None"}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"legend", "=", 
      RowBox[{"LineLegend", "[", 
       RowBox[{"plotstyle", ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<memory \>\"", ",", "\"\<core (state+mem) \>\"", ",", 
              "\"\<excess Ent. decomp \>\""}], "}"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"OptionValue", "[", "ShowRawExcessEntropy", "]"}], ",", 
              
              RowBox[{"{", "\"\<excess Ent. raw \>\"", "}"}], ",", 
              RowBox[{"{", "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<\!\(\*SubscriptBox[\(m\), \(l\)]\) \>\"", ",", 
              "\"\<\!\(\*SubscriptBox[\(m\), \(u\)]\) \>\""}], "}"}]}], "}"}],
           ",", "1"}], "]"}], ",", 
        RowBox[{"LegendLayout", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Row\>\"", ",", "1"}], "}"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"plt", ",", "decomp", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<legend\>\"", "->", "legend"}], ",", 
         RowBox[{"\"\<straights\>\"", "\[Rule]", "straights"}]}], "}"}]}], 
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.641804537424901*^9, 3.6418048096019297`*^9}, {
   3.641805828067968*^9, 3.641805828983861*^9}, {3.6418096107604027`*^9, 
   3.6418096632264967`*^9}, {3.6418096938866043`*^9, 3.641809730718231*^9}, {
   3.641809826573904*^9, 3.641809849744392*^9}, {3.641809962703775*^9, 
   3.641810020158298*^9}, {3.6418353686779118`*^9, 3.6418353942521152`*^9}, {
   3.642098168629767*^9, 3.642098187509755*^9}, {3.6420982595122213`*^9, 
   3.642098281951644*^9}, {3.642098365093072*^9, 3.642098377409047*^9}, {
   3.642098508637697*^9, 3.64209875315932*^9}, {3.642098790052388*^9, 
   3.64209886458072*^9}, {3.6420989177001753`*^9, 3.6420989395299263`*^9}, {
   3.642099010275359*^9, 3.6420990580870256`*^9}, {3.6420991650375223`*^9, 
   3.642099432322154*^9}, 3.642099465821974*^9, {3.642099498383778*^9, 
   3.642099587716761*^9}, {3.642099621586741*^9, 3.642099623123728*^9}, {
   3.64210069479911*^9, 3.642100695436541*^9}, 3.642101461745273*^9, {
   3.642104706428794*^9, 3.642104718179582*^9}, {3.642104750748974*^9, 
   3.642104812178165*^9}, {3.642140170625924*^9, 3.6421402091103687`*^9}, {
   3.6421424898995934`*^9, 3.6421424932925367`*^9}, {3.642142580022236*^9, 
   3.6421426123649807`*^9}, {3.6421426469443283`*^9, 3.642142862901162*^9}, {
   3.642142934098569*^9, 3.64214295054031*^9}, {3.642235463726872*^9, 
   3.642235521577681*^9}, {3.642235576408291*^9, 3.6422355811232767`*^9}, {
   3.6422356605662117`*^9, 3.6422356724924498`*^9}, {3.642235752127462*^9, 
   3.642235829333061*^9}, {3.6422358913006363`*^9, 3.642235912526778*^9}, {
   3.6422359577666187`*^9, 3.642236006165621*^9}, {3.6422360592827997`*^9, 
   3.64223612553223*^9}, {3.642236179864141*^9, 3.642236221657051*^9}, {
   3.642236261443214*^9, 3.64223630884377*^9}, {3.6422365038962307`*^9, 
   3.642236547637869*^9}, {3.642236904602932*^9, 3.642236915734172*^9}, {
   3.64223696973125*^9, 3.642236983768949*^9}, {3.6422370244016027`*^9, 
   3.6422370245227737`*^9}, {3.642237056693287*^9, 3.642237081060543*^9}, {
   3.642237137209202*^9, 3.642237147199161*^9}, {3.64223719747816*^9, 
   3.642237200167467*^9}, {3.642237340905033*^9, 3.6422374842773952`*^9}, {
   3.642237548686908*^9, 3.642237559575239*^9}, {3.6422375968111887`*^9, 
   3.642237635560244*^9}, {3.642237677424363*^9, 3.642237727555923*^9}, {
   3.642238216348961*^9, 3.642238222184492*^9}, {3.642238318338674*^9, 
   3.642238381278216*^9}, 3.6422385025749397`*^9, {3.642238565316908*^9, 
   3.642238576293939*^9}, {3.642238748664136*^9, 3.642238749338388*^9}, {
   3.642238804276161*^9, 3.642238804796678*^9}, {3.642238881530477*^9, 
   3.6422388850523367`*^9}, {3.6422389242497663`*^9, 
   3.6422389378148727`*^9}, {3.642239282322946*^9, 3.64223933018847*^9}, {
   3.6422393827563057`*^9, 3.642239458573722*^9}, {3.6422395087367573`*^9, 
   3.642239517996484*^9}, {3.642239648781445*^9, 3.642239741175167*^9}, {
   3.6422398084653053`*^9, 3.642239813381434*^9}, {3.642239926905891*^9, 
   3.64223993907618*^9}, {3.642240073708029*^9, 3.642240088146236*^9}, {
   3.642241279487584*^9, 3.64224129825247*^9}, {3.642241386043797*^9, 
   3.642241404047472*^9}, {3.642241468166255*^9, 3.6422414723673973`*^9}, {
   3.64344951381213*^9, 3.643449518434539*^9}, {3.643449602884076*^9, 
   3.6434496675688066`*^9}, {3.643449724534884*^9, 3.643449785491946*^9}, {
   3.6434498257006407`*^9, 3.643449855635831*^9}, {3.643519539800333*^9, 
   3.643519553815301*^9}, {3.6435198634591827`*^9, 3.643519984079906*^9}, {
   3.643521038142825*^9, 3.6435213140204144`*^9}, {3.643521364353075*^9, 
   3.6435213886217213`*^9}, {3.643521461773629*^9, 3.643521598335292*^9}, {
   3.6435216328124247`*^9, 3.643521636018098*^9}, {3.6435216666024237`*^9, 
   3.643521715256831*^9}, {3.643521770535314*^9, 3.643521783539315*^9}, {
   3.643521935307667*^9, 3.643521950722002*^9}, {3.6435220092919197`*^9, 
   3.643522027800099*^9}, {3.64352211332718*^9, 3.643522133803506*^9}, {
   3.643522432032927*^9, 3.643522436413925*^9}, {3.64352248969471*^9, 
   3.643522501010034*^9}, {3.643522556745716*^9, 3.643522561796049*^9}, {
   3.643522879674238*^9, 3.643522880033531*^9}, {3.6435229136939507`*^9, 
   3.643522983213087*^9}, {3.643559277823378*^9, 3.643559290218721*^9}, {
   3.64355968284093*^9, 3.643559759342985*^9}, {3.643559797606061*^9, 
   3.64355979930752*^9}, {3.643560569784967*^9, 3.6435605732412*^9}, {
   3.643563817536229*^9, 3.643563818025917*^9}, {3.6436072780603456`*^9, 
   3.643607433162259*^9}, {3.643607550636477*^9, 3.643607707462919*^9}, {
   3.643607926677453*^9, 3.643608013035905*^9}, {3.64360813041054*^9, 
   3.6436081619982567`*^9}, {3.643608631012671*^9, 3.643608659279048*^9}, {
   3.643614753917639*^9, 3.643614978500689*^9}, {3.643615274241996*^9, 
   3.643615278959391*^9}, {3.643615891687235*^9, 3.64361589968508*^9}, 
   3.643615942212655*^9, {3.6436159938763437`*^9, 3.643616036866742*^9}, {
   3.6436161217485313`*^9, 3.6436161223142443`*^9}, {3.643616166418833*^9, 
   3.643616166686203*^9}, {3.643616324555676*^9, 3.643616371476437*^9}, {
   3.643616846917515*^9, 3.643616860854042*^9}, {3.643616904540751*^9, 
   3.643616906293227*^9}, {3.643616992779147*^9, 3.643617088123958*^9}, {
   3.643617118843627*^9, 3.643617230711825*^9}, {3.643617260796726*^9, 
   3.6436174111671953`*^9}, {3.643617483017829*^9, 3.643617514923785*^9}, {
   3.643617545164736*^9, 3.643617655499607*^9}, {3.643617688845211*^9, 
   3.6436177210010967`*^9}, {3.643617806445941*^9, 3.6436178443933153`*^9}, {
   3.643617879167285*^9, 3.64361790550023*^9}, {3.643619538426956*^9, 
   3.643619539466633*^9}, {3.643619609612916*^9, 3.643619745649629*^9}, {
   3.64361995304422*^9, 3.643619953771203*^9}, {3.643620045709899*^9, 
   3.643620049181382*^9}, {3.643620118719195*^9, 3.6436201195140657`*^9}, {
   3.643620211452931*^9, 3.643620328124777*^9}, {3.643620526550495*^9, 
   3.643620527207079*^9}, {3.6436206215718937`*^9, 3.643620622821273*^9}, {
   3.6436207370717154`*^9, 3.643620743728293*^9}, {3.643620878295356*^9, 
   3.643620897747283*^9}, {3.643694814013179*^9, 3.64369481761217*^9}, {
   3.64369489923971*^9, 3.643694901386438*^9}, {3.643696646992219*^9, 
   3.643696658682734*^9}, {3.643696728107945*^9, 3.6436967318476553`*^9}, {
   3.643696776840414*^9, 3.6436967783001537`*^9}, {3.6437347851089907`*^9, 
   3.6437348068627033`*^9}, {3.6437351345814457`*^9, 3.643735146308506*^9}, {
   3.643735280981873*^9, 3.643735292392315*^9}, {3.6437353817190247`*^9, 
   3.643735476059094*^9}, {3.643735676641183*^9, 3.643735803861967*^9}, {
   3.643736103137825*^9, 3.643736130214476*^9}, {3.643736355238714*^9, 
   3.6437363714723377`*^9}, {3.643736464356853*^9, 3.6437365035813293`*^9}, {
   3.6437377763356953`*^9, 3.643737829579204*^9}, {3.643737977244697*^9, 
   3.643737982559691*^9}, {3.6437384971774883`*^9, 3.6437385014908543`*^9}, {
   3.643826914219474*^9, 3.643826915679147*^9}, {3.643949282800068*^9, 
   3.643949283165814*^9}, {3.643949324640648*^9, 3.643949435049358*^9}, {
   3.643949529879629*^9, 3.643949532565631*^9}, {3.6439496063282127`*^9, 
   3.643949710458866*^9}, {3.6439497486964684`*^9, 3.643949773736599*^9}, {
   3.643954592070327*^9, 3.643954615383868*^9}, {3.643961141264131*^9, 
   3.643961149631535*^9}, {3.643961304832025*^9, 3.643961311861167*^9}, {
   3.643967661879876*^9, 3.64396766731083*^9}, {3.643967717220145*^9, 
   3.6439678426207027`*^9}, {3.6439680438950577`*^9, 3.643968054408682*^9}, {
   3.6439681026457767`*^9, 3.643968108214946*^9}, {3.6439681388679733`*^9, 
   3.643968390371846*^9}, {3.643969271811376*^9, 3.643969281157598*^9}, {
   3.643969333381297*^9, 3.6439693337167587`*^9}, {3.643970310871955*^9, 
   3.643970319183112*^9}, {3.644140770514018*^9, 3.644140833200965*^9}, {
   3.644140908185976*^9, 3.644140910907432*^9}, 3.644140971457526*^9, {
   3.64457617532229*^9, 3.644576314529416*^9}, {3.644576420011198*^9, 
   3.644576425987726*^9}, {3.644576477395768*^9, 3.644576505601254*^9}, {
   3.644576547008713*^9, 3.644576654614249*^9}, {3.644576726988597*^9, 
   3.644576728151884*^9}, {3.6446390800748997`*^9, 3.6446391138500767`*^9}, {
   3.644639144083619*^9, 3.644639165320911*^9}, {3.644639260617901*^9, 
   3.644639304399831*^9}, {3.644641808559277*^9, 3.644641810953772*^9}}],

Cell["\<\
Fits lines (in log scale) onto all \[Delta]h. Returns {\[Delta]h, fits, plot \
of \[Delta]h with fits}\
\>", "Text",
 CellChangeTimes->{{3.643517950009366*^9, 3.64351805247215*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "FitDeltaHs", "]"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MinFitLength", "\[Rule]", "10"}], ",", 
      RowBox[{"FitQualityQuantile", "\[Rule]", "0.25"}], ",", 
      RowBox[{"ShowFitLines", "\[Rule]", 
       RowBox[{"{", "}"}]}]}], "}"}], "~", "Join", "~", 
    RowBox[{"Options", "[", "PlotFitInLog", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MinFitLength", "::", "usage"}], "=", 
   "\"\<minimal length if fits in number of data points\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FitQualityQuantile", "::", "usage"}], "=", 
   "\"\<quantile under which are considered good (w.r.t to all possible fits)\
\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ShowFitLines", "::", "usage"}], "=", 
    "\"\<selector for fitline to plot\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FitDeltaHs", "[", 
   RowBox[{"plots_", ",", "tiseandat_", ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "FitDeltaHs", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "dat", ",", "plt", ",", "fits", ",", "ratio", ",", "opts4labels"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dat", " ", "=", " ", 
      RowBox[{"\"\<deltaH\>\"", "/.", "tiseandat"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"plt", "=", 
      RowBox[{"plots", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"fits", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FindAllFits", "[", 
          RowBox[{"#", ",", "LogLinFitFun", ",", 
           RowBox[{"OptionValue", "[", "MinFitLength", "]"}], ",", 
           RowBox[{"OptionValue", "[", "FitQualityQuantile", "]"}]}], "]"}], 
         "&"}], ",", "dat"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "ShowLabel", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ratio", "=", 
         RowBox[{"GetPlotCoordinateRatio", "[", "plt", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"opts4labels", " ", "=", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"LabelAngle", "\[Rule]", "Automatic"}], ",", 
            RowBox[{"BasePlotRatio", "\[Rule]", "ratio"}]}], "}"}], " ", "~", 
          "Join", "~", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", "opts", "}"}], ",", 
            RowBox[{"Options", "[", "PlotFitInLog", "]"}]}], "]"}]}]}], ";"}],
        "\[IndentingNewLine]", ",", "\t", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"opts4labels", " ", "=", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"{", "opts", "}"}], ",", 
           RowBox[{"Options", "[", "PlotFitInLog", "]"}]}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"dat", ",", "fits", ",", 
       RowBox[{"Show", "[", 
        RowBox[{"plt", ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"PlotFitInLog", "[", "#", "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"fits", ",", "1"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"OptionValue", "[", "ShowFitLines", "]"}], "]"}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", "None"}], ",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"PlotFitInLog", "[", 
               RowBox[{"#", ",", "opts4labels"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{"fits", ",", "1"}], "]"}]}], "]"}]}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6418076328113823`*^9, 3.64180764710326*^9}, {
   3.6418077262915583`*^9, 3.641807726572394*^9}, {3.6418077679511642`*^9, 
   3.6418077846278152`*^9}, {3.641807824564719*^9, 3.641807824835194*^9}, {
   3.641808880337891*^9, 3.641808882703631*^9}, {3.641808916885038*^9, 
   3.641808919074297*^9}, {3.642135212681245*^9, 3.6421352381997347`*^9}, {
   3.642135533515017*^9, 3.642135832872044*^9}, {3.642135899450242*^9, 
   3.6421359007943363`*^9}, 3.642137840761793*^9, 3.64344196679602*^9, {
   3.643442611405745*^9, 3.643442631837723*^9}, {3.6434427084745398`*^9, 
   3.64344289934028*^9}, {3.643442990494516*^9, 3.6434429955020857`*^9}, {
   3.643443091693384*^9, 3.643443091996221*^9}, 3.6434493497957153`*^9, 
   3.6438267967784853`*^9, {3.644319504684648*^9, 3.644319507986424*^9}, {
   3.644319551038044*^9, 3.6443196080637827`*^9}, {3.644319666946866*^9, 
   3.644319667038246*^9}, {3.644653296869776*^9, 3.644653296971277*^9}}],

Cell["\<\

For each point it gives the minimum of the value of the previous flat line \
fit and the actual data.\
\>", "Text",
 CellChangeTimes->{{3.64178837146488*^9, 3.641788477673925*^9}, {
  3.641788519786178*^9, 3.641788589802443*^9}, {3.6438268084413548`*^9, 
  3.64382689606923*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetPlateauOnLargerScaleWithoutDip", "[", 
   RowBox[{"dat_", ",", "fits_", ",", " ", 
    RowBox[{"flatThresh_:", "0.01"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"getFit", ",", "getIncline"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"getIncline", "[", 
       RowBox[{"fit_", ",", "p_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"fit", "[", "p", "]"}], "-", 
         RowBox[{"fit", "[", 
          RowBox[{"p", "+", "0.0001"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Log", "[", "p", "]"}], "-", 
         RowBox[{"Log", "[", 
          RowBox[{"p", "+", "0.0001"}], "]"}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"getFit", "[", "x_", "]"}], ":=", 
      RowBox[{"First", "[", 
       RowBox[{"FirstPosition", "[", 
        RowBox[{
         RowBox[{"fits", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"int_List", "/;", 
          RowBox[{"IntervalMemberQ", "[", 
           RowBox[{
            RowBox[{"Interval", "[", "int", "]"}], ",", "x"}], "]"}]}], ",", 
         RowBox[{"{", "0", "}"}], ",", "2"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"FoldList", "[", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"last", ",", "x"}], "}"}], ",", 
           RowBox[{"Block", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"match", "=", 
               RowBox[{"getFit", "[", 
                RowBox[{"x", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"match", "\[Equal]", "0"}], " ", "||", " ", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"getIncline", "[", 
                   RowBox[{
                    RowBox[{"fits", "[", 
                    RowBox[{"[", 
                    RowBox[{"match", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], 
                 "\[GreaterEqual]", "flatThresh"}]}], ",", 
               RowBox[{"Max", "[", 
                RowBox[{"0", ",", 
                 RowBox[{"Min", "[", 
                  RowBox[{"last", ",", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "0"}], 
                "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Max", "[", 
                RowBox[{"0", ",", 
                 RowBox[{
                  RowBox[{"fits", "[", 
                   RowBox[{"[", 
                    RowBox[{"match", ",", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"x", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], "]"}]}], 
            "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",",
          "0", ",", 
         RowBox[{"dat", "/.", 
          RowBox[{"Indeterminate", "\[Rule]", "0"}]}]}], "]"}], ",", "1"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.643824582645013*^9, 3.643824826708445*^9}, {
   3.643824888029696*^9, 3.643825001921534*^9}, {3.643825034809417*^9, 
   3.643825166649548*^9}, {3.643825575722473*^9, 3.643825635078574*^9}, {
   3.6438256705962763`*^9, 3.643825712522503*^9}, {3.643825826828898*^9, 
   3.643825968906831*^9}, 3.643826046766534*^9, {3.643826636968134*^9, 
   3.643826713758399*^9}, {3.6439072575604963`*^9, 3.6439072664623413`*^9}, {
   3.643907300719466*^9, 3.643907302574911*^9}, 3.643908645074183*^9, {
   3.643908681993738*^9, 3.64390868263489*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExcessEntropySumPart", "[", 
   RowBox[{"deltaHslice_", ",", "start_Integer", ",", 
    RowBox[{"end_Integer:", "-", "1"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ls", ",", "minm", ",", "maxm"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"minm", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"start", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"maxm", "=", 
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{"Length", "[", "deltaHslice", "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"end", "<", " ", "0"}], ",", 
          RowBox[{"Length", "[", "deltaHslice", "]"}], ",", "end"}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"k", " ", 
        RowBox[{"(", 
         RowBox[{"deltaHslice", "[", 
          RowBox[{"[", 
           RowBox[{"k", ",", "1", ",", "2"}], "]"}], "]"}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "minm", ",", "maxm"}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.5733844112310534`*^9, 3.573384461965479*^9}, {
   3.573384492534924*^9, 3.573384726480596*^9}, {3.573384849825287*^9, 
   3.5733848561924963`*^9}, {3.573385049913855*^9, 3.57338505478609*^9}, {
   3.573385097210349*^9, 3.573385098537594*^9}, {3.573385262425005*^9, 
   3.5733852656784353`*^9}, {3.573385334753024*^9, 3.573385439504909*^9}, {
   3.637985020749268*^9, 3.637985023599536*^9}, {3.637985296447712*^9, 
   3.637985326065372*^9}, {3.638264887309119*^9, 3.638264954362384*^9}, 
   3.638265186956272*^9, {3.638265228427663*^9, 3.6382652316759233`*^9}, {
   3.638265368716299*^9, 3.638265416347497*^9}, {3.638265514426811*^9, 
   3.638265515770275*^9}, {3.6393834712219543`*^9, 3.639383475463656*^9}, {
   3.6393837430303802`*^9, 3.6393837613162613`*^9}, {3.639383797686212*^9, 
   3.639383885733914*^9}, {3.639384368984765*^9, 3.6393843902140102`*^9}, {
   3.641799488521303*^9, 3.641799505945606*^9}, {3.641799539337212*^9, 
   3.641799568312446*^9}, {3.641799598905096*^9, 3.641799639304854*^9}, {
   3.64179968698493*^9, 3.6417996989050694`*^9}, {3.641799741914012*^9, 
   3.6417997518535433`*^9}, {3.641799995177785*^9, 3.6418000184252*^9}, {
   3.641800215338105*^9, 3.6418002307295647`*^9}, {3.64180056596458*^9, 
   3.641800575741338*^9}, {3.641801487432968*^9, 3.6418014916911993`*^9}, {
   3.643618112166753*^9, 3.6436181400077677`*^9}, {3.6436181756069727`*^9, 
   3.643618176583681*^9}, {3.643618285111084*^9, 3.6436183531749973`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CombineTimeSeries", "[", 
    RowBox[{"fun_", ",", "s1_List", ",", "s2_List"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", "=", 
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"vs1", ",", "vs2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"vs1", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"fun", "[", 
            RowBox[{
             RowBox[{"vs1", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"vs2", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}]}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"vs1", ",", "vs2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"vs1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"fun", "[", 
              RowBox[{
               RowBox[{"vs1", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"vs2", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}]}], "]"}], "@@",
          "#"}], "&"}], ",", 
       RowBox[{"Zip", "[", 
        RowBox[{"s1", ",", "s2"}], "]"}]}], "]"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.641801854145545*^9, 3.641802024394328*^9}, {
  3.641802081227343*^9, 3.641802102617782*^9}, {3.641802188715775*^9, 
  3.641802205898315*^9}, {3.64180227184923*^9, 3.641802332924528*^9}, {
  3.6418023834703293`*^9, 3.6418024703153973`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CombineTimeSeries", "[", 
  RowBox[{"Plus", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641802029464566*^9, 3.641802065529543*^9}, {
  3.641802287642391*^9, 3.641802287770237*^9}, {3.641802340763291*^9, 
  3.6418023473861437`*^9}, {3.6418024781710653`*^9, 3.641802483305237*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.643949360849762*^9, 3.6443195155877333`*^9, 
  3.6446406274594927`*^9, 3.644900514640459*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "FirstPosition", "]"}], "\[Equal]", "0"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FirstPosition", "[", 
      RowBox[{"expr_", ",", "pattern_", ",", 
       RowBox[{"default_:", 
        RowBox[{"Missing", "[", "\"\<NotFound\>\"", "]"}]}], ",", 
       RowBox[{"levelspec_:", "Infinity"}]}], "]"}], ":=", " ", 
     RowBox[{"Replace", "[", 
      RowBox[{
       RowBox[{"Position", "[", 
        RowBox[{"expr", ",", "pattern", ",", "levelspec"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "}"}], "\[RuleDelayed]", " ", "default"}], ",", " ", 
         RowBox[{"l_", "\[RuleDelayed]", " ", 
          RowBox[{"First", "[", "l", "]"}]}]}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.644900945500126*^9, 3.644900967204658*^9}, {
  3.644901182649016*^9, 3.644901185547834*^9}, {3.644902319305396*^9, 
  3.644902369212167*^9}}],

Cell["\<\
finds the maximum derivative and returns the indices of the lowest and \
largest derivative around it that it at least flatThreshold together with the \
sum of the derivative within this block. Input: derivatives of deltaH curves \
for m=1...
Output: {lower_m,upper_m, sum from lower_m to upper_m}\
\>", "Text",
 CellChangeTimes->{{3.643565463455418*^9, 3.6435655244289503`*^9}, {
  3.6435655669344673`*^9, 3.643565662609942*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetEpsDepMAndDeterminism", "[", 
   RowBox[{"derivatives_", ",", "flatThreshold_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "maxd", ",", "posmaxd", ",", "below", ",", "above", ",", "lowerM", ",", 
      "upperM", ",", "sum"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"maxd", ",", "posmaxd"}], "}"}], "=", 
      RowBox[{"MaxWithPosition", "[", "derivatives", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"below", "=", 
      RowBox[{"Reverse", "[", 
       RowBox[{"derivatives", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"posmaxd", "-", "1"}]}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"above", "=", 
      RowBox[{"derivatives", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"posmaxd", "+", "1"}], ";;"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lowerM", "=", 
      RowBox[{"posmaxd", "-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"First", "[", 
          RowBox[{"FirstPosition", "[", 
           RowBox[{"below", ",", 
            RowBox[{"x_", "/;", 
             RowBox[{"x", "<", "flatThreshold"}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Length", "[", "below", "]"}], "+", "1"}], "}"}]}], 
           "]"}], "]"}], "-", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"upperM", "=", 
      RowBox[{"posmaxd", "+", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"First", "[", 
          RowBox[{"FirstPosition", "[", 
           RowBox[{"above", ",", 
            RowBox[{"x_", "/;", 
             RowBox[{"x", "<", "flatThreshold"}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Length", "[", "above", "]"}], "+", "1"}], "}"}]}], 
           "]"}], "]"}], "-", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"lowerM", ",", "upperM", ",", 
       RowBox[{"Total", "[", 
        RowBox[{"derivatives", "[", 
         RowBox[{"[", 
          RowBox[{"lowerM", ";;", "upperM"}], "]"}], "]"}], "]"}]}], 
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.64356391080651*^9, 3.643563911760665*^9}, {
  3.64356400712177*^9, 3.6435640510224457`*^9}, {3.6435640874629517`*^9, 
  3.643564146722623*^9}, {3.6435641910108137`*^9, 3.6435641981975327`*^9}, {
  3.643565117012175*^9, 3.643565259615159*^9}, {3.643565299466784*^9, 
  3.643565303132125*^9}, {3.643616280727272*^9, 3.643616290823309*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"GetEpsDepMAndDeterminism", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", "0.1"}], 
     "]"}], "\[Equal]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2", ",", "1"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GetEpsDepMAndDeterminism", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", "0.1"}], 
     "]"}], "\[Equal]", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "1"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GetEpsDepMAndDeterminism", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0.1", ",", "0.2", ",", "0"}], "}"}], ",", "0.1"}], 
     "]"}], "\[Equal]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "0.3"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GetEpsDepMAndDeterminism", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.4", ",", "0.6", ",", "0", ",", "0"}], "}"}], ",", "0.1"}], 
     "]"}], "\[Equal]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "1"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GetEpsDepMAndDeterminism", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.2", ",", "0.4", ",", "0.2", ",", "0.2"}], "}"}], ",", 
      "0.1"}], "]"}], "\[Equal]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4", ",", "1"}], "}"}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.643565248925812*^9, 3.643565268067017*^9}, {
  3.643565310920067*^9, 3.643565402687711*^9}, {3.6435655402217207`*^9, 
  3.643565547767058*^9}, {3.6436163192450247`*^9, 3.643616320868678*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.643949360897922*^9, 3.644319515632922*^9, 3.6446406275007343`*^9, 
   3.644900515345275*^9, 3.644901093439533*^9, {3.644901145030739*^9, 
   3.644901174448126*^9}}]
}, Open  ]],

Cell[TextData[{
 "For stochastic scaling range we use ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "lower"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "upper"], TraditionalForm]]],
 " from previous deterministic range\nInput: {{",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "lower"], TraditionalForm]]],
 ",",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "upper"], TraditionalForm]]],
 ",stochasticity},...} for all eps (from large eps to small eps!), see ",
 "GetEpsDepMAndDeterminism",
 "\nOutput {{",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["m", "lower", "*"], TraditionalForm]]],
 ",",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["m", "upper", "*"], TraditionalForm]]],
 ",stochasticity, isDeterministic (True/False)},...} where the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["m", "*"], TraditionalForm]]],
 " are the replaced ones if the stochasticity > detThreshold.\nTo determine \
correct m\[CloseCurlyQuote]s from previous range a averaging is performed."
}], "Text",
 CellChangeTimes->{{3.643567043454073*^9, 3.6435670782206087`*^9}, {
   3.643569279627589*^9, 3.643569492391398*^9}, {3.643607064472411*^9, 
   3.643607089544435*^9}, {3.643607171352776*^9, 3.643607172536783*^9}, 
   3.643616322350013*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MovingAverageHalf", "[", 
   RowBox[{"list_", ",", "r_"}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{"Mean", ",", 
    RowBox[{"Partition", "[", 
     RowBox[{"list", ",", "r", ",", "1", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", "0"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AssignMRangeToStochasticRanges", "[", 
   RowBox[{
   "mRangeAndStochasticity_", ",", "detThreshold_", ",", "averaging_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "mrangeWithAvgs", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"mrangeWithAvgs", "=", 
      RowBox[{"Zip", "[", 
       RowBox[{"mRangeAndStochasticity", ",", 
        RowBox[{"Zip", "[", 
         RowBox[{
          RowBox[{"MovingAverageHalf", "[", 
           RowBox[{
            RowBox[{"mRangeAndStochasticity", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "averaging"}], 
           "]"}], ",", 
          RowBox[{"MovingAverageHalf", "[", 
           RowBox[{
            RowBox[{"mRangeAndStochasticity", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "averaging"}], 
           "]"}]}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Drop", "[", 
       RowBox[{
        RowBox[{"FoldList", "[", 
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"acc", ",", "ms"}], "}"}], ",", 
            RowBox[{"Block", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"lastrange", "=", 
                RowBox[{"acc", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"ms", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "3"}], "]"}], "]"}], "<", 
                 "detThreshold"}], ",", 
                RowBox[{"{", 
                 RowBox[{"lastrange", ",", 
                  RowBox[{"lastrange", "~", "Join", "~", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ms", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "3"}], "]"}], "]"}], ",", "False"}], 
                    "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Round", "[", 
                   RowBox[{"ms", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
                  RowBox[{"Append", "[", 
                   RowBox[{
                    RowBox[{"ms", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "True"}], "]"}]}], 
                 "}"}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "}"}], ",", "mrangeWithAvgs"}], "]"}], 
        "\[IndentingNewLine]", ",", "1"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6435690644643593`*^9, 3.6435692479832077`*^9}, {
  3.643606935153537*^9, 3.643606966288776*^9}, {3.6436070040008993`*^9, 
  3.64360705508794*^9}, {3.6436071449081593`*^9, 3.6436071477126293`*^9}, {
  3.643618026331724*^9, 3.643618027322804*^9}}],

Cell["\<\
Returns the mean and stddev of the state and core complexity in the given \
interval\
\>", "Text",
 CellChangeTimes->{{3.641810848596054*^9, 3.641810880734768*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetAvgDecomp", "[", 
   RowBox[{"eeDecomp_List", ",", "int_Interval"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "relevant", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"relevant", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"eeDecomp", ",", 
        RowBox[{
         RowBox[{"IntervalMemberQ", "[", 
          RowBox[{"int", ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<state\>\"", "->", 
        RowBox[{"PlusMinus", "[", 
         RowBox[{
          RowBox[{"Mean", "[", 
           RowBox[{"relevant", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], " ", ",", 
          RowBox[{"StandardDeviation", "[", 
           RowBox[{"relevant", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<memory\>\"", "->", 
        RowBox[{"PlusMinus", "[", 
         RowBox[{
          RowBox[{"Mean", "[", 
           RowBox[{"relevant", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "4"}], "]"}], "]"}], "]"}], ",", " ", 
          RowBox[{"StandardDeviation", "[", 
           RowBox[{"relevant", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "4"}], "]"}], "]"}], "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<state+memory\>\"", "->", 
        RowBox[{"PlusMinus", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Mean", "[", 
            RowBox[{"relevant", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "+", 
           RowBox[{"Mean", "[", 
            RowBox[{"relevant", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "4"}], "]"}], "]"}], "]"}]}], ",", " ", 
          RowBox[{
           RowBox[{"StandardDeviation", "[", 
            RowBox[{"relevant", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "+", " ", 
           RowBox[{"StandardDeviation", "[", 
            RowBox[{"relevant", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "4"}], "]"}], "]"}], "]"}]}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.641810137778985*^9, 3.641810289170309*^9}, {
  3.6418103471235323`*^9, 3.641810348321781*^9}, {3.641810403218751*^9, 
  3.641810405266644*^9}, {3.64181045861241*^9, 3.641810485151009*^9}, {
  3.6418105326954613`*^9, 3.641810592805369*^9}, {3.641810640279662*^9, 
  3.641810707560335*^9}, {3.641810769415263*^9, 3.64181079074126*^9}, {
  3.643443493867537*^9, 3.643443524650985*^9}, {3.6434540779411097`*^9, 
  3.643454098037221*^9}, {3.6439583704103394`*^9, 3.643958422088324*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "AvgDecompInPlot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"LabelSize", "\[Rule]", "8"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AvgDecompInPlot", "[", 
   RowBox[{"decomp_", ",", "int_Interval", ",", 
    RowBox[{"posstate_:", "-", "1"}], ",", 
    RowBox[{"posmem_:", "-", "1"}], ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "AvgDecompInPlot", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "mi", ",", "ma", ",", "lpos", ",", "state", ",", "memory", ",", 
      "statemem", ",", "max"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"mi", "=", 
      RowBox[{"Min", "[", "int", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ma", "=", 
      RowBox[{"Max", "[", "int", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"lpos", "=", 
      RowBox[{"Exp", "[", 
       RowBox[{"Mean", "[", 
        RowBox[{"Log", "[", 
         RowBox[{"int", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"state", "=", 
      RowBox[{"\"\<state\>\"", "/.", "decomp"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"memory", "=", 
      RowBox[{"\"\<memory\>\"", "/.", "decomp"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"statemem", "=", 
      RowBox[{"\"\<state+memory\>\"", "/.", "decomp"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"max", "=", 
      RowBox[{
       RowBox[{"statemem", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "+", 
       RowBox[{"3", 
        RowBox[{"(", 
         RowBox[{"statemem", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ")"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", "Gray", "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Log", "[", "mi", "]"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Log", "[", "mi", "]"}], ",", "max"}], "}"}]}], "}"}], 
          "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Log", "[", "ma", "]"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Log", "[", "ma", "]"}], ",", "max"}], "}"}]}], "}"}], 
          "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"memory", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ">", "0"}], ",", 
         RowBox[{"Inset", "[", 
          RowBox[{
           RowBox[{"StyleLabel", "[", 
            RowBox[{
             RowBox[{"RoundNumbersInExp", "[", 
              RowBox[{"memory", ",", "0.01"}], "]"}], ",", 
             RowBox[{"OptionValue", "[", "LabelSize", "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Log", "[", "lpos", "]"}], ",", 
             RowBox[{
              RowBox[{"memory", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", 
              RowBox[{"2", "posmem", "*", 
               RowBox[{"memory", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "posmem"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"state", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ">", "0"}], ",", 
         RowBox[{"Inset", "[", 
          RowBox[{
           RowBox[{"StyleLabel", "[", 
            RowBox[{
             RowBox[{"RoundNumbersInExp", "[", 
              RowBox[{"state", ",", "0.01"}], "]"}], ",", 
             RowBox[{"OptionValue", "[", "LabelSize", "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Log", "[", "lpos", "]"}], ",", 
             RowBox[{
              RowBox[{"statemem", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", 
              RowBox[{"2", "posstate", "*", 
               RowBox[{"statemem", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "posstate"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.638097556623993*^9, 3.6380975566253967`*^9}, {
   3.638097850360237*^9, 3.638097870455596*^9}, {3.638097994473783*^9, 
   3.6380979947281*^9}, {3.638526092467918*^9, 3.638526132237494*^9}, {
   3.638526169290592*^9, 3.638526214224642*^9}, {3.6385264823389597`*^9, 
   3.6385267502594757`*^9}, {3.638526813853657*^9, 3.638526818999481*^9}, {
   3.638526940774303*^9, 3.6385269414040203`*^9}, {3.639123107365768*^9, 
   3.639123124684552*^9}, {3.639123197030868*^9, 3.6391232163351316`*^9}, {
   3.639129138490178*^9, 3.6391292407370777`*^9}, {3.639129360230282*^9, 
   3.63912939146268*^9}, {3.6391294230045633`*^9, 3.6391294720812693`*^9}, {
   3.639129762884623*^9, 3.6391298238976383`*^9}, {3.639129913044981*^9, 
   3.6391299652885036`*^9}, {3.6391300239523497`*^9, 3.639130042700203*^9}, {
   3.639130090864634*^9, 3.639130091436028*^9}, 3.6412850352203627`*^9, {
   3.6412859515914516`*^9, 3.641286077078661*^9}, {3.641286132755844*^9, 
   3.64128622481632*^9}, {3.641701984710848*^9, 3.641701984828238*^9}, {
   3.64170223378487*^9, 3.641702262891478*^9}, {3.6417024897533617`*^9, 
   3.641702505978114*^9}, {3.6417026270211163`*^9, 3.641702844811523*^9}, {
   3.641702967126533*^9, 3.641703044697496*^9}, {3.641703076747383*^9, 
   3.641703149419199*^9}, {3.641703437756168*^9, 3.6417034597396317`*^9}, {
   3.64170354799682*^9, 3.641703583369762*^9}, {3.6417036503331013`*^9, 
   3.641703664972677*^9}, {3.641703846441474*^9, 3.641703860717041*^9}, {
   3.6417039723382883`*^9, 3.6417039801358147`*^9}, {3.6417077240471487`*^9, 
   3.641707737246592*^9}, {3.64170777169912*^9, 3.641707774495104*^9}, {
   3.641713321433055*^9, 3.641713405171002*^9}, {3.641788300997414*^9, 
   3.641788308951454*^9}, {3.641800464844913*^9, 3.641800468210351*^9}, {
   3.643442540116365*^9, 3.643442574292264*^9}, {3.643442689192952*^9, 
   3.64344269593899*^9}, {3.6434438851111507`*^9, 3.643443919093876*^9}, {
   3.6434439548962193`*^9, 3.643444020962645*^9}, {3.643444060555911*^9, 
   3.643444121391344*^9}, {3.643444151904171*^9, 3.643444186843061*^9}, {
   3.643444259242701*^9, 3.643444264767232*^9}, {3.643444389148801*^9, 
   3.643444397343346*^9}, {3.643444485039213*^9, 3.643444562926713*^9}, {
   3.64344459998543*^9, 3.643444844449136*^9}, {3.6434450963841677`*^9, 
   3.643445099392248*^9}, {3.6434451649455023`*^9, 3.643445363407357*^9}, {
   3.643445403808487*^9, 3.643445403949191*^9}, {3.6434539226513147`*^9, 
   3.6434539235225973`*^9}, {3.64345399697569*^9, 3.643453997617391*^9}, {
   3.643454499671034*^9, 3.6434547632789993`*^9}, {3.6434548068685293`*^9, 
   3.643454896354639*^9}, {3.643455070630254*^9, 3.643455121744931*^9}, {
   3.643710426309984*^9, 3.643710459279027*^9}, {3.643948544836763*^9, 
   3.643948611940452*^9}, {3.6439584435345917`*^9, 3.643958447270632*^9}, {
   3.6439684628563232`*^9, 3.643968595416933*^9}, {3.64396951759437*^9, 
   3.643969519369933*^9}, {3.644641879161495*^9, 3.644641880202256*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Usecases", "Section",
 CellChangeTimes->{{3.641704638610721*^9, 3.6417046479992723`*^9}, {
  3.641707913520183*^9, 3.641707914703483*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plots", "=", 
   RowBox[{"TiseanPlotAllMultiDim", "[", 
    RowBox[{
    "\"\<tisean/coupledtentmap/col-uni_a2p20p2_s0-05_5M_d1.d2\>\"", ",", "1", 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"All", ",", "All"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.639120948194791*^9, 3.6391209571502028`*^9}, {
  3.639121010046055*^9, 3.639121024739338*^9}, {3.639121595651004*^9, 
  3.639121599124242*^9}, {3.639121638064994*^9, 3.6391216620935717`*^9}, {
  3.639122519519792*^9, 3.639122543195875*^9}, {3.640433057042848*^9, 
  3.640433061506385*^9}, {3.641790506481656*^9, 3.6417905071191483`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dat", " ", "=", " ", 
   RowBox[{"\"\<deltaH\>\"", "/.", "TiseanData"}]}], ";", 
  RowBox[{"plt", "=", 
   RowBox[{"plots", "[", 
    RowBox[{"[", "7", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fits", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"FindAllFits", "[", 
       RowBox[{"#", ",", "LogLinFitFun", ",", "10", ",", "0.25"}], "]"}], 
      "&"}], ",", "dat"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ratio", "=", 
    RowBox[{"GetPlotCoordinateRatio", "[", "plt", "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"Map", "[", 
  RowBox[{"Length", ",", "fits"}], "]"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"plt", ",", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"PlotFitInLog", "[", "#", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"fits", ",", "1"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"CalcImgSize", "[", "1.3", "]"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "None"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"PlotFitInLog", "[", 
         RowBox[{"#", ",", 
          RowBox[{"LabelAngle", "\[Rule]", "Automatic"}], ",", 
          RowBox[{"BasePlotRatio", "\[Rule]", "ratio"}]}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"fits", ",", "1"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "9"}], "]"}], "]"}]}], "]"}]}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.641790942925226*^9, 3.641790966396495*^9}, {
  3.6418074026412163`*^9, 3.641807417324898*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DecomposeAndPlotExcessEntropy", "[", 
   RowBox[{"dat", ",", "fits", ",", "0.02"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.641805550628673*^9, 3.641805552698555*^9}, {
  3.6418055841556263`*^9, 3.641805624507524*^9}, {3.641805756637849*^9, 
  3.6418058113388453`*^9}, {3.641805844190374*^9, 3.641805854973188*^9}, {
  3.641807348237225*^9, 3.641807381725403*^9}, {3.643559164205858*^9, 
  3.6435591644298277`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions to plot data from KSG algorithm MIXnYn", "Section",
 InitializationGroup->True,
 CellChangeTimes->{{3.592720072887559*^9, 3.5927200895825453`*^9}, {
  3.644641896471126*^9, 3.644641914680217*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.59271959722079*^9, 3.592719602205916*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"EtaScale", "::", "usage"}], "=", "\"\<Factor for eta\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "PlotMIScan", "]"}], "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"EtaScale", "\[Rule]", 
       RowBox[{"1", "/", "2"}]}], "}"}], "~", "Join", "~", 
     RowBox[{"Options", "[", "ListLogLinearPlot", "]"}]}]}], ";"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.600151592988587*^9, 3.6001516127608433`*^9}, {
   3.600151647498975*^9, 3.600151694324051*^9}, 3.613730866790719*^9, {
   3.613907420697442*^9, 3.6139074561091843`*^9}, {3.613907551245476*^9, 
   3.6139075773957167`*^9}, {3.613907937646854*^9, 3.613907942589669*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotMIScan", "[", 
   RowBox[{"d_", ",", "title_String", ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "PlotMIScan", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "len", ",", "dataraw", ",", "data", ",", "pl", ",", "error", ",", "ep", 
      ",", "opts4plot"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dataraw", "=", 
      RowBox[{
       RowBox[{"GatherBy", "[", 
        RowBox[{"d", ",", "First"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "4", ",", "5"}], "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"MapAt", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"OptionValue", "[", "EtaScale", "]"}], "#"}], "&"}], ",",
            "#", ",", "1"}], "]"}], "&"}], ",", "dataraw", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"len", " ", "=", " ", 
      RowBox[{"Length", " ", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"opts4plot", "=", " ", 
      RowBox[{"FilterRules", "[", 
       RowBox[{
        RowBox[{"{", "opts", "}"}], ",", 
        RowBox[{"Options", "[", "ListLogLinearPlot", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pl", "=", 
      RowBox[{"ListLogLinearPlot", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{"Sort", ",", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "All", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], "]"}], ",", 
        "opts4plot", ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotStyle", "->", 
         RowBox[{"ColorsFromScheme", "[", 
          RowBox[{"len", ",", "\"\<Rainbow\>\""}], "]"}]}], ",", 
        RowBox[{"PlotTheme", "\[Rule]", "None"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{
          RowBox[{"ToString", "[", "len", "]"}], " ", "<>", " ", 
          "\"\<:...\>\"", " ", "<>", 
          RowBox[{"StringTake", "[", 
           RowBox[{"title", ",", 
            RowBox[{"-", 
             RowBox[{"Min", "[", 
              RowBox[{"30", ",", 
               RowBox[{"StringLength", "[", "title", "]"}]}], "]"}]}]}], 
           "]"}]}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "All"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"StyleAxisLabel", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "EtaScale", "]"}], "\[Eta]"}], "]"}],
            ",", "PIm"}], "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"error", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"ErrorBar", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "-", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", "0"}], "}"}], "]"}]}], 
          "}"}], "&"}], ",", "data", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ep", "=", 
      RowBox[{"ErrorListPlot", "[", 
       RowBox[{"error", ",", 
        RowBox[{"PlotStyle", "->", 
         RowBox[{"ColorsFromScheme", "[", 
          RowBox[{"len", ",", "\"\<Rainbow\>\""}], "]"}]}], ",", 
        RowBox[{"PlotTheme", "\[Rule]", "None"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"pl", ",", "ep"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.592719805128509*^9, 3.592719972473754*^9}, {
   3.5927200145561733`*^9, 3.5927200209850817`*^9}, {3.602227647946756*^9, 
   3.60222765531561*^9}, {3.6022276912410803`*^9, 3.602227703542927*^9}, {
   3.6077464425441847`*^9, 3.607746460712631*^9}, {3.607746564823863*^9, 
   3.60774656768758*^9}, {3.608872038547299*^9, 3.608872040082704*^9}, {
   3.6088720829550333`*^9, 3.608872084145719*^9}, {3.6088721591270037`*^9, 
   3.6088722247970552`*^9}, {3.608872262283741*^9, 3.60887227203732*^9}, {
   3.6088723391957397`*^9, 3.608872339636735*^9}, {3.613907402603014*^9, 
   3.613907409232451*^9}, {3.613907597580043*^9, 3.6139076733684464`*^9}, {
   3.613907729830101*^9, 3.613907827198291*^9}, {3.613907863741336*^9, 
   3.613907867145275*^9}, {3.6139079205243053`*^9, 3.613907928445956*^9}, {
   3.6139079989452543`*^9, 3.6139080037238092`*^9}, {3.6139082277012*^9, 
   3.613908270328691*^9}, {3.6139083498010798`*^9, 3.613908395186376*^9}, {
   3.613909021906825*^9, 3.613909024438603*^9}, {3.6296347198464947`*^9, 
   3.6296347305922318`*^9}, {3.634892321333416*^9, 3.634892324465539*^9}, {
   3.634892357404797*^9, 3.634892377875095*^9}, {3.634892535451679*^9, 
   3.6348926369373417`*^9}, {3.635052860222624*^9, 3.6350528869233294`*^9}, 
   3.635052928263693*^9, {3.6350531355916843`*^9, 3.635053157796258*^9}, {
   3.635053234607147*^9, 3.635053242819354*^9}, {3.6350541207890167`*^9, 
   3.63505413353622*^9}}]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1337, 1027},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"9.0 for Linux x86 (32-bit) (February 7, 2013)",
StyleDefinitions->FrontEnd`FileName[{"Creative"}, "PastelColor.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 246, 6, 42, "Input"],
Cell[CellGroupData[{
Cell[828, 30, 180, 3, 83, "Section",
 InitializationGroup->True],
Cell[1011, 35, 203, 3, 37, "Text",
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[1239, 42, 130, 2, 42, "Subsection",
 InitializationGroup->True],
Cell[1372, 46, 259, 5, 63, "Text",
 InitializationGroup->True],
Cell[1634, 53, 1495, 32, 197, "Input",
 InitializationGroup->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[3166, 90, 124, 2, 42, "Subsection",
 InitializationGroup->True],
Cell[3293, 94, 191, 4, 37, "Text",
 InitializationGroup->True],
Cell[3487, 100, 440, 9, 42, "Input",
 InitializationGroup->True],
Cell[3930, 111, 598, 16, 65, "Input",
 InitializationGroup->True],
Cell[4531, 129, 539, 14, 42, "Input"],
Cell[5073, 145, 205, 5, 37, "Text",
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[5303, 154, 1015, 24, 65, "Input",
 InitializationGroup->True],
Cell[6321, 180, 516, 10, 24, "Message"],
Cell[6840, 192, 523, 10, 24, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7400, 207, 612, 13, 42, "Input"],
Cell[8015, 222, 530, 10, 24, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8594, 238, 140, 1, 42, "Subsection"],
Cell[8737, 241, 277, 6, 42, "Input"],
Cell[9017, 249, 3412, 86, 241, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12466, 340, 134, 2, 42, "Subsection",
 InitializationGroup->True],
Cell[12603, 344, 203, 5, 63, "Text",
 InitializationGroup->True],
Cell[12809, 351, 1667, 49, 175, "Input",
 InitializationGroup->True],
Cell[14479, 402, 249, 5, 37, "Text",
 InitializationGroup->True],
Cell[14731, 409, 864, 22, 109, "Input",
 InitializationGroup->True],
Cell[15598, 433, 959, 22, 109, "Input",
 InitializationGroup->True],
Cell[16560, 457, 210, 5, 37, "Text",
 InitializationGroup->True],
Cell[16773, 464, 908, 20, 87, "Input",
 InitializationGroup->True],
Cell[17684, 486, 204, 5, 37, "Text",
 InitializationGroup->True],
Cell[17891, 493, 1049, 26, 109, "Input",
 InitializationGroup->True],
Cell[18943, 521, 197, 3, 37, "Text",
 InitializationGroup->True],
Cell[19143, 526, 472, 12, 42, "Input",
 InitializationGroup->True],
Cell[19618, 540, 125, 1, 37, "Text"],
Cell[19746, 543, 472, 13, 42, "Input",
 InitializationGroup->True],
Cell[20221, 558, 137, 1, 37, "Text"],
Cell[20361, 561, 464, 12, 42, "Input"],
Cell[20828, 575, 135, 2, 37, "Text",
 InitializationGroup->True],
Cell[20966, 579, 632, 18, 65, "Input",
 InitializationGroup->True],
Cell[21601, 599, 135, 1, 37, "Text"],
Cell[21739, 602, 601, 17, 42, "Input"],
Cell[22343, 621, 195, 4, 37, "Text"],
Cell[22541, 627, 839, 25, 65, "Input",
 InitializationGroup->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23429, 658, 305, 7, 83, "Section",
 InitializationGroup->True],
Cell[23737, 667, 293, 6, 63, "Text"],
Cell[24033, 675, 266, 3, 37, "Text"],
Cell[24302, 680, 421, 8, 89, "Text"],
Cell[24726, 690, 838, 21, 65, "Input"],
Cell[25567, 713, 458, 13, 42, "Input"],
Cell[26028, 728, 1500, 44, 198, "Input"],
Cell[27531, 774, 2795, 67, 241, "Input",
 InitializationGroup->True],
Cell[30329, 843, 1819, 45, 153, "Input",
 InitializationGroup->True],
Cell[32151, 890, 1959, 49, 219, "Input"],
Cell[34113, 941, 366, 9, 42, "Input"],
Cell[34482, 952, 477, 12, 42, "Input"],
Cell[34962, 966, 181, 2, 37, "Text"],
Cell[35146, 970, 843, 24, 42, "Input"],
Cell[35992, 996, 3104, 80, 153, "Input"],
Cell[39099, 1078, 1628, 40, 175, "Input"],
Cell[40730, 1120, 981, 23, 42, "Input"],
Cell[41714, 1145, 2949, 62, 87, "Input"],
Cell[44666, 1209, 584, 18, 42, "Input"],
Cell[45253, 1229, 968, 28, 65, "Input"],
Cell[46224, 1259, 250, 5, 37, "Text"],
Cell[46477, 1266, 2310, 53, 219, "Input"],
Cell[48790, 1321, 657, 12, 87, "Input"],
Cell[49450, 1335, 839, 25, 65, "Input",
 InitializationGroup->True],
Cell[50292, 1362, 21785, 464, 1065, "Input",
 InitializationGroup->True],
Cell[72080, 1828, 597, 9, 63, "Text"],
Cell[72680, 1839, 3912, 90, 197, "Input"],
Cell[76595, 1931, 11153, 206, 396, "Input",
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[87773, 2141, 97, 1, 32, "Subsubsection"],
Cell[87873, 2144, 145, 2, 42, "Input"],
Cell[88021, 2148, 2996, 70, 197, "Input"],
Cell[91020, 2220, 1732, 45, 131, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92789, 2270, 97, 1, 32, "Subsubsection"],
Cell[CellGroupData[{
Cell[92911, 2275, 497, 14, 47, "Input"],
Cell[93411, 2291, 1655, 35, 48, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[95127, 2333, 240, 5, 83, "Section",
 InitializationGroup->True],
Cell[95370, 2340, 680, 19, 65, "Input"],
Cell[CellGroupData[{
Cell[96075, 2363, 150, 2, 42, "Subsection"],
Cell[96228, 2367, 422, 8, 63, "Text"],
Cell[96653, 2377, 7245, 170, 354, "Input",
 InitializationGroup->True],
Cell[103901, 2549, 125, 1, 37, "Text"],
Cell[104029, 2552, 4538, 94, 219, "Input"],
Cell[108570, 2648, 344, 6, 37, "Text"],
Cell[108917, 2656, 6975, 150, 549, "Input"],
Cell[115895, 2808, 168, 3, 37, "Text"],
Cell[116066, 2813, 1745, 40, 307, "Input"],
Cell[CellGroupData[{
Cell[117836, 2857, 781, 25, 87, "Input"],
Cell[118620, 2884, 490, 8, 42, "Output"],
Cell[119113, 2894, 518, 9, 42, "Output"],
Cell[119634, 2905, 550, 9, 42, "Output"]
}, Open  ]],
Cell[120199, 2917, 206, 4, 37, "Text"],
Cell[120408, 2923, 4304, 104, 351, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124749, 3032, 107, 1, 42, "Subsection"],
Cell[124859, 3035, 264, 6, 63, "Text"],
Cell[125126, 3043, 3183, 83, 219, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128346, 3131, 273, 5, 42, "Subsection"],
Cell[128622, 3138, 1149, 32, 87, "Input"],
Cell[129774, 3172, 236, 4, 37, "Text"],
Cell[130013, 3178, 868, 25, 42, "Input",
 InitializationGroup->True],
Cell[130884, 3205, 4915, 119, 439, "Input",
 InitializationGroup->True],
Cell[135802, 3326, 95, 1, 37, "Text"],
Cell[135900, 3329, 1625, 37, 241, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137562, 3371, 123, 1, 42, "Subsection"],
Cell[137688, 3374, 570, 12, 42, "Input"],
Cell[138261, 3388, 2852, 66, 241, "Input"],
Cell[141116, 3456, 830, 24, 65, "Input"],
Cell[141949, 3482, 10262, 247, 446, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[152260, 3735, 144, 2, 83, "Section"],
Cell[CellGroupData[{
Cell[152429, 3741, 2726, 75, 197, "Input"],
Cell[155158, 3818, 22834, 460, 313, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[178041, 4284, 162, 2, 83, "Section",
 InitializationGroup->True],
Cell[178206, 4288, 151, 3, 37, "Text"],
Cell[178360, 4293, 644, 12, 141, "Text"],
Cell[179007, 4307, 292, 5, 37, "Text"],
Cell[179302, 4314, 1173, 20, 193, "Text"],
Cell[CellGroupData[{
Cell[180500, 4338, 2041, 40, 131, "Input"],
Cell[182544, 4380, 246, 3, 42, "Output"]
}, Open  ]],
Cell[182805, 4386, 10854, 216, 703, "Input"],
Cell[193662, 4604, 615, 10, 89, "Text"],
Cell[194280, 4616, 9798, 223, 527, "Input"],
Cell[204081, 4841, 6016, 129, 505, "Input"],
Cell[210100, 4972, 38836, 888, 2096, "Input"],
Cell[248939, 5862, 191, 4, 37, "Text"],
Cell[249133, 5868, 5202, 124, 439, "Input"],
Cell[254338, 5994, 290, 7, 63, "Text"],
Cell[254631, 6003, 3961, 96, 219, "Input"],
Cell[258595, 6101, 2645, 52, 131, "Input"],
Cell[261243, 6155, 1744, 49, 65, "Input"],
Cell[CellGroupData[{
Cell[263012, 6208, 630, 17, 42, "Input"],
Cell[263645, 6227, 286, 8, 42, "Output"]
}, Open  ]],
Cell[263946, 6238, 1045, 26, 109, "Input"],
Cell[264994, 6266, 440, 8, 89, "Text"],
Cell[265437, 6276, 2627, 66, 197, "Input"],
Cell[CellGroupData[{
Cell[268089, 6346, 1697, 45, 131, "Input"],
Cell[269789, 6393, 310, 7, 42, "Output"]
}, Open  ]],
Cell[270114, 6403, 1276, 37, 123, "Text"],
Cell[271393, 6442, 3659, 93, 241, "Input"],
Cell[275055, 6537, 174, 4, 37, "Text"],
Cell[275232, 6543, 2982, 72, 197, "Input"],
Cell[278217, 6617, 7580, 162, 395, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285834, 6784, 144, 2, 83, "Section"],
Cell[285981, 6788, 684, 14, 42, "Input"],
Cell[286668, 6804, 1882, 53, 175, "Input"],
Cell[288553, 6859, 489, 9, 42, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289079, 6873, 212, 3, 83, "Section",
 InitializationGroup->True],
Cell[289294, 6878, 144, 2, 42, "Input"],
Cell[289441, 6882, 739, 18, 65, "Input"],
Cell[290183, 6902, 5811, 134, 285, "Input"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
